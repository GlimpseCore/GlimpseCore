/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!**************************!*\
  !*** ./src/Bootstrap.js ***!
  \**************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nif (window.Symbol) {\n    __webpack_require__(/*! ./Agent */ 1);\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvQm9vdHN0cmFwLmpzPzkwZDgiXSwic291cmNlc0NvbnRlbnQiOlsiaWYgKHdpbmRvdy5TeW1ib2wpIHtcbiAgICByZXF1aXJlKCcuL0FnZW50Jyk7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL0Jvb3RzdHJhcC5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 1 */
/*!**********************!*\
  !*** ./src/Agent.ts ***!
  \**********************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _MessagePublisher = __webpack_require__(/*! ./MessagePublisher */ 2);\n\nvar _XHRInspector = __webpack_require__(/*! ./inspectors/XHRInspector */ 7);\n\nvar _FetchInspector = __webpack_require__(/*! ./inspectors/FetchInspector */ 18);\n\nvar _ResourceTimingInspector = __webpack_require__(/*! ./inspectors/ResourceTimingInspector */ 20);\n\nvar _NavigationTimingInspector = __webpack_require__(/*! ./inspectors/NavigationTimingInspector */ 23);\n\nvar _ConsoleInspector = __webpack_require__(/*! ./inspectors/ConsoleInspector */ 25);\n\nvar _PerformanceInspector = __webpack_require__(/*! ./inspectors/PerformanceInspector */ 30);\n\nvar _initializeProxies = __webpack_require__(/*! ./tracing/initializeProxies */ 32);\n\nvar _initializeProxies2 = _interopRequireDefault(_initializeProxies);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar messagePublisher = new _MessagePublisher.MessagePublisher();\n// We initialize the inspectors before the proxies so that they are wired up and\n// ready to receive events from proxies in case a proxy wants to emit an event\n// in its `init` method (the Resource Timing proxy does this).\nnew _XHRInspector.XHRInspector().init(messagePublisher);\nnew _FetchInspector.FetchInspector().init(messagePublisher);\nnew _ResourceTimingInspector.ResourceTimingInspector().init(messagePublisher);\nnew _NavigationTimingInspector.NavigationTimingInspector().init(messagePublisher);\nnew _ConsoleInspector.ConsoleInspector().init(messagePublisher);\nnew _PerformanceInspector.PerformanceInspector().init(messagePublisher);\n(0, _initializeProxies2['default'])();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9BZ2VudC50cz84M2ExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1lc3NhZ2VQdWJsaXNoZXIgfSBmcm9tICcuL01lc3NhZ2VQdWJsaXNoZXInO1xuXG5pbXBvcnQgeyBYSFJJbnNwZWN0b3IgfSBmcm9tICcuL2luc3BlY3RvcnMvWEhSSW5zcGVjdG9yJztcbmltcG9ydCB7IEZldGNoSW5zcGVjdG9yIH0gZnJvbSAnLi9pbnNwZWN0b3JzL0ZldGNoSW5zcGVjdG9yJztcbmltcG9ydCB7IFJlc291cmNlVGltaW5nSW5zcGVjdG9yIH0gZnJvbSAnLi9pbnNwZWN0b3JzL1Jlc291cmNlVGltaW5nSW5zcGVjdG9yJztcbmltcG9ydCB7IE5hdmlnYXRpb25UaW1pbmdJbnNwZWN0b3IgfSBmcm9tICcuL2luc3BlY3RvcnMvTmF2aWdhdGlvblRpbWluZ0luc3BlY3Rvcic7XG5pbXBvcnQgeyBDb25zb2xlSW5zcGVjdG9yIH0gZnJvbSAnLi9pbnNwZWN0b3JzL0NvbnNvbGVJbnNwZWN0b3InO1xuaW1wb3J0IHsgUGVyZm9ybWFuY2VJbnNwZWN0b3IgfSBmcm9tICcuL2luc3BlY3RvcnMvUGVyZm9ybWFuY2VJbnNwZWN0b3InO1xuXG5pbXBvcnQgaW5pdGlhbGl6ZVByb3hpZXMgZnJvbSAnLi90cmFjaW5nL2luaXRpYWxpemVQcm94aWVzJztcblxuY29uc3QgbWVzc2FnZVB1Ymxpc2hlciA9IG5ldyBNZXNzYWdlUHVibGlzaGVyKCk7XG5cbi8vIFdlIGluaXRpYWxpemUgdGhlIGluc3BlY3RvcnMgYmVmb3JlIHRoZSBwcm94aWVzIHNvIHRoYXQgdGhleSBhcmUgd2lyZWQgdXAgYW5kXG4vLyByZWFkeSB0byByZWNlaXZlIGV2ZW50cyBmcm9tIHByb3hpZXMgaW4gY2FzZSBhIHByb3h5IHdhbnRzIHRvIGVtaXQgYW4gZXZlbnRcbi8vIGluIGl0cyBgaW5pdGAgbWV0aG9kICh0aGUgUmVzb3VyY2UgVGltaW5nIHByb3h5IGRvZXMgdGhpcykuXG5uZXcgWEhSSW5zcGVjdG9yKCkuaW5pdChtZXNzYWdlUHVibGlzaGVyKTtcbm5ldyBGZXRjaEluc3BlY3RvcigpLmluaXQobWVzc2FnZVB1Ymxpc2hlcik7XG5uZXcgUmVzb3VyY2VUaW1pbmdJbnNwZWN0b3IoKS5pbml0KG1lc3NhZ2VQdWJsaXNoZXIpO1xubmV3IE5hdmlnYXRpb25UaW1pbmdJbnNwZWN0b3IoKS5pbml0KG1lc3NhZ2VQdWJsaXNoZXIpO1xubmV3IENvbnNvbGVJbnNwZWN0b3IoKS5pbml0KG1lc3NhZ2VQdWJsaXNoZXIpO1xubmV3IFBlcmZvcm1hbmNlSW5zcGVjdG9yKCkuaW5pdChtZXNzYWdlUHVibGlzaGVyKTtcblxuaW5pdGlhbGl6ZVByb3hpZXMoKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BZ2VudC50cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 2 */
/*!*********************************!*\
  !*** ./src/MessagePublisher.ts ***!
  \*********************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MessagePublisher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.chunkMessages = chunkMessages;\nexports.serializeRanges = serializeRanges;\n\nvar _nanoajax = __webpack_require__(/*! nanoajax */ 3);\n\nvar _GeneralUtilities = __webpack_require__(/*! ./common/GeneralUtilities */ 4);\n\nvar _RequestUtilities = __webpack_require__(/*! ./common/RequestUtilities */ 5);\n\nvar _MessageMixins = __webpack_require__(/*! ./common/MessageMixins */ 6);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * break a list of messages into group so that the groups are under maxSize.\n * If any individual message is over maxSize, it will be grouped on its own.\n * returns an of IRange instances, where start is inclusive & end is exclusive.\n *\n * Exported for test purposes.\n */\nfunction chunkMessages(messageBodies, maxSize) {\n    var ranges = [];\n    var sum = 0;\n    var lastStart = 0;\n    for (var i = 0; i < messageBodies.length; i++) {\n        sum += messageBodies[i].length;\n        if (messageBodies[i].length > maxSize) {\n            if (lastStart !== i) {\n                // when a single message is over the limit, we want to send previous messages in their own batch\n                ranges.push({ start: lastStart, end: i });\n            }\n            ranges.push({ start: i, end: i + 1 });\n            lastStart = i + 1;\n            sum = 0;\n        } else if (sum > maxSize) {\n            ranges.push({ start: lastStart, end: i });\n            lastStart = i;\n            sum = messageBodies[i].length;\n        }\n    }\n    if (lastStart < messageBodies.length) {\n        ranges.push({ start: lastStart, end: messageBodies.length });\n    }\n    return ranges;\n}\n/**\n * given an array of serialized message bodies & array of ranges,\n * break them into JSON-serialized sub-arrays as defined by the ranges.\n *\n * Exported for test purposes.\n */\nfunction serializeRanges(messageBodies, ranges) {\n    var payloads = [];\n    for (var i = 0; i < ranges.length; i++) {\n        if (ranges[i].end > ranges[i].start) {\n            var subBodies = messageBodies.slice(ranges[i].start, ranges[i].end);\n            var payload = '[' + subBodies.join(',') + ']';\n            payloads.push(payload);\n        }\n    }\n    return payloads;\n}\n\nvar MessagePublisher = exports.MessagePublisher = function () {\n    function MessagePublisher() {\n        _classCallCheck(this, MessagePublisher);\n\n        this.ordinal = 1;\n        this.messageQueue = [];\n        this.messageTimeout = undefined;\n    }\n\n    _createClass(MessagePublisher, [{\n        key: 'createMessage',\n        value: function createMessage(type, payload) {\n            var msg = {\n                id: (0, _GeneralUtilities.getGuid)(),\n                types: [type],\n                payload: payload,\n                context: {\n                    id: (0, _RequestUtilities.getRequestId)(),\n                    type: 'Request'\n                },\n                ordinal: this.ordinal++,\n                agent: {\n                    source: 'browser'\n                },\n                offset: 0\n            };\n            (0, _MessageMixins.addOffset)(performance.now(), msg);\n            return msg;\n        }\n    }, {\n        key: 'publishMessage',\n        value: function publishMessage(message) {\n            var _this = this;\n\n            // finish getting message ready for sending\n            message.payload = JSON.stringify(message); // tslint:disable-line:no-string-literal\n            // add messages to queu\n            this.messageQueue.push(message);\n            // only setup the timeout if we need to\n            if (!this.messageTimeout) {\n                this.messageTimeout = setTimeout(function () {\n                    _this.messageTimeout = undefined;\n                    _this.sendData();\n                }, MessagePublisher.timeout);\n            }\n        }\n    }, {\n        key: 'createAndPublishMessage',\n        value: function createAndPublishMessage(type, payload) {\n            this.publishMessage(this.createMessage(type, payload));\n        }\n    }, {\n        key: 'sendPayload',\n        value: function sendPayload(body) {\n            // send data with all the data that we have batched up\n            (0, _nanoajax.ajax)({\n                url: (0, _RequestUtilities.getMessageIngressUrl)(),\n                method: 'POST',\n                body: body\n            }, function () {\n                // not doing anything atm\n            });\n        }\n    }, {\n        key: 'sendData',\n        value: function sendData() {\n            var _this2 = this;\n\n            // we'll chunk the pooled messages into individual requests to try stay under\n            // some size limit for http payloads.\n            var maxBodySize = 100000;\n            var bodies = [];\n            this.messageQueue.forEach(function (m) {\n                bodies.push(JSON.stringify(m));\n            });\n            var ranges = chunkMessages(bodies, maxBodySize);\n            var payloads = serializeRanges(bodies, ranges);\n            payloads.forEach(function (payload) {\n                _this2.sendPayload(payload);\n            });\n            this.messageQueue = [];\n        }\n    }]);\n\n    return MessagePublisher;\n}();\n\nMessagePublisher.timeout = 250;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9NZXNzYWdlUHVibGlzaGVyLnRzPzNmMGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWpheCB9IGZyb20gJ25hbm9hamF4JztcbmltcG9ydCB7IGdldEd1aWQgfSBmcm9tICcuL2NvbW1vbi9HZW5lcmFsVXRpbGl0aWVzJztcbmltcG9ydCB7IGdldFJlcXVlc3RJZCwgZ2V0TWVzc2FnZUluZ3Jlc3NVcmwgfSBmcm9tICcuL2NvbW1vbi9SZXF1ZXN0VXRpbGl0aWVzJztcbmltcG9ydCB7IGFkZE9mZnNldCB9IGZyb20gJy4vY29tbW9uL01lc3NhZ2VNaXhpbnMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElNZXNzYWdlIHtcbiAgICBjb250ZXh0OiB7XG4gICAgICAgIGlkOiBzdHJpbmcsXG4gICAgICAgIHR5cGU6IHN0cmluZ1xuICAgIH07XG4gICAgaWQ6IHN0cmluZztcbiAgICBvcmRpbmFsOiBudW1iZXI7XG4gICAgcGF5bG9hZDtcbiAgICB0eXBlczogc3RyaW5nW107XG4gICAgYWdlbnQ6IHtcbiAgICAgICAgc291cmNlOiAnYnJvd3Nlcic7XG4gICAgfTtcbiAgICBvZmZzZXQ6IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIElSYW5nZSB7XG4gICAgc3RhcnQ6IG51bWJlcjtcbiAgICBlbmQ6IG51bWJlcjtcbn1cblxuLyoqXG4gKiBicmVhayBhIGxpc3Qgb2YgbWVzc2FnZXMgaW50byBncm91cCBzbyB0aGF0IHRoZSBncm91cHMgYXJlIHVuZGVyIG1heFNpemUuXG4gKiBJZiBhbnkgaW5kaXZpZHVhbCBtZXNzYWdlIGlzIG92ZXIgbWF4U2l6ZSwgaXQgd2lsbCBiZSBncm91cGVkIG9uIGl0cyBvd24uXG4gKiByZXR1cm5zIGFuIG9mIElSYW5nZSBpbnN0YW5jZXMsIHdoZXJlIHN0YXJ0IGlzIGluY2x1c2l2ZSAmIGVuZCBpcyBleGNsdXNpdmUuXG4gKlxuICogRXhwb3J0ZWQgZm9yIHRlc3QgcHVycG9zZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjaHVua01lc3NhZ2VzKG1lc3NhZ2VCb2RpZXM6IHN0cmluZ1tdLCBtYXhTaXplOiBudW1iZXIpOiBJUmFuZ2VbXSB7XG4gICAgY29uc3QgcmFuZ2VzOiBJUmFuZ2VbXSA9IFtdO1xuICAgIGxldCBzdW0gPSAwO1xuICAgIGxldCBsYXN0U3RhcnQgPSAwO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtZXNzYWdlQm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHN1bSArPSBtZXNzYWdlQm9kaWVzW2ldLmxlbmd0aDtcbiAgICAgICAgaWYgKG1lc3NhZ2VCb2RpZXNbaV0ubGVuZ3RoID4gbWF4U2l6ZSkge1xuICAgICAgICAgICAgaWYgKGxhc3RTdGFydCAhPT0gaSkge1xuICAgICAgICAgICAgICAgIC8vIHdoZW4gYSBzaW5nbGUgbWVzc2FnZSBpcyBvdmVyIHRoZSBsaW1pdCwgd2Ugd2FudCB0byBzZW5kIHByZXZpb3VzIG1lc3NhZ2VzIGluIHRoZWlyIG93biBiYXRjaFxuICAgICAgICAgICAgICAgIHJhbmdlcy5wdXNoKHsgc3RhcnQ6IGxhc3RTdGFydCwgZW5kOiBpIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmFuZ2VzLnB1c2goeyBzdGFydDogaSwgZW5kOiBpICsgMSB9KTtcbiAgICAgICAgICAgIGxhc3RTdGFydCA9IGkgKyAxO1xuICAgICAgICAgICAgc3VtID0gMDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzdW0gPiBtYXhTaXplKSB7XG4gICAgICAgICAgICByYW5nZXMucHVzaCh7IHN0YXJ0OiBsYXN0U3RhcnQsIGVuZDogaSB9KTtcbiAgICAgICAgICAgIGxhc3RTdGFydCA9IGk7XG4gICAgICAgICAgICBzdW0gPSBtZXNzYWdlQm9kaWVzW2ldLmxlbmd0aDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChsYXN0U3RhcnQgPCBtZXNzYWdlQm9kaWVzLmxlbmd0aCkge1xuICAgICAgICByYW5nZXMucHVzaCh7IHN0YXJ0OiBsYXN0U3RhcnQsIGVuZDogbWVzc2FnZUJvZGllcy5sZW5ndGggfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJhbmdlcztcbn1cblxuLyoqXG4gKiBnaXZlbiBhbiBhcnJheSBvZiBzZXJpYWxpemVkIG1lc3NhZ2UgYm9kaWVzICYgYXJyYXkgb2YgcmFuZ2VzLFxuICogYnJlYWsgdGhlbSBpbnRvIEpTT04tc2VyaWFsaXplZCBzdWItYXJyYXlzIGFzIGRlZmluZWQgYnkgdGhlIHJhbmdlcy5cbiAqXG4gKiBFeHBvcnRlZCBmb3IgdGVzdCBwdXJwb3Nlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZVJhbmdlcyhtZXNzYWdlQm9kaWVzOiBzdHJpbmdbXSwgcmFuZ2VzOiBJUmFuZ2VbXSk6IHN0cmluZ1tdIHtcbiAgICBjb25zdCBwYXlsb2Fkczogc3RyaW5nW10gPSBbXTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmFuZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChyYW5nZXNbaV0uZW5kID4gcmFuZ2VzW2ldLnN0YXJ0KSB7XG4gICAgICAgICAgICBjb25zdCBzdWJCb2RpZXMgPSBtZXNzYWdlQm9kaWVzLnNsaWNlKHJhbmdlc1tpXS5zdGFydCwgcmFuZ2VzW2ldLmVuZCk7XG4gICAgICAgICAgICBjb25zdCBwYXlsb2FkID0gJ1snICsgc3ViQm9kaWVzLmpvaW4oJywnKSArICddJztcbiAgICAgICAgICAgIHBheWxvYWRzLnB1c2gocGF5bG9hZCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBheWxvYWRzO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElNZXNzYWdlUHVibGlzaGVyIHtcbiAgICBjcmVhdGVNZXNzYWdlKHR5cGU6IHN0cmluZywgcGF5bG9hZCk6IElNZXNzYWdlO1xuXG4gICAgcHVibGlzaE1lc3NhZ2UobWVzc2FnZTogSU1lc3NhZ2UpOiB2b2lkO1xuXG4gICAgY3JlYXRlQW5kUHVibGlzaE1lc3NhZ2UodHlwZTogc3RyaW5nLCBwYXlsb2FkKTogdm9pZDtcbn1cblxuZXhwb3J0IGNsYXNzIE1lc3NhZ2VQdWJsaXNoZXIgaW1wbGVtZW50cyBJTWVzc2FnZVB1Ymxpc2hlciB7XG4gICAgcHJpdmF0ZSBzdGF0aWMgdGltZW91dCA9IDI1MDtcbiAgICBwcml2YXRlIG9yZGluYWwgPSAxO1xuICAgIHByaXZhdGUgbWVzc2FnZVF1ZXVlOiBJTWVzc2FnZVtdID0gW107XG4gICAgcHJpdmF0ZSBtZXNzYWdlVGltZW91dCA9IHVuZGVmaW5lZDtcblxuICAgIHB1YmxpYyBjcmVhdGVNZXNzYWdlKHR5cGUsIHBheWxvYWQpOiBJTWVzc2FnZSB7XG4gICAgICAgIGNvbnN0IG1zZzogSU1lc3NhZ2UgPSB7XG4gICAgICAgICAgICBpZDogZ2V0R3VpZCgpLFxuICAgICAgICAgICAgdHlwZXM6IFt0eXBlXSxcbiAgICAgICAgICAgIHBheWxvYWQsXG4gICAgICAgICAgICBjb250ZXh0OiB7XG4gICAgICAgICAgICAgICAgaWQ6IGdldFJlcXVlc3RJZCgpLFxuICAgICAgICAgICAgICAgIHR5cGU6ICdSZXF1ZXN0J1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9yZGluYWw6IHRoaXMub3JkaW5hbCsrLFxuICAgICAgICAgICAgYWdlbnQ6IHtcbiAgICAgICAgICAgICAgICBzb3VyY2U6ICdicm93c2VyJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9mZnNldDogMFxuICAgICAgICB9O1xuXG4gICAgICAgIGFkZE9mZnNldChwZXJmb3JtYW5jZS5ub3coKSwgbXNnKTtcbiAgICAgICAgcmV0dXJuIG1zZztcblxuICAgIH1cblxuICAgIHB1YmxpYyBwdWJsaXNoTWVzc2FnZShtZXNzYWdlOiBJTWVzc2FnZSk6IHZvaWQge1xuICAgICAgICAvLyBmaW5pc2ggZ2V0dGluZyBtZXNzYWdlIHJlYWR5IGZvciBzZW5kaW5nXG4gICAgICAgIG1lc3NhZ2UucGF5bG9hZCA9IEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpOyAvLyB0c2xpbnQ6ZGlzYWJsZS1saW5lOm5vLXN0cmluZy1saXRlcmFsXG5cbiAgICAgICAgLy8gYWRkIG1lc3NhZ2VzIHRvIHF1ZXVcbiAgICAgICAgdGhpcy5tZXNzYWdlUXVldWUucHVzaChtZXNzYWdlKTtcblxuICAgICAgICAvLyBvbmx5IHNldHVwIHRoZSB0aW1lb3V0IGlmIHdlIG5lZWQgdG9cbiAgICAgICAgaWYgKCF0aGlzLm1lc3NhZ2VUaW1lb3V0KSB7XG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2VUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlVGltZW91dCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbmREYXRhKCk7XG4gICAgICAgICAgICB9LCBNZXNzYWdlUHVibGlzaGVyLnRpbWVvdXQpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHB1YmxpYyBjcmVhdGVBbmRQdWJsaXNoTWVzc2FnZSh0eXBlOiBzdHJpbmcsIHBheWxvYWQpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5wdWJsaXNoTWVzc2FnZSh0aGlzLmNyZWF0ZU1lc3NhZ2UodHlwZSwgcGF5bG9hZCkpO1xuICAgIH07XG5cbiAgICBwcml2YXRlIHNlbmRQYXlsb2FkKGJvZHkpIHtcbiAgICAgICAgLy8gc2VuZCBkYXRhIHdpdGggYWxsIHRoZSBkYXRhIHRoYXQgd2UgaGF2ZSBiYXRjaGVkIHVwXG4gICAgICAgIGFqYXgoe1xuICAgICAgICAgICAgdXJsOiBnZXRNZXNzYWdlSW5ncmVzc1VybCgpLFxuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBib2R5OiBib2R5XG4gICAgICAgIH0sICgpID0+IHtcbiAgICAgICAgICAgIC8vIG5vdCBkb2luZyBhbnl0aGluZyBhdG1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzZW5kRGF0YSgpIHtcbiAgICAgICAgLy8gd2UnbGwgY2h1bmsgdGhlIHBvb2xlZCBtZXNzYWdlcyBpbnRvIGluZGl2aWR1YWwgcmVxdWVzdHMgdG8gdHJ5IHN0YXkgdW5kZXJcbiAgICAgICAgLy8gc29tZSBzaXplIGxpbWl0IGZvciBodHRwIHBheWxvYWRzLlxuXG4gICAgICAgIGNvbnN0IG1heEJvZHlTaXplID0gMTAwMDAwO1xuICAgICAgICBjb25zdCBib2RpZXM6IHN0cmluZ1tdID0gW107XG5cbiAgICAgICAgdGhpcy5tZXNzYWdlUXVldWUuZm9yRWFjaCgobSkgPT4ge1xuICAgICAgICAgICAgYm9kaWVzLnB1c2goSlNPTi5zdHJpbmdpZnkobSkpO1xuICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCByYW5nZXMgPSBjaHVua01lc3NhZ2VzKGJvZGllcywgbWF4Qm9keVNpemUpO1xuICAgICAgICBjb25zdCBwYXlsb2FkcyA9IHNlcmlhbGl6ZVJhbmdlcyhib2RpZXMsIHJhbmdlcyk7XG5cbiAgICAgICAgcGF5bG9hZHMuZm9yRWFjaCgocGF5bG9hZCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZW5kUGF5bG9hZChwYXlsb2FkKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5tZXNzYWdlUXVldWUgPSBbXTtcbiAgICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvTWVzc2FnZVB1Ymxpc2hlci50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTs7O0FBcUJBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTs7Ozs7O0FBTUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVNBOzs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOzs7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBWkE7QUFlQTtBQUNBO0FBRUE7OztBQUVBOzs7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7Ozs7OztBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7Ozs7OztBQTVFQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 3 */
/*!*****************************!*\
  !*** ./~/nanoajax/index.js ***!
  \*****************************/
/***/ function(module, exports) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {// Best place to find information on XHR features is:\n// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n\nvar reqfields = [\n  'responseType', 'withCredentials', 'timeout', 'onprogress'\n]\n\n// Simple and small ajax function\n// Takes a parameters object and a callback function\n// Parameters:\n//  - url: string, required\n//  - headers: object of `{header_name: header_value, ...}`\n//  - body:\n//      + string (sets content type to 'application/x-www-form-urlencoded' if not set in headers)\n//      + FormData (doesn't set content type so that browser will set as appropriate)\n//  - method: 'GET', 'POST', etc. Defaults to 'GET' or 'POST' based on body\n//  - cors: If your using cross-origin, you will need this true for IE8-9\n//\n// The following parameters are passed onto the xhr object.\n// IMPORTANT NOTE: The caller is responsible for compatibility checking.\n//  - responseType: string, various compatability, see xhr docs for enum options\n//  - withCredentials: boolean, IE10+, CORS only\n//  - timeout: long, ms timeout, IE8+\n//  - onprogress: callback, IE10+\n//\n// Callback function prototype:\n//  - statusCode from request\n//  - response\n//    + if responseType set and supported by browser, this is an object of some type (see docs)\n//    + otherwise if request completed, this is the string text of the response\n//    + if request is aborted, this is \"Abort\"\n//    + if request times out, this is \"Timeout\"\n//    + if request errors before completing (probably a CORS issue), this is \"Error\"\n//  - request object\n//\n// Returns the request object. So you can call .abort() or other methods\n//\n// DEPRECATIONS:\n//  - Passing a string instead of the params object has been removed!\n//\nexports.ajax = function (params, callback) {\n  // Any variable used more than once is var'd here because\n  // minification will munge the variables whereas it can't munge\n  // the object access.\n  var headers = params.headers || {}\n    , body = params.body\n    , method = params.method || (body ? 'POST' : 'GET')\n    , called = false\n\n  var req = getRequest(params.cors)\n\n  function cb(statusCode, responseText) {\n    return function () {\n      if (!called) {\n        callback(req.status === undefined ? statusCode : req.status,\n                 req.status === 0 ? \"Error\" : (req.response || req.responseText || responseText),\n                 req)\n        called = true\n      }\n    }\n  }\n\n  req.open(method, params.url, true)\n\n  var success = req.onload = cb(200)\n  req.onreadystatechange = function () {\n    if (req.readyState === 4) success()\n  }\n  req.onerror = cb(null, 'Error')\n  req.ontimeout = cb(null, 'Timeout')\n  req.onabort = cb(null, 'Abort')\n\n  if (body) {\n    setDefault(headers, 'X-Requested-With', 'XMLHttpRequest')\n\n    if (!global.FormData || !(body instanceof global.FormData)) {\n      setDefault(headers, 'Content-Type', 'application/x-www-form-urlencoded')\n    }\n  }\n\n  for (var i = 0, len = reqfields.length, field; i < len; i++) {\n    field = reqfields[i]\n    if (params[field] !== undefined)\n      req[field] = params[field]\n  }\n\n  for (var field in headers)\n    req.setRequestHeader(field, headers[field])\n\n  req.send(body)\n\n  return req\n}\n\nfunction getRequest(cors) {\n  // XDomainRequest is only way to do CORS in IE 8 and 9\n  // But XDomainRequest isn't standards-compatible\n  // Notably, it doesn't allow cookies to be sent or set by servers\n  // IE 10+ is standards-compatible in its XMLHttpRequest\n  // but IE 10 can still have an XDomainRequest object, so we don't want to use it\n  if (cors && global.XDomainRequest && !/MSIE 1/.test(navigator.userAgent))\n    return new XDomainRequest\n  if (global.XMLHttpRequest)\n    return new XMLHttpRequest\n}\n\nfunction setDefault(obj, key, value) {\n  obj[key] = obj[key] || value\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vbmFub2FqYXgvaW5kZXguanM/MGNiMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCZXN0IHBsYWNlIHRvIGZpbmQgaW5mb3JtYXRpb24gb24gWEhSIGZlYXR1cmVzIGlzOlxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1hNTEh0dHBSZXF1ZXN0XG5cbnZhciByZXFmaWVsZHMgPSBbXG4gICdyZXNwb25zZVR5cGUnLCAnd2l0aENyZWRlbnRpYWxzJywgJ3RpbWVvdXQnLCAnb25wcm9ncmVzcydcbl1cblxuLy8gU2ltcGxlIGFuZCBzbWFsbCBhamF4IGZ1bmN0aW9uXG4vLyBUYWtlcyBhIHBhcmFtZXRlcnMgb2JqZWN0IGFuZCBhIGNhbGxiYWNrIGZ1bmN0aW9uXG4vLyBQYXJhbWV0ZXJzOlxuLy8gIC0gdXJsOiBzdHJpbmcsIHJlcXVpcmVkXG4vLyAgLSBoZWFkZXJzOiBvYmplY3Qgb2YgYHtoZWFkZXJfbmFtZTogaGVhZGVyX3ZhbHVlLCAuLi59YFxuLy8gIC0gYm9keTpcbi8vICAgICAgKyBzdHJpbmcgKHNldHMgY29udGVudCB0eXBlIHRvICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnIGlmIG5vdCBzZXQgaW4gaGVhZGVycylcbi8vICAgICAgKyBGb3JtRGF0YSAoZG9lc24ndCBzZXQgY29udGVudCB0eXBlIHNvIHRoYXQgYnJvd3NlciB3aWxsIHNldCBhcyBhcHByb3ByaWF0ZSlcbi8vICAtIG1ldGhvZDogJ0dFVCcsICdQT1NUJywgZXRjLiBEZWZhdWx0cyB0byAnR0VUJyBvciAnUE9TVCcgYmFzZWQgb24gYm9keVxuLy8gIC0gY29yczogSWYgeW91ciB1c2luZyBjcm9zcy1vcmlnaW4sIHlvdSB3aWxsIG5lZWQgdGhpcyB0cnVlIGZvciBJRTgtOVxuLy9cbi8vIFRoZSBmb2xsb3dpbmcgcGFyYW1ldGVycyBhcmUgcGFzc2VkIG9udG8gdGhlIHhociBvYmplY3QuXG4vLyBJTVBPUlRBTlQgTk9URTogVGhlIGNhbGxlciBpcyByZXNwb25zaWJsZSBmb3IgY29tcGF0aWJpbGl0eSBjaGVja2luZy5cbi8vICAtIHJlc3BvbnNlVHlwZTogc3RyaW5nLCB2YXJpb3VzIGNvbXBhdGFiaWxpdHksIHNlZSB4aHIgZG9jcyBmb3IgZW51bSBvcHRpb25zXG4vLyAgLSB3aXRoQ3JlZGVudGlhbHM6IGJvb2xlYW4sIElFMTArLCBDT1JTIG9ubHlcbi8vICAtIHRpbWVvdXQ6IGxvbmcsIG1zIHRpbWVvdXQsIElFOCtcbi8vICAtIG9ucHJvZ3Jlc3M6IGNhbGxiYWNrLCBJRTEwK1xuLy9cbi8vIENhbGxiYWNrIGZ1bmN0aW9uIHByb3RvdHlwZTpcbi8vICAtIHN0YXR1c0NvZGUgZnJvbSByZXF1ZXN0XG4vLyAgLSByZXNwb25zZVxuLy8gICAgKyBpZiByZXNwb25zZVR5cGUgc2V0IGFuZCBzdXBwb3J0ZWQgYnkgYnJvd3NlciwgdGhpcyBpcyBhbiBvYmplY3Qgb2Ygc29tZSB0eXBlIChzZWUgZG9jcylcbi8vICAgICsgb3RoZXJ3aXNlIGlmIHJlcXVlc3QgY29tcGxldGVkLCB0aGlzIGlzIHRoZSBzdHJpbmcgdGV4dCBvZiB0aGUgcmVzcG9uc2Vcbi8vICAgICsgaWYgcmVxdWVzdCBpcyBhYm9ydGVkLCB0aGlzIGlzIFwiQWJvcnRcIlxuLy8gICAgKyBpZiByZXF1ZXN0IHRpbWVzIG91dCwgdGhpcyBpcyBcIlRpbWVvdXRcIlxuLy8gICAgKyBpZiByZXF1ZXN0IGVycm9ycyBiZWZvcmUgY29tcGxldGluZyAocHJvYmFibHkgYSBDT1JTIGlzc3VlKSwgdGhpcyBpcyBcIkVycm9yXCJcbi8vICAtIHJlcXVlc3Qgb2JqZWN0XG4vL1xuLy8gUmV0dXJucyB0aGUgcmVxdWVzdCBvYmplY3QuIFNvIHlvdSBjYW4gY2FsbCAuYWJvcnQoKSBvciBvdGhlciBtZXRob2RzXG4vL1xuLy8gREVQUkVDQVRJT05TOlxuLy8gIC0gUGFzc2luZyBhIHN0cmluZyBpbnN0ZWFkIG9mIHRoZSBwYXJhbXMgb2JqZWN0IGhhcyBiZWVuIHJlbW92ZWQhXG4vL1xuZXhwb3J0cy5hamF4ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgLy8gQW55IHZhcmlhYmxlIHVzZWQgbW9yZSB0aGFuIG9uY2UgaXMgdmFyJ2QgaGVyZSBiZWNhdXNlXG4gIC8vIG1pbmlmaWNhdGlvbiB3aWxsIG11bmdlIHRoZSB2YXJpYWJsZXMgd2hlcmVhcyBpdCBjYW4ndCBtdW5nZVxuICAvLyB0aGUgb2JqZWN0IGFjY2Vzcy5cbiAgdmFyIGhlYWRlcnMgPSBwYXJhbXMuaGVhZGVycyB8fCB7fVxuICAgICwgYm9keSA9IHBhcmFtcy5ib2R5XG4gICAgLCBtZXRob2QgPSBwYXJhbXMubWV0aG9kIHx8IChib2R5ID8gJ1BPU1QnIDogJ0dFVCcpXG4gICAgLCBjYWxsZWQgPSBmYWxzZVxuXG4gIHZhciByZXEgPSBnZXRSZXF1ZXN0KHBhcmFtcy5jb3JzKVxuXG4gIGZ1bmN0aW9uIGNiKHN0YXR1c0NvZGUsIHJlc3BvbnNlVGV4dCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIWNhbGxlZCkge1xuICAgICAgICBjYWxsYmFjayhyZXEuc3RhdHVzID09PSB1bmRlZmluZWQgPyBzdGF0dXNDb2RlIDogcmVxLnN0YXR1cyxcbiAgICAgICAgICAgICAgICAgcmVxLnN0YXR1cyA9PT0gMCA/IFwiRXJyb3JcIiA6IChyZXEucmVzcG9uc2UgfHwgcmVxLnJlc3BvbnNlVGV4dCB8fCByZXNwb25zZVRleHQpLFxuICAgICAgICAgICAgICAgICByZXEpXG4gICAgICAgIGNhbGxlZCA9IHRydWVcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXEub3BlbihtZXRob2QsIHBhcmFtcy51cmwsIHRydWUpXG5cbiAgdmFyIHN1Y2Nlc3MgPSByZXEub25sb2FkID0gY2IoMjAwKVxuICByZXEub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgIGlmIChyZXEucmVhZHlTdGF0ZSA9PT0gNCkgc3VjY2VzcygpXG4gIH1cbiAgcmVxLm9uZXJyb3IgPSBjYihudWxsLCAnRXJyb3InKVxuICByZXEub250aW1lb3V0ID0gY2IobnVsbCwgJ1RpbWVvdXQnKVxuICByZXEub25hYm9ydCA9IGNiKG51bGwsICdBYm9ydCcpXG5cbiAgaWYgKGJvZHkpIHtcbiAgICBzZXREZWZhdWx0KGhlYWRlcnMsICdYLVJlcXVlc3RlZC1XaXRoJywgJ1hNTEh0dHBSZXF1ZXN0JylcblxuICAgIGlmICghZ2xvYmFsLkZvcm1EYXRhIHx8ICEoYm9keSBpbnN0YW5jZW9mIGdsb2JhbC5Gb3JtRGF0YSkpIHtcbiAgICAgIHNldERlZmF1bHQoaGVhZGVycywgJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnKVxuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSByZXFmaWVsZHMubGVuZ3RoLCBmaWVsZDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgZmllbGQgPSByZXFmaWVsZHNbaV1cbiAgICBpZiAocGFyYW1zW2ZpZWxkXSAhPT0gdW5kZWZpbmVkKVxuICAgICAgcmVxW2ZpZWxkXSA9IHBhcmFtc1tmaWVsZF1cbiAgfVxuXG4gIGZvciAodmFyIGZpZWxkIGluIGhlYWRlcnMpXG4gICAgcmVxLnNldFJlcXVlc3RIZWFkZXIoZmllbGQsIGhlYWRlcnNbZmllbGRdKVxuXG4gIHJlcS5zZW5kKGJvZHkpXG5cbiAgcmV0dXJuIHJlcVxufVxuXG5mdW5jdGlvbiBnZXRSZXF1ZXN0KGNvcnMpIHtcbiAgLy8gWERvbWFpblJlcXVlc3QgaXMgb25seSB3YXkgdG8gZG8gQ09SUyBpbiBJRSA4IGFuZCA5XG4gIC8vIEJ1dCBYRG9tYWluUmVxdWVzdCBpc24ndCBzdGFuZGFyZHMtY29tcGF0aWJsZVxuICAvLyBOb3RhYmx5LCBpdCBkb2Vzbid0IGFsbG93IGNvb2tpZXMgdG8gYmUgc2VudCBvciBzZXQgYnkgc2VydmVyc1xuICAvLyBJRSAxMCsgaXMgc3RhbmRhcmRzLWNvbXBhdGlibGUgaW4gaXRzIFhNTEh0dHBSZXF1ZXN0XG4gIC8vIGJ1dCBJRSAxMCBjYW4gc3RpbGwgaGF2ZSBhbiBYRG9tYWluUmVxdWVzdCBvYmplY3QsIHNvIHdlIGRvbid0IHdhbnQgdG8gdXNlIGl0XG4gIGlmIChjb3JzICYmIGdsb2JhbC5YRG9tYWluUmVxdWVzdCAmJiAhL01TSUUgMS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSlcbiAgICByZXR1cm4gbmV3IFhEb21haW5SZXF1ZXN0XG4gIGlmIChnbG9iYWwuWE1MSHR0cFJlcXVlc3QpXG4gICAgcmV0dXJuIG5ldyBYTUxIdHRwUmVxdWVzdFxufVxuXG5mdW5jdGlvbiBzZXREZWZhdWx0KG9iaiwga2V5LCB2YWx1ZSkge1xuICBvYmpba2V5XSA9IG9ialtrZXldIHx8IHZhbHVlXG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmFub2FqYXgvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 4 */
/*!****************************************!*\
  !*** ./src/common/GeneralUtilities.ts ***!
  \****************************************/
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getGuid = getGuid;\nexports.convertBlobToText = convertBlobToText;\nfunction getGuid() {\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        /* tslint:disable:no-bitwise */\n        var r = Math.random() * 16 | 0,\n            v = c === 'x' ? r : r & 0x3 | 0x8;\n        /* tslint:enable:no-bitwise */\n        return v.toString(16);\n    });\n}\nfunction convertBlobToText(blob, encoding, cb) {\n    var fileReader = new FileReader();\n    fileReader.onloadend = function () {\n        cb(fileReader.result);\n    };\n    fileReader.readAsText(blob, encoding);\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21tb24vR2VuZXJhbFV0aWxpdGllcy50cz9lMGY4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBnZXRHdWlkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICd4eHh4eHh4eHh4eHg0eHh4eXh4eHh4eHh4eHh4eHh4eCcucmVwbGFjZSgvW3h5XS9nLCAoYykgPT4ge1xuICAgICAgICAvKiB0c2xpbnQ6ZGlzYWJsZTpuby1iaXR3aXNlICovXG4gICAgICAgIGNvbnN0IHIgPSBNYXRoLnJhbmRvbSgpICogMTYgfCAwLCB2ID0gYyA9PT0gJ3gnID8gciA6IChyICYgMHgzIHwgMHg4KTtcbiAgICAgICAgLyogdHNsaW50OmVuYWJsZTpuby1iaXR3aXNlICovXG4gICAgICAgIHJldHVybiB2LnRvU3RyaW5nKDE2KTtcbiAgICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRCbG9iVG9UZXh0KGJsb2I6IEJsb2IsIGVuY29kaW5nOiBzdHJpbmcsIGNiOiAoY29udGVudDogc3RyaW5nKSA9PiB2b2lkKSB7XG4gICAgY29uc3QgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgZmlsZVJlYWRlci5vbmxvYWRlbmQgPSAoKSA9PiB7XG4gICAgICAgIGNiKGZpbGVSZWFkZXIucmVzdWx0KTtcbiAgICB9O1xuICAgIGZpbGVSZWFkZXIucmVhZEFzVGV4dChibG9iLCBlbmNvZGluZyk7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvY29tbW9uL0dlbmVyYWxVdGlsaXRpZXMudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 5 */
/*!****************************************!*\
  !*** ./src/common/RequestUtilities.ts ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getRequestId = getRequestId;\nexports.addEvent = addEvent;\nexports.getCookie = getCookie;\nexports.getHeaderKeys = getHeaderKeys;\nexports.normalizeHeaders = normalizeHeaders;\nexports.getMessageIngressUrl = getMessageIngressUrl;\nexports.parseUrl = parseUrl;\nexports.stringifyUrl = stringifyUrl;\nexports.resolveUrl = resolveUrl;\n\nvar _GeneralUtilities = __webpack_require__(/*! ./GeneralUtilities */ 4);\n\nfunction getRequestId() {\n    // NOTE: agent should look to see if it can get the id\n    //       from a script tag first, then if it can't find\n    //       it there look to for a cookie (in the case where\n    //       we can't inject a script tag) and finally it will\n    //       create one which will be used moving forward\n    //       (CDN scenario).\n    var id = document.getElementById('__glimpse_browser_agent').getAttribute('data-request-id');\n    if (!id) {\n        id = getCookie('.Glimpse.RequestId');\n    }\n    if (!id) {\n        id = (0, _GeneralUtilities.getGuid)();\n    }\n    return id;\n}\nfunction addEvent(element, eventName, cb) {\n    if (element.addEventListener) {\n        element.addEventListener(eventName, cb, false);\n    } else if (element.attachEvent) {\n        element.attachEvent('on' + eventName, cb);\n    }\n}\nfunction getCookie(cookie) {\n    // Modified from https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie\n    var regexp = new RegExp('(?:(?:^|.*;\\\\s*)' + cookie + '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$');\n    return document.cookie.replace(regexp, '$1');\n}\nfunction getHeaderKeys(headers) {\n    var headerKeys = [];\n    // tslint:disable-next-line:no-any\n    if (headers.keys) {\n        // tslint:disable-next-line:no-any\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = headers.keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var header = _step.value;\n\n                headerKeys.push(header);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator['return']) {\n                    _iterator['return']();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    } else if (headers.forEach) {\n        headers.forEach(function (value, name) {\n            return headerKeys.push(name);\n        });\n    }\n    return headerKeys;\n}\n// Headers are not technically case sensitive, and the browser often normalizes\n// header so that they are all lower case and all strings. This method does the\n// same so that headers are always normalized from the browser agent in all cases.\nfunction normalizeHeaders(headers) {\n    var normalizedHeaders = {};\n    for (var header in headers) {\n        if (!headers.hasOwnProperty(header)) {\n            continue;\n        }\n        var headerVal = headers[header];\n        // tslint:disable-next-line:no-null-keyword\n        if (headerVal !== undefined && headerVal !== null && typeof headerVal !== 'string') {\n            headerVal = headerVal.toString();\n        }\n        normalizedHeaders[header.toLowerCase()] = headerVal;\n    }\n    return normalizedHeaders;\n}\nfunction getMessageIngressUrl() {\n    return document.getElementById('__glimpse_browser_agent').getAttribute('data-message-ingress-template');\n}\nfunction parseUrl(url) {\n    var parser = document.createElement('a');\n    parser.href = url;\n    var parsedPort = parseInt(parser.port, 10);\n    return {\n        protocol: parser.protocol,\n        hostname: parser.hostname,\n        port: isNaN(parsedPort) ? undefined : parsedPort,\n        pathname: parser.pathname,\n        search: parser.search,\n        hash: parser.hash\n    };\n}\nfunction stringifyUrl(url) {\n    var portSuffix = url.port !== undefined ? ':' + url.port : '';\n    var stringifiedUrl = url.protocol + '//' + url.hostname + portSuffix + url.pathname;\n    if (url.search) {\n        stringifiedUrl += url.search;\n    }\n    if (url.hash) {\n        stringifiedUrl += url.hash;\n    }\n    return stringifiedUrl;\n}\nvar urlCache = {};\nfunction resolveUrl(url) {\n    if (urlCache[url]) {\n        return urlCache[url];\n    }\n    return urlCache[url] = stringifyUrl(parseUrl(url));\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21tb24vUmVxdWVzdFV0aWxpdGllcy50cz9hNDFjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEd1aWQgfSBmcm9tICcuL0dlbmVyYWxVdGlsaXRpZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVxdWVzdElkKCk6IHN0cmluZyB7XG4gICAgLy8gTk9URTogYWdlbnQgc2hvdWxkIGxvb2sgdG8gc2VlIGlmIGl0IGNhbiBnZXQgdGhlIGlkXG4gICAgLy8gICAgICAgZnJvbSBhIHNjcmlwdCB0YWcgZmlyc3QsIHRoZW4gaWYgaXQgY2FuJ3QgZmluZFxuICAgIC8vICAgICAgIGl0IHRoZXJlIGxvb2sgdG8gZm9yIGEgY29va2llIChpbiB0aGUgY2FzZSB3aGVyZVxuICAgIC8vICAgICAgIHdlIGNhbid0IGluamVjdCBhIHNjcmlwdCB0YWcpIGFuZCBmaW5hbGx5IGl0IHdpbGxcbiAgICAvLyAgICAgICBjcmVhdGUgb25lIHdoaWNoIHdpbGwgYmUgdXNlZCBtb3ZpbmcgZm9yd2FyZFxuICAgIC8vICAgICAgIChDRE4gc2NlbmFyaW8pLlxuICAgIGxldCBpZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdfX2dsaW1wc2VfYnJvd3Nlcl9hZ2VudCcpLmdldEF0dHJpYnV0ZSgnZGF0YS1yZXF1ZXN0LWlkJyk7XG4gICAgaWYgKCFpZCkge1xuICAgICAgICBpZCA9IGdldENvb2tpZSgnLkdsaW1wc2UuUmVxdWVzdElkJyk7XG4gICAgfVxuICAgIGlmICghaWQpIHtcbiAgICAgICAgaWQgPSBnZXRHdWlkKCk7XG4gICAgfVxuICAgIHJldHVybiBpZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEV2ZW50KGVsZW1lbnQsIGV2ZW50TmFtZTogc3RyaW5nLCBjYik6IHZvaWQge1xuICAgIGlmIChlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgY2IsIGZhbHNlKTtcbiAgICB9IGVsc2UgaWYgKGVsZW1lbnQuYXR0YWNoRXZlbnQpIHtcbiAgICAgICAgZWxlbWVudC5hdHRhY2hFdmVudCgnb24nICsgZXZlbnROYW1lLCBjYik7XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29va2llKGNvb2tpZSkge1xuICAgIC8vIE1vZGlmaWVkIGZyb20gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2Nvb2tpZVxuICAgIGNvbnN0IHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/Oig/Ol58Lio7XFxcXHMqKScgKyBjb29raWUgKyAnXFxcXHMqXFxcXD1cXFxccyooW147XSopLiokKXxeLiokJyk7XG4gICAgcmV0dXJuIGRvY3VtZW50LmNvb2tpZS5yZXBsYWNlKHJlZ2V4cCwgJyQxJyk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUhlYWRlcnMge1xuICAgIFtoZWFkZXI6IHN0cmluZ106IHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRIZWFkZXJLZXlzKGhlYWRlcnM6IEhlYWRlcnMpOiBzdHJpbmdbXSB7XG4gICAgY29uc3QgaGVhZGVyS2V5cyA9IFtdO1xuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcbiAgICBpZiAoKDxhbnk+aGVhZGVycykua2V5cykge1xuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYW55XG4gICAgICAgIGZvciAoY29uc3QgaGVhZGVyIG9mICg8YW55PmhlYWRlcnMpLmtleXMoKSkge1xuICAgICAgICAgICAgaGVhZGVyS2V5cy5wdXNoKGhlYWRlcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoaGVhZGVycy5mb3JFYWNoKSB7XG4gICAgICAgIGhlYWRlcnMuZm9yRWFjaCgodmFsdWUsIG5hbWUpID0+IGhlYWRlcktleXMucHVzaChuYW1lKSk7XG4gICAgfVxuICAgIHJldHVybiBoZWFkZXJLZXlzO1xufVxuXG4vLyBIZWFkZXJzIGFyZSBub3QgdGVjaG5pY2FsbHkgY2FzZSBzZW5zaXRpdmUsIGFuZCB0aGUgYnJvd3NlciBvZnRlbiBub3JtYWxpemVzXG4vLyBoZWFkZXIgc28gdGhhdCB0aGV5IGFyZSBhbGwgbG93ZXIgY2FzZSBhbmQgYWxsIHN0cmluZ3MuIFRoaXMgbWV0aG9kIGRvZXMgdGhlXG4vLyBzYW1lIHNvIHRoYXQgaGVhZGVycyBhcmUgYWx3YXlzIG5vcm1hbGl6ZWQgZnJvbSB0aGUgYnJvd3NlciBhZ2VudCBpbiBhbGwgY2FzZXMuXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplSGVhZGVycyhoZWFkZXJzOiBJSGVhZGVycyk6IElIZWFkZXJzIHtcbiAgICBjb25zdCBub3JtYWxpemVkSGVhZGVyczogSUhlYWRlcnMgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGhlYWRlciBpbiBoZWFkZXJzKSB7XG4gICAgICAgIGlmICghaGVhZGVycy5oYXNPd25Qcm9wZXJ0eShoZWFkZXIpKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBoZWFkZXJWYWwgPSBoZWFkZXJzW2hlYWRlcl07XG4gICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1udWxsLWtleXdvcmRcbiAgICAgICAgaWYgKGhlYWRlclZhbCAhPT0gdW5kZWZpbmVkICYmIGhlYWRlclZhbCAhPT0gbnVsbCAmJiB0eXBlb2YgaGVhZGVyVmFsICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgaGVhZGVyVmFsID0gaGVhZGVyVmFsLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgbm9ybWFsaXplZEhlYWRlcnNbaGVhZGVyLnRvTG93ZXJDYXNlKCldID0gaGVhZGVyVmFsO1xuICAgIH1cbiAgICByZXR1cm4gbm9ybWFsaXplZEhlYWRlcnM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRNZXNzYWdlSW5ncmVzc1VybCgpOiBzdHJpbmcge1xuICAgIHJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnX19nbGltcHNlX2Jyb3dzZXJfYWdlbnQnKS5nZXRBdHRyaWJ1dGUoJ2RhdGEtbWVzc2FnZS1pbmdyZXNzLXRlbXBsYXRlJyk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVBhcnNlZFVybCB7XG4gICAgcHJvdG9jb2w6IHN0cmluZztcbiAgICBob3N0bmFtZTogc3RyaW5nO1xuICAgIHBvcnQ/OiBudW1iZXI7XG4gICAgcGF0aG5hbWU6IHN0cmluZztcbiAgICBzZWFyY2g6IHN0cmluZztcbiAgICBoYXNoOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVVybCh1cmw6IHN0cmluZyk6IElQYXJzZWRVcmwge1xuICAgIGNvbnN0IHBhcnNlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICBwYXJzZXIuaHJlZiA9IHVybDtcbiAgICBjb25zdCBwYXJzZWRQb3J0ID0gcGFyc2VJbnQocGFyc2VyLnBvcnQsIDEwKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm90b2NvbDogcGFyc2VyLnByb3RvY29sLFxuICAgICAgICBob3N0bmFtZTogcGFyc2VyLmhvc3RuYW1lLFxuICAgICAgICBwb3J0OiBpc05hTihwYXJzZWRQb3J0KSA/IHVuZGVmaW5lZCA6IHBhcnNlZFBvcnQsXG4gICAgICAgIHBhdGhuYW1lOiBwYXJzZXIucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaDogcGFyc2VyLnNlYXJjaCxcbiAgICAgICAgaGFzaDogcGFyc2VyLmhhc2hcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5VXJsKHVybDogSVBhcnNlZFVybCk6IHN0cmluZyB7XG4gICAgY29uc3QgcG9ydFN1ZmZpeCA9IHVybC5wb3J0ICE9PSB1bmRlZmluZWQgPyBgOiR7dXJsLnBvcnR9YCA6ICcnO1xuICAgIGxldCBzdHJpbmdpZmllZFVybCA9IGAke3VybC5wcm90b2NvbH0vLyR7dXJsLmhvc3RuYW1lfSR7cG9ydFN1ZmZpeH0ke3VybC5wYXRobmFtZX1gO1xuICAgIGlmICh1cmwuc2VhcmNoKSB7XG4gICAgICAgIHN0cmluZ2lmaWVkVXJsICs9IHVybC5zZWFyY2g7XG4gICAgfVxuICAgIGlmICh1cmwuaGFzaCkge1xuICAgICAgICBzdHJpbmdpZmllZFVybCArPSB1cmwuaGFzaDtcbiAgICB9XG4gICAgcmV0dXJuIHN0cmluZ2lmaWVkVXJsO1xufVxuXG5jb25zdCB1cmxDYWNoZSA9IHt9O1xuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVVcmwodXJsOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGlmICh1cmxDYWNoZVt1cmxdKSB7XG4gICAgICAgIHJldHVybiB1cmxDYWNoZVt1cmxdO1xuICAgIH1cbiAgICByZXR1cm4gdXJsQ2FjaGVbdXJsXSA9IHN0cmluZ2lmeVVybChwYXJzZVVybCh1cmwpKTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9jb21tb24vUmVxdWVzdFV0aWxpdGllcy50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7Ozs7O0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFDQTs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7QUFFQTtBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBUUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 6 */
/*!*************************************!*\
  !*** ./src/common/MessageMixins.ts ***!
  \*************************************/
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.addOffset = addOffset;\nexports.addCorrelationBegin = addCorrelationBegin;\nexports.addCorrelationEnd = addCorrelationEnd;\nexports.addCorrelation = addCorrelation;\nfunction addOffset(offset, envelope) {\n    envelope.offset = offset;\n}\nfunction addCorrelationBegin(correlationId, envelope) {\n    envelope.types.push('correlation-begin');\n    addCorrelation(correlationId, envelope);\n}\nfunction addCorrelationEnd(correlationId, duration, envelope) {\n    envelope.types.push('correlation-end');\n    envelope.payload.duration = duration;\n    addCorrelation(correlationId, envelope);\n}\nfunction addCorrelation(correlationId, envelope) {\n    envelope.types.push('correlation');\n    envelope.payload.correlationId = correlationId;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21tb24vTWVzc2FnZU1peGlucy50cz82MjIzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuZXhwb3J0IGZ1bmN0aW9uIGFkZE9mZnNldChvZmZzZXQ6IG51bWJlciwgZW52ZWxvcGUpIHtcbiAgICBlbnZlbG9wZS5vZmZzZXQgPSBvZmZzZXQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRDb3JyZWxhdGlvbkJlZ2luKGNvcnJlbGF0aW9uSWQsIGVudmVsb3BlKSB7XG4gICAgZW52ZWxvcGUudHlwZXMucHVzaCgnY29ycmVsYXRpb24tYmVnaW4nKTtcblxuICAgIGFkZENvcnJlbGF0aW9uKGNvcnJlbGF0aW9uSWQsIGVudmVsb3BlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZENvcnJlbGF0aW9uRW5kKGNvcnJlbGF0aW9uSWQsIGR1cmF0aW9uLCBlbnZlbG9wZSkge1xuICAgIGVudmVsb3BlLnR5cGVzLnB1c2goJ2NvcnJlbGF0aW9uLWVuZCcpO1xuICAgIGVudmVsb3BlLnBheWxvYWQuZHVyYXRpb24gPSBkdXJhdGlvbjtcblxuICAgIGFkZENvcnJlbGF0aW9uKGNvcnJlbGF0aW9uSWQsIGVudmVsb3BlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZENvcnJlbGF0aW9uKGNvcnJlbGF0aW9uSWQsIGVudmVsb3BlKSB7XG4gICAgZW52ZWxvcGUudHlwZXMucHVzaCgnY29ycmVsYXRpb24nKTtcbiAgICBlbnZlbG9wZS5wYXlsb2FkLmNvcnJlbGF0aW9uSWQgPSBjb3JyZWxhdGlvbklkO1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2NvbW1vbi9NZXNzYWdlTWl4aW5zLnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 7 */
/*!****************************************!*\
  !*** ./src/inspectors/XHRInspector.ts ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.XHRInspector = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _GlimpseLogger = __webpack_require__(/*! ../common/GlimpseLogger */ 8);\n\nvar _GlimpseLogger2 = _interopRequireDefault(_GlimpseLogger);\n\nvar _MessageMixins = __webpack_require__(/*! ../common/MessageMixins */ 6);\n\nvar _Constants = __webpack_require__(/*! ../common/Constants */ 9);\n\nvar _XHRProxy = __webpack_require__(/*! ../tracing/proxies/XHRProxy */ 10);\n\nvar _Tracing = __webpack_require__(/*! ../tracing/Tracing */ 11);\n\nvar _Tracing2 = _interopRequireDefault(_Tracing);\n\nvar _DateTimeUtilities = __webpack_require__(/*! ../common/DateTimeUtilities */ 12);\n\nvar _RequestUtilities = __webpack_require__(/*! ../common/RequestUtilities */ 5);\n\nvar _parseHeaders = __webpack_require__(/*! parse-headers */ 13);\n\nvar _parseHeaders2 = _interopRequireDefault(_parseHeaders);\n\nvar _HttpRequestUtils = __webpack_require__(/*! ./HttpRequestUtils */ 17);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar XHRInspector = exports.XHRInspector = function () {\n    function XHRInspector() {\n        _classCallCheck(this, XHRInspector);\n\n        this.initiatorRegExp = /xmlhttprequest/i;\n        this.requests = {};\n    }\n\n    _createClass(XHRInspector, [{\n        key: 'createBodyProperty',\n        value: function createBodyProperty(headers, body, cb) {\n            //\n            // Note on use of setTimeout() below.  This is done to ensure all code paths execute asynchronously,\n            // irrespective of whether createBodyForBlob is called.  For a more in-depth discussion,\n            // see https://nodejs.org/dist/latest-v7.x/docs/api/process.html#process_process_nexttick_callback_args\n            //\n            if (!body) {\n                var bodyProperty = (0, _HttpRequestUtils.createEmptyBody)(false);\n                setTimeout(function () {\n                    return cb(bodyProperty);\n                }, 0);\n            } else {\n                //\n                // according to MDN docs, body here can be one of the following types:\n                // ArrayBufferView | Blob | Document | string | FormData.  We need to\n                // account for all of these.\n                //\n                if (typeof body === 'string') {\n                    var contentType = headers['content-type'];\n                    var boundary = (0, _HttpRequestUtils.getMultiPartFormBoundary)(contentType);\n                    var _bodyProperty = {\n                        size: body.length,\n                        encoding: 'utf8',\n                        isTruncated: body.length > _Constants.MAX_HTTP_BODY_SIZE,\n                        parts: (0, _HttpRequestUtils.getMultiPartFormParts)(boundary, body),\n                        content: body.slice(0, _Constants.MAX_HTTP_BODY_SIZE)\n                    };\n                    setTimeout(function () {\n                        return cb(_bodyProperty);\n                    }, 0);\n                } else if (body instanceof Blob) {\n                    var _contentType = headers['content-type'];\n                    var blob = body;\n                    (0, _HttpRequestUtils.createBodyForBlob)(_contentType, blob, true, function (bodyProperty) {\n                        cb(bodyProperty);\n                    });\n                } else if (body instanceof ArrayBuffer || body.buffer && body.buffer instanceof ArrayBuffer) {\n                    var buffer = void 0;\n                    if (body instanceof ArrayBuffer) {\n                        buffer = body;\n                    } else {\n                        buffer = body.buffer;\n                    }\n                    // TODO:  support body capture when body is ArrayBuffer\n                    var _bodyProperty2 = {\n                        size: buffer.byteLength,\n                        encoding: 'none',\n                        isTruncated: true,\n                        parts: [],\n                        content: ''\n                    };\n                    setTimeout(function () {\n                        return cb(_bodyProperty2);\n                    }, 0);\n                } else if (body instanceof Document) {\n                    // TODO:  support body capture when body is Document\n                    var doc = body;\n                    var _bodyProperty3 = (0, _HttpRequestUtils.createEmptyBody)(true);\n                    setTimeout(function () {\n                        return cb(_bodyProperty3);\n                    }, 0);\n                } else if (body instanceof FormData) {\n                    // TODO:  support body capture when body is FormData\n                    var fd = body;\n                    var _bodyProperty4 = (0, _HttpRequestUtils.createEmptyBody)(true);\n                    setTimeout(function () {\n                        return cb(_bodyProperty4);\n                    }, 0);\n                } else {\n                    var _bodyProperty5 = (0, _HttpRequestUtils.createEmptyBody)(true);\n                    setTimeout(function () {\n                        return cb(_bodyProperty5);\n                    }, 0);\n                }\n            }\n        }\n    }, {\n        key: 'before',\n        value: function before(event) {\n            var _this = this;\n\n            var eventData = event.data;\n            var url = (0, _RequestUtilities.parseUrl)(eventData.url);\n            var headers = (0, _RequestUtilities.normalizeHeaders)(eventData.headers);\n            this.createBodyProperty(headers, eventData.body, function (body) {\n                var startTime = (0, _DateTimeUtilities.getDateTime)(new Date(event.timeStamp));\n                var msg = _this.messagePublisher.createMessage('data-http-request', {\n                    correlationId: eventData.id,\n                    protocol: {\n                        identifier: url.protocol.replace(/\\:$/, '').toLowerCase()\n                    },\n                    url: eventData.url,\n                    method: eventData.method,\n                    startTime: startTime,\n                    timing: {\n                        startTime: 0\n                    },\n                    headers: headers,\n                    isAjax: true,\n                    body: body\n                });\n                (0, _MessageMixins.addOffset)(event.offset, msg);\n                _this.messagePublisher.publishMessage(msg);\n            });\n        }\n    }, {\n        key: 'after',\n        value: function after(event, requestEntry) {\n            var _this2 = this;\n\n            var eventData = event.data;\n            (0, _HttpRequestUtils.tryFindResourceTimingObject)(event.data.id, this.initiatorRegExp, eventData.url, requestEntry.startTimeOffset, function (timings) {\n                var offset = timings ? timings.startTime : requestEntry.startTimeOffset;\n                // start here is relative to this http client request, so it is always 0\n                var startTime = 0;\n                // leave responseStart undefined if no timings instance since this is optional and we don't know accurate value\n                var responseStart = timings && timings.responseStart >= timings.startTime ? timings.responseStart - timings.startTime : undefined;\n                var responseEnd = timings ? timings.responseEnd - timings.startTime : event.offset - requestEntry.startTimeOffset;\n                // TODO: https://github.com/Glimpse/Glimpse.Node.Prototype/issues/307\n                // Add support for base64 encoding non-text content by setting the encoding here\n                var body = {\n                    size: 0,\n                    encoding: 'utf8',\n                    content: '',\n                    isTruncated: false\n                };\n                if (eventData.body) {\n                    body.size = eventData.body.length;\n                    body.content = eventData.body.slice(0, _Constants.MAX_HTTP_BODY_SIZE);\n                    body.isTruncated = body.size > _Constants.MAX_HTTP_BODY_SIZE;\n                }\n                var msg = _this2.messagePublisher.createMessage('data-http-response', {\n                    correlationId: eventData.id,\n                    url: eventData.url,\n                    headers: (0, _parseHeaders2['default'])(eventData.xhr.getAllResponseHeaders()),\n                    statusCode: eventData.statusCode,\n                    statusMessage: eventData.statusMessage,\n                    endTime: (0, _DateTimeUtilities.getDateTime)(new Date(event.timeStamp)),\n                    duration: responseEnd,\n                    timing: {\n                        startTime: 0,\n                        responseEnd: responseEnd\n                    },\n                    body: body\n                });\n                if (responseStart !== undefined) {\n                    msg.payload.timing.responseStart = responseStart;\n                }\n                (0, _MessageMixins.addOffset)(offset, msg);\n                _this2.messagePublisher.publishMessage(msg);\n            });\n        }\n    }, {\n        key: 'numOutstandingRequests',\n        value: function numOutstandingRequests() {\n            return Object.keys(this.requests).length;\n        }\n    }, {\n        key: 'init',\n        value: function init(messagePublisher) {\n            var _this3 = this;\n\n            this.messagePublisher = messagePublisher;\n            _Tracing2['default'].on(_XHRProxy.EVENT_XHR_REQUEST_SENT, function (event) {\n                _this3.requests[event.data.id] = {\n                    startTimeStamp: event.timeStamp,\n                    startTimeOffset: event.offset\n                };\n                _this3.before(event);\n            });\n            _Tracing2['default'].on(_XHRProxy.EVENT_XHR_RESPONSE_RECEIVED, function (event) {\n                var requestEntry = _this3.requests[event.data.id];\n                if (!requestEntry) {\n                    _GlimpseLogger2['default'].error('Glimpse Internal Error: could not find associated master data, some inspection data will be lost.');\n                    return;\n                }\n                _this3.after(event, requestEntry);\n                delete _this3.requests[event.data.id];\n            });\n            _Tracing2['default'].on(_XHRProxy.EVENT_XHR_ERROR, function (data) {\n                delete _this3.requests[data.data.id];\n            });\n            _Tracing2['default'].on(_XHRProxy.EVENT_XHR_ABORT, function (data) {\n                delete _this3.requests[data.data.id];\n            });\n        }\n    }]);\n\n    return XHRInspector;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 8 */
/*!*************************************!*\
  !*** ./src/common/GlimpseLogger.ts ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar GlimpseLogger = exports.GlimpseLogger = function () {\n    function GlimpseLogger(logToConsole) {\n        _classCallCheck(this, GlimpseLogger);\n\n        this.logToConsole = logToConsole;\n    }\n\n    _createClass(GlimpseLogger, [{\n        key: \"error\",\n        value: function error(message) {\n            if (this.logToConsole) {\n                // tslint:disable-next-line:no-console\n                console.error(message);\n            }\n        }\n    }]);\n\n    return GlimpseLogger;\n}();\n\nvar logger = new GlimpseLogger((true));\nexports[\"default\"] = logger;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21tb24vR2xpbXBzZUxvZ2dlci50cz9hZmY1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgSUdsaW1wc2VMb2dnZXIge1xuICAgIGVycm9yKG1lc3NhZ2U/OiBzdHJpbmcpOiB2b2lkO1xufVxuXG5leHBvcnQgY2xhc3MgR2xpbXBzZUxvZ2dlciBpbXBsZW1lbnRzIElHbGltcHNlTG9nZ2VyIHtcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGxvZ1RvQ29uc29sZTogYm9vbGVhbikge1xuICAgIH1cblxuICAgIHB1YmxpYyBlcnJvcihtZXNzYWdlPzogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmxvZ1RvQ29uc29sZSkge1xuICAgICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWNvbnNvbGVcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmNvbnN0IGxvZ2dlciA9IG5ldyBHbGltcHNlTG9nZ2VyKExPR19UT19DT05TT0xFKTtcblxuZXhwb3J0IGRlZmF1bHQgbG9nZ2VyO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2NvbW1vbi9HbGltcHNlTG9nZ2VyLnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUtBOzs7QUFBQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBR0E7QUFFQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 9 */
/*!*********************************!*\
  !*** ./src/common/Constants.ts ***!
  \*********************************/
/***/ function(module, exports) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar MAX_HTTP_BODY_SIZE = exports.MAX_HTTP_BODY_SIZE = 132000;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21tb24vQ29uc3RhbnRzLnRzPzAwMDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IE1BWF9IVFRQX0JPRFlfU0laRSA9IDEzMjAwMDtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9jb21tb24vQ29uc3RhbnRzLnRzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 10 */
/*!*****************************************!*\
  !*** ./src/tracing/proxies/XHRProxy.ts ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.XHRProxy = exports.EVENT_XHR_ABORT = exports.EVENT_XHR_ERROR = exports.EVENT_XHR_RESPONSE_RECEIVED = exports.EVENT_XHR_REQUEST_SENT = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _GlimpseLogger = __webpack_require__(/*! ../../common/GlimpseLogger */ 8);\n\nvar _GlimpseLogger2 = _interopRequireDefault(_GlimpseLogger);\n\nvar _Tracing = __webpack_require__(/*! ../Tracing */ 11);\n\nvar _Tracing2 = _interopRequireDefault(_Tracing);\n\nvar _GeneralUtilities = __webpack_require__(/*! ../../common/GeneralUtilities */ 4);\n\nvar _RequestUtilities = __webpack_require__(/*! ../../common/RequestUtilities */ 5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EVENT_XHR_REQUEST_SENT = exports.EVENT_XHR_REQUEST_SENT = 'invoke|pre|XMLHttpRequest.request-sent';\nvar EVENT_XHR_RESPONSE_RECEIVED = exports.EVENT_XHR_RESPONSE_RECEIVED = 'notify|XMLHttpRequest.response-received';\nvar EVENT_XHR_ERROR = exports.EVENT_XHR_ERROR = 'notify|XMLHttpRequest.error';\nvar EVENT_XHR_ABORT = exports.EVENT_XHR_ABORT = 'notify|XMLHttpRequest.abort';\n\nvar XHRProxy = exports.XHRProxy = function () {\n    function XHRProxy() {\n        _classCallCheck(this, XHRProxy);\n    }\n\n    _createClass(XHRProxy, [{\n        key: 'isSupported',\n        value: function isSupported() {\n            // Note: TypeScript doesn't know about XMLHttpRequest existing on Window, so we\n            // reference the property this way to get around TypeScript\n            //tslint:disable-next-line:no-any\n            return !!(window && typeof window.XMLHttpRequest !== 'undefined');\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            if (XHRProxy.isInitialized) {\n                _GlimpseLogger2['default'].error('Glimpse Error: Cannot initialize the XHR Proxy more than once.');\n                return;\n            }\n            //tslint:disable-next-line:no-any\n            var oldXMLHttpRequest = window.XMLHttpRequest;\n            function XMLHttpRequest() {\n                var xhr = new oldXMLHttpRequest();\n                var id = (0, _GeneralUtilities.getGuid)();\n                function handleAsyncRequest(method, url) {\n                    var requestHeaders = {};\n                    xhr.addEventListener('readystatechange', function () {\n                        if (xhr.readyState === oldXMLHttpRequest.DONE) {\n                            var eventData = {\n                                id: id,\n                                xhr: xhr,\n                                url: (0, _RequestUtilities.resolveUrl)(url),\n                                statusCode: xhr.status,\n                                statusMessage: xhr.statusText,\n                                bodyType: xhr.responseType,\n                                body: xhr.response\n                            };\n                            _Tracing2['default'].publish(EVENT_XHR_RESPONSE_RECEIVED, eventData);\n                        }\n                        ;\n                    });\n                    xhr.addEventListener('error', function () {\n                        var eventData = {\n                            id: id,\n                            xhr: xhr,\n                            error: xhr.statusText\n                        };\n                        _Tracing2['default'].publish(EVENT_XHR_ERROR, eventData);\n                    });\n                    xhr.addEventListener('abort', function () {\n                        var eventData = {\n                            id: id,\n                            xhr: xhr\n                        };\n                        _Tracing2['default'].publish(EVENT_XHR_ABORT, eventData);\n                    });\n                    var oldSend = xhr.send;\n                    xhr.send = function send(body) {\n                        var eventData = {\n                            id: id,\n                            xhr: xhr,\n                            method: method,\n                            url: (0, _RequestUtilities.resolveUrl)(url),\n                            body: body,\n                            headers: requestHeaders\n                        };\n                        _Tracing2['default'].publish(EVENT_XHR_REQUEST_SENT, eventData);\n\n                        for (var _len = arguments.length, sendArgs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                            sendArgs[_key - 1] = arguments[_key];\n                        }\n\n                        oldSend.call.apply(oldSend, [this, body].concat(sendArgs));\n                    };\n                    var oldSetRequestHeader = xhr.setRequestHeader;\n                    xhr.setRequestHeader = function setRequestHeader(header, value) {\n                        requestHeaders[header] = value;\n\n                        for (var _len2 = arguments.length, setRequestHeaderArgs = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n                            setRequestHeaderArgs[_key2 - 2] = arguments[_key2];\n                        }\n\n                        oldSetRequestHeader.call.apply(oldSetRequestHeader, [this, header, value].concat(setRequestHeaderArgs));\n                    };\n                }\n                function handleSyncRequest(method, url) {\n                    var oldSend = xhr.send;\n                    var requestHeaders = {};\n                    var oldSetRequestHeader = xhr.setRequestHeader;\n                    xhr.setRequestHeader = function setRequestHeader(header, value) {\n                        requestHeaders[header] = value;\n\n                        for (var _len3 = arguments.length, setRequestHeaderArgs = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n                            setRequestHeaderArgs[_key3 - 2] = arguments[_key3];\n                        }\n\n                        oldSetRequestHeader.call.apply(oldSetRequestHeader, [this, header, value].concat(setRequestHeaderArgs));\n                    };\n                    xhr.send = function send(body) {\n                        var requestEventData = {\n                            id: id,\n                            xhr: xhr,\n                            method: method,\n                            url: (0, _RequestUtilities.resolveUrl)(url),\n                            body: body,\n                            headers: requestHeaders\n                        };\n                        _Tracing2['default'].publish(EVENT_XHR_REQUEST_SENT, requestEventData);\n                        try {\n                            for (var _len4 = arguments.length, sendArgs = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n                                sendArgs[_key4 - 1] = arguments[_key4];\n                            }\n\n                            oldSend.call.apply(oldSend, [this, body].concat(sendArgs));\n                        } catch (e) {\n                            var errorEventData = {\n                                id: id,\n                                xhr: xhr,\n                                error: e.message\n                            };\n                            _Tracing2['default'].publish(EVENT_XHR_ERROR, errorEventData);\n                            throw e;\n                        }\n                        var responseEventData = {\n                            id: id,\n                            xhr: xhr,\n                            url: (0, _RequestUtilities.resolveUrl)(url),\n                            statusCode: xhr.status,\n                            statusMessage: xhr.statusText || '',\n                            bodyType: xhr.responseType,\n                            body: xhr.response\n                        };\n                        _Tracing2['default'].publish(EVENT_XHR_RESPONSE_RECEIVED, responseEventData);\n                    };\n                }\n                var oldOpen = xhr.open;\n                xhr.open = function open(method, url) {\n                    var async = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n                    for (var _len5 = arguments.length, openArgs = Array(_len5 > 3 ? _len5 - 3 : 0), _key5 = 3; _key5 < _len5; _key5++) {\n                        openArgs[_key5 - 3] = arguments[_key5];\n                    }\n\n                    var result = oldOpen.call.apply(oldOpen, [this, method, url, async].concat(openArgs));\n                    // signal that this is an ajax request\n                    xhr.setRequestHeader('X-Glimpse-IsAjax', 'true');\n                    // If the url equals the message ingress url, that means it's\n                    // a Glimpse message and we don't want to profile it\n                    if (url !== (0, _RequestUtilities.getMessageIngressUrl)()) {\n                        if (async) {\n                            handleAsyncRequest(method, url);\n                        } else {\n                            handleSyncRequest(method, url);\n                        }\n                    }\n                    return result;\n                };\n                return xhr;\n            }\n            // Copy the states (and anything else) from the original object to our proxy\n            for (var prop in oldXMLHttpRequest) {\n                if (oldXMLHttpRequest.hasOwnProperty(prop)) {\n                    XMLHttpRequest[prop] = oldXMLHttpRequest[prop];\n                }\n            }\n            // Note: TypeScript doesn't know about XMLHttpRequest existing on Window, so we\n            // reference the property this way to get around TypeScript, but we also have to\n            // disable tslint in the process\n            /* tslint:disable */\n            window['XMLHttpRequest'] = XMLHttpRequest;\n            /* tslint:enable */\n            XHRProxy.isInitialized = true;\n        }\n    }]);\n\n    return XHRProxy;\n}();\n\nXHRProxy.isInitialized = false;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 11 */
/*!********************************!*\
  !*** ./src/tracing/Tracing.ts ***!
  \********************************/
/***/ function(module, exports) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The Tracing module provides mechanisms for registering to receive tracing\n * events from proxies.\n *\n * This module is pretty similar to a standard EventEmitter, but has a few\n * key differences. This module provides the ability to filter out which\n * events you would like to receive, based on criteria of your choosing.\n *\n * Tracing can hurt performance in some cases, and filtering is a way for\n * the profiling application to improve performance whenever the data is not\n * explicitly needed.\n *\n * @module tracing/Tracing\n */\nvar Tracing = function () {\n    function Tracing() {\n        _classCallCheck(this, Tracing);\n\n        this.listeners = {};\n    }\n    /**\n     * Publishes an event, similar to the `EventEmitter.emit` method except that it\n     * does not accept more than one data argument.\n     *\n     * @param {string} event - The name of the event to fire, and should include a\n     *      descriptive namespace, e.g. `http.request:request-created`\n     * @param {object} data - The data associated with the event\n     * @returns {boolean} - Whether or not the event was published to any listeners\n     */\n\n\n    _createClass(Tracing, [{\n        key: \"publish\",\n        value: function publish(event, data) {\n            var listeners = this.listeners[event];\n            if (!listeners || listeners.length === 0) {\n                return false;\n            }\n            var emitted = false;\n            var message = {\n                offset: performance.now(),\n                timeStamp: Date.now(),\n                data: data\n            };\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = listeners[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var listener = _step.value;\n\n                    emitted = true;\n                    listener.listener(message);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n                        _iterator[\"return\"]();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return emitted;\n        }\n        /**\n         * Register to always receive an event without any filtering. This module is\n         * returned from this method, making it possible to chain `removeEventListener`\n         * calls.\n         *\n         * Note: if any other listeners are filtering this event, registering with\n         * this method will prevent the proxies from enabling any performance\n         * optimizations.\n         *\n         * Calling this method is equivalent to calling `onFiltered(event, listener, () => true)`\n         *\n         * @param {string} event - The name of the event to listen to, e.g.\n         *      `http.request:request-created`\n         * @param {function} listener - The callback to call when the event is emitted\n         */\n\n    }, {\n        key: \"on\",\n        value: function on(event, listener) {\n            if (!this.listeners[event]) {\n                this.listeners[event] = [];\n            }\n            this.listeners[event].push({\n                listener: listener\n            });\n            return this;\n        }\n        /**\n         * Removes exactly one registered event listener. If the same callback is\n         * registered more than once, only the first copy is removed. This behavior\n         * mimics that of EventEmitter.removeEventListener\n         *\n         * @param {string} event - The name of the event to remove the listener for,\n         *      e.g. `http.request:request-created`\n         * @param {function} listener - The listener to remove\n         * @returns {object} A refernce to this module, making it possible to chain\n         *      removeEventListener calls\n         */\n\n    }, {\n        key: \"removeEventListener\",\n        value: function removeEventListener(event, listener) {\n            var listeners = this.listeners[event];\n            if (!listeners) {\n                // Matches Node.js removeEventListener return signature\n                return this;\n            }\n            for (var i = 0; i < listeners.length; i++) {\n                if (listeners[i].listener === listener) {\n                    this.listeners[event].splice(i, 1);\n                    break;\n                }\n            }\n            return this;\n        }\n        /**\n         * Removes all listeners for the given event. If no event is specified, then\n         * all event listeners for all events are removed.\n         *\n         * @param {string} event - (Optional) The event to remove listeners for\n         * @returns {object} A refernce to this module, making it possible to chain calls\n         */\n\n    }, {\n        key: \"removeAllListeners\",\n        value: function removeAllListeners(event) {\n            if (event) {\n                if (this.listeners[event]) {\n                    this.listeners[event] = [];\n                }\n            } else {\n                this.listeners = {};\n            }\n            return this;\n        }\n        /**\n         * Returns the number of listeners for the given event. This behavior\n         * mimics that of EventEmitter.listenerCount\n         *\n         * @param {string} event - The event to count listeners for\n         * @returns {number} The number of listeners for the given event\n         */\n\n    }, {\n        key: \"listenerCount\",\n        value: function listenerCount(event) {\n            if (!this.listeners[event]) {\n                return 0;\n            }\n            return this.listeners[event].length;\n        }\n    }]);\n\n    return Tracing;\n}();\n\nexports[\"default\"] = new Tracing();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHJhY2luZy9UcmFjaW5nLnRzP2VmODAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGUgVHJhY2luZyBtb2R1bGUgcHJvdmlkZXMgbWVjaGFuaXNtcyBmb3IgcmVnaXN0ZXJpbmcgdG8gcmVjZWl2ZSB0cmFjaW5nXG4gKiBldmVudHMgZnJvbSBwcm94aWVzLlxuICpcbiAqIFRoaXMgbW9kdWxlIGlzIHByZXR0eSBzaW1pbGFyIHRvIGEgc3RhbmRhcmQgRXZlbnRFbWl0dGVyLCBidXQgaGFzIGEgZmV3XG4gKiBrZXkgZGlmZmVyZW5jZXMuIFRoaXMgbW9kdWxlIHByb3ZpZGVzIHRoZSBhYmlsaXR5IHRvIGZpbHRlciBvdXQgd2hpY2hcbiAqIGV2ZW50cyB5b3Ugd291bGQgbGlrZSB0byByZWNlaXZlLCBiYXNlZCBvbiBjcml0ZXJpYSBvZiB5b3VyIGNob29zaW5nLlxuICpcbiAqIFRyYWNpbmcgY2FuIGh1cnQgcGVyZm9ybWFuY2UgaW4gc29tZSBjYXNlcywgYW5kIGZpbHRlcmluZyBpcyBhIHdheSBmb3JcbiAqIHRoZSBwcm9maWxpbmcgYXBwbGljYXRpb24gdG8gaW1wcm92ZSBwZXJmb3JtYW5jZSB3aGVuZXZlciB0aGUgZGF0YSBpcyBub3RcbiAqIGV4cGxpY2l0bHkgbmVlZGVkLlxuICpcbiAqIEBtb2R1bGUgdHJhY2luZy9UcmFjaW5nXG4gKi9cblxuaW1wb3J0IHsgSVByb3h5RXZlbnQgfSBmcm9tICcuL0lQcm94eUV2ZW50JztcblxuZXhwb3J0IGludGVyZmFjZSBJRXZlbnRGaWx0ZXJDYWxsYmFjayB7XG4gICAgKCk6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUV2ZW50Q2FsbGJhY2sge1xuICAgIChldmVudERhdGE6IElQcm94eUV2ZW50KTogdm9pZDtcbn1cblxuaW50ZXJmYWNlIElMaXN0ZW5lckVudHJ5IHtcbiAgICBsaXN0ZW5lcjogSUV2ZW50Q2FsbGJhY2s7XG59XG5cbmNsYXNzIFRyYWNpbmcge1xuXG4gICAgcHJpdmF0ZSBsaXN0ZW5lcnM6IHsgW2V2ZW50TmFtZTogc3RyaW5nXTogSUxpc3RlbmVyRW50cnlbXTsgfSA9IHt9O1xuXG4gICAgLyoqXG4gICAgICogUHVibGlzaGVzIGFuIGV2ZW50LCBzaW1pbGFyIHRvIHRoZSBgRXZlbnRFbWl0dGVyLmVtaXRgIG1ldGhvZCBleGNlcHQgdGhhdCBpdFxuICAgICAqIGRvZXMgbm90IGFjY2VwdCBtb3JlIHRoYW4gb25lIGRhdGEgYXJndW1lbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnQgLSBUaGUgbmFtZSBvZiB0aGUgZXZlbnQgdG8gZmlyZSwgYW5kIHNob3VsZCBpbmNsdWRlIGFcbiAgICAgKiAgICAgIGRlc2NyaXB0aXZlIG5hbWVzcGFjZSwgZS5nLiBgaHR0cC5yZXF1ZXN0OnJlcXVlc3QtY3JlYXRlZGBcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gZGF0YSAtIFRoZSBkYXRhIGFzc29jaWF0ZWQgd2l0aCB0aGUgZXZlbnRcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gLSBXaGV0aGVyIG9yIG5vdCB0aGUgZXZlbnQgd2FzIHB1Ymxpc2hlZCB0byBhbnkgbGlzdGVuZXJzXG4gICAgICovXG4gICAgcHVibGljIHB1Ymxpc2goZXZlbnQ6IHN0cmluZywgZGF0YSk6IGJvb2xlYW4ge1xuICAgICAgICBjb25zdCBsaXN0ZW5lcnMgPSB0aGlzLmxpc3RlbmVyc1tldmVudF07XG4gICAgICAgIGlmICghbGlzdGVuZXJzIHx8IGxpc3RlbmVycy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgZW1pdHRlZCA9IGZhbHNlO1xuICAgICAgICBjb25zdCBtZXNzYWdlOiBJUHJveHlFdmVudCA9IHtcbiAgICAgICAgICAgIG9mZnNldDogcGVyZm9ybWFuY2Uubm93KCksXG4gICAgICAgICAgICB0aW1lU3RhbXA6IERhdGUubm93KCksXG4gICAgICAgICAgICBkYXRhXG4gICAgICAgIH07XG4gICAgICAgIGZvciAoY29uc3QgbGlzdGVuZXIgb2YgbGlzdGVuZXJzKSB7XG4gICAgICAgICAgICBlbWl0dGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIGxpc3RlbmVyLmxpc3RlbmVyKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbWl0dGVkO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlZ2lzdGVyIHRvIGFsd2F5cyByZWNlaXZlIGFuIGV2ZW50IHdpdGhvdXQgYW55IGZpbHRlcmluZy4gVGhpcyBtb2R1bGUgaXNcbiAgICAgKiByZXR1cm5lZCBmcm9tIHRoaXMgbWV0aG9kLCBtYWtpbmcgaXQgcG9zc2libGUgdG8gY2hhaW4gYHJlbW92ZUV2ZW50TGlzdGVuZXJgXG4gICAgICogY2FsbHMuXG4gICAgICpcbiAgICAgKiBOb3RlOiBpZiBhbnkgb3RoZXIgbGlzdGVuZXJzIGFyZSBmaWx0ZXJpbmcgdGhpcyBldmVudCwgcmVnaXN0ZXJpbmcgd2l0aFxuICAgICAqIHRoaXMgbWV0aG9kIHdpbGwgcHJldmVudCB0aGUgcHJveGllcyBmcm9tIGVuYWJsaW5nIGFueSBwZXJmb3JtYW5jZVxuICAgICAqIG9wdGltaXphdGlvbnMuXG4gICAgICpcbiAgICAgKiBDYWxsaW5nIHRoaXMgbWV0aG9kIGlzIGVxdWl2YWxlbnQgdG8gY2FsbGluZyBgb25GaWx0ZXJlZChldmVudCwgbGlzdGVuZXIsICgpID0+IHRydWUpYFxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50IC0gVGhlIG5hbWUgb2YgdGhlIGV2ZW50IHRvIGxpc3RlbiB0bywgZS5nLlxuICAgICAqICAgICAgYGh0dHAucmVxdWVzdDpyZXF1ZXN0LWNyZWF0ZWRgXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gbGlzdGVuZXIgLSBUaGUgY2FsbGJhY2sgdG8gY2FsbCB3aGVuIHRoZSBldmVudCBpcyBlbWl0dGVkXG4gICAgICovXG4gICAgcHVibGljIG9uKGV2ZW50OiBzdHJpbmcsIGxpc3RlbmVyOiBJRXZlbnRDYWxsYmFjayk6IFRyYWNpbmcge1xuICAgICAgICBpZiAoIXRoaXMubGlzdGVuZXJzW2V2ZW50XSkge1xuICAgICAgICAgICAgdGhpcy5saXN0ZW5lcnNbZXZlbnRdID0gW107XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5saXN0ZW5lcnNbZXZlbnRdLnB1c2goe1xuICAgICAgICAgICAgbGlzdGVuZXJcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgZXhhY3RseSBvbmUgcmVnaXN0ZXJlZCBldmVudCBsaXN0ZW5lci4gSWYgdGhlIHNhbWUgY2FsbGJhY2sgaXNcbiAgICAgKiByZWdpc3RlcmVkIG1vcmUgdGhhbiBvbmNlLCBvbmx5IHRoZSBmaXJzdCBjb3B5IGlzIHJlbW92ZWQuIFRoaXMgYmVoYXZpb3JcbiAgICAgKiBtaW1pY3MgdGhhdCBvZiBFdmVudEVtaXR0ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lclxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50IC0gVGhlIG5hbWUgb2YgdGhlIGV2ZW50IHRvIHJlbW92ZSB0aGUgbGlzdGVuZXIgZm9yLFxuICAgICAqICAgICAgZS5nLiBgaHR0cC5yZXF1ZXN0OnJlcXVlc3QtY3JlYXRlZGBcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBsaXN0ZW5lciAtIFRoZSBsaXN0ZW5lciB0byByZW1vdmVcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBBIHJlZmVybmNlIHRvIHRoaXMgbW9kdWxlLCBtYWtpbmcgaXQgcG9zc2libGUgdG8gY2hhaW5cbiAgICAgKiAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIgY2FsbHNcbiAgICAgKi9cbiAgICBwdWJsaWMgcmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudDogc3RyaW5nLCBsaXN0ZW5lcjogSUV2ZW50Q2FsbGJhY2spOiBUcmFjaW5nIHtcbiAgICAgICAgY29uc3QgbGlzdGVuZXJzID0gdGhpcy5saXN0ZW5lcnNbZXZlbnRdO1xuICAgICAgICBpZiAoIWxpc3RlbmVycykge1xuICAgICAgICAgICAgLy8gTWF0Y2hlcyBOb2RlLmpzIHJlbW92ZUV2ZW50TGlzdGVuZXIgcmV0dXJuIHNpZ25hdHVyZVxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChsaXN0ZW5lcnNbaV0ubGlzdGVuZXIgPT09IGxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5saXN0ZW5lcnNbZXZlbnRdLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGFsbCBsaXN0ZW5lcnMgZm9yIHRoZSBnaXZlbiBldmVudC4gSWYgbm8gZXZlbnQgaXMgc3BlY2lmaWVkLCB0aGVuXG4gICAgICogYWxsIGV2ZW50IGxpc3RlbmVycyBmb3IgYWxsIGV2ZW50cyBhcmUgcmVtb3ZlZC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudCAtIChPcHRpb25hbCkgVGhlIGV2ZW50IHRvIHJlbW92ZSBsaXN0ZW5lcnMgZm9yXG4gICAgICogQHJldHVybnMge29iamVjdH0gQSByZWZlcm5jZSB0byB0aGlzIG1vZHVsZSwgbWFraW5nIGl0IHBvc3NpYmxlIHRvIGNoYWluIGNhbGxzXG4gICAgICovXG4gICAgcHVibGljIHJlbW92ZUFsbExpc3RlbmVycyhldmVudD86IHN0cmluZyk6IFRyYWNpbmcge1xuICAgICAgICBpZiAoZXZlbnQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmxpc3RlbmVyc1tldmVudF0pIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxpc3RlbmVyc1tldmVudF0gPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubGlzdGVuZXJzID0ge307XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIGxpc3RlbmVycyBmb3IgdGhlIGdpdmVuIGV2ZW50LiBUaGlzIGJlaGF2aW9yXG4gICAgICogbWltaWNzIHRoYXQgb2YgRXZlbnRFbWl0dGVyLmxpc3RlbmVyQ291bnRcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudCAtIFRoZSBldmVudCB0byBjb3VudCBsaXN0ZW5lcnMgZm9yXG4gICAgICogQHJldHVybnMge251bWJlcn0gVGhlIG51bWJlciBvZiBsaXN0ZW5lcnMgZm9yIHRoZSBnaXZlbiBldmVudFxuICAgICAqL1xuICAgIHB1YmxpYyBsaXN0ZW5lckNvdW50KGV2ZW50OiBzdHJpbmcpOiBudW1iZXIge1xuICAgICAgICBpZiAoIXRoaXMubGlzdGVuZXJzW2V2ZW50XSkge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzW2V2ZW50XS5sZW5ndGg7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgVHJhY2luZygpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3RyYWNpbmcvVHJhY2luZy50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUE2QkE7OztBQUVBO0FBK0dBO0FBN0dBOzs7Ozs7Ozs7Ozs7O0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTs7Ozs7O0FBS0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7QUFDQTtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFFQTs7Ozs7Ozs7Ozs7Ozs7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7Ozs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFHQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 12 */
/*!*****************************************!*\
  !*** ./src/common/DateTimeUtilities.ts ***!
  \*****************************************/
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getDateTime = getDateTime;\nfunction toTwoDigits(value) {\n    return value < 10 ? '0' + value : value;\n}\nfunction toThreeDigits(value) {\n    if (value < 10) {\n        return '00' + value;\n    }\n    if (value < 100) {\n        return '0' + value;\n    }\n    return value;\n}\nfunction getUTCOffset(date) {\n    var offset = date.getTimezoneOffset();\n    var sign = offset >= 0 ? '+' : '-';\n    offset = Math.abs(offset);\n    var hours = toTwoDigits(Math.floor(offset / 60));\n    var minutes = toTwoDigits(offset % 60);\n    return sign + hours + minutes;\n}\n// Convert time according to the format string: 'YYYY-MM-DDTHH:mm:ss.SSS ZZ'\n// Output should look like: \"2016-06-08T09:07:11.021 -0700\"\nfunction getDateTime() {\n    var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n\n    return d.getFullYear() + '-' + toTwoDigits(d.getMonth() + 1) + '-' + toTwoDigits(d.getDate()) + 'T' + toTwoDigits(d.getHours()) + ':' + toTwoDigits(d.getMinutes()) + ':' + toTwoDigits(d.getSeconds()) + '.' + toThreeDigits(d.getMilliseconds()) + getUTCOffset(d);\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tbW9uL0RhdGVUaW1lVXRpbGl0aWVzLnRzPzAyNzAiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gdG9Ud29EaWdpdHModmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPCAxMCA/ICcwJyArIHZhbHVlIDogdmFsdWU7XG59XG5cbmZ1bmN0aW9uIHRvVGhyZWVEaWdpdHModmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPCAxMCkge1xuICAgICAgICByZXR1cm4gJzAwJyArIHZhbHVlO1xuICAgIH1cblxuICAgIGlmICh2YWx1ZSA8IDEwMCkge1xuICAgICAgICByZXR1cm4gJzAnICsgdmFsdWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiBnZXRVVENPZmZzZXQoZGF0ZSkge1xuICAgIGxldCBvZmZzZXQgPSBkYXRlLmdldFRpbWV6b25lT2Zmc2V0KCk7XG4gICAgY29uc3Qgc2lnbiA9IChvZmZzZXQgPj0gMCkgPyAnKycgOiAnLSc7XG4gICAgb2Zmc2V0ID0gTWF0aC5hYnMob2Zmc2V0KTtcbiAgICBjb25zdCBob3VycyA9IHRvVHdvRGlnaXRzKE1hdGguZmxvb3Iob2Zmc2V0IC8gNjApKTtcbiAgICBjb25zdCBtaW51dGVzID0gdG9Ud29EaWdpdHMob2Zmc2V0ICUgNjApO1xuICAgIHJldHVybiBzaWduICsgaG91cnMgKyBtaW51dGVzO1xufVxuXG4vLyBDb252ZXJ0IHRpbWUgYWNjb3JkaW5nIHRvIHRoZSBmb3JtYXQgc3RyaW5nOiAnWVlZWS1NTS1ERFRISDptbTpzcy5TU1MgWlonXG4vLyBPdXRwdXQgc2hvdWxkIGxvb2sgbGlrZTogXCIyMDE2LTA2LTA4VDA5OjA3OjExLjAyMSAtMDcwMFwiXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGF0ZVRpbWUoZDogRGF0ZSA9IG5ldyBEYXRlKCkpOiBzdHJpbmcge1xuICAgIHJldHVybiBkLmdldEZ1bGxZZWFyKCkgKyAnLScgKyB0b1R3b0RpZ2l0cyhkLmdldE1vbnRoKCkgKyAxKSArICctJyArIHRvVHdvRGlnaXRzKGQuZ2V0RGF0ZSgpKSArICdUJyArXG4gICAgICAgIHRvVHdvRGlnaXRzKGQuZ2V0SG91cnMoKSkgKyAnOicgKyB0b1R3b0RpZ2l0cyhkLmdldE1pbnV0ZXMoKSkgKyAnOicgKyB0b1R3b0RpZ2l0cyhkLmdldFNlY29uZHMoKSkgKyAnLicgK1xuICAgICAgICB0b1RocmVlRGlnaXRzKGQuZ2V0TWlsbGlzZWNvbmRzKCkpICsgZ2V0VVRDT2Zmc2V0KGQpO1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2NvbW1vbi9EYXRlVGltZVV0aWxpdGllcy50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUFBO0FBR0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 13 */
/*!******************************************!*\
  !*** ./~/parse-headers/parse-headers.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("var trim = __webpack_require__(/*! trim */ 14)\n  , forEach = __webpack_require__(/*! for-each */ 15)\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BhcnNlLWhlYWRlcnMvcGFyc2UtaGVhZGVycy5qcz84NDA0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciB0cmltID0gcmVxdWlyZSgndHJpbScpXG4gICwgZm9yRWFjaCA9IHJlcXVpcmUoJ2Zvci1lYWNoJylcbiAgLCBpc0FycmF5ID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZykgPT09ICdbb2JqZWN0IEFycmF5XSc7XG4gICAgfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChoZWFkZXJzKSB7XG4gIGlmICghaGVhZGVycylcbiAgICByZXR1cm4ge31cblxuICB2YXIgcmVzdWx0ID0ge31cblxuICBmb3JFYWNoKFxuICAgICAgdHJpbShoZWFkZXJzKS5zcGxpdCgnXFxuJylcbiAgICAsIGZ1bmN0aW9uIChyb3cpIHtcbiAgICAgICAgdmFyIGluZGV4ID0gcm93LmluZGV4T2YoJzonKVxuICAgICAgICAgICwga2V5ID0gdHJpbShyb3cuc2xpY2UoMCwgaW5kZXgpKS50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgLCB2YWx1ZSA9IHRyaW0ocm93LnNsaWNlKGluZGV4ICsgMSkpXG5cbiAgICAgICAgaWYgKHR5cGVvZihyZXN1bHRba2V5XSkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZVxuICAgICAgICB9IGVsc2UgaWYgKGlzQXJyYXkocmVzdWx0W2tleV0pKSB7XG4gICAgICAgICAgcmVzdWx0W2tleV0ucHVzaCh2YWx1ZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXN1bHRba2V5XSA9IFsgcmVzdWx0W2tleV0sIHZhbHVlIF1cbiAgICAgICAgfVxuICAgICAgfVxuICApXG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9wYXJzZS1oZWFkZXJzL3BhcnNlLWhlYWRlcnMuanNcbi8vIG1vZHVsZSBpZCA9IDEzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 14 */
/*!*************************!*\
  !*** ./~/trim/index.js ***!
  \*************************/
/***/ function(module, exports) {

	eval("\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3RyaW0vaW5kZXguanM/NjhhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHRyaW07XG5cbmZ1bmN0aW9uIHRyaW0oc3RyKXtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eXFxzKnxcXHMqJC9nLCAnJyk7XG59XG5cbmV4cG9ydHMubGVmdCA9IGZ1bmN0aW9uKHN0cil7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXlxccyovLCAnJyk7XG59O1xuXG5leHBvcnRzLnJpZ2h0ID0gZnVuY3Rpb24oc3RyKXtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9cXHMqJC8sICcnKTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vdHJpbS9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 15 */
/*!*****************************!*\
  !*** ./~/for-each/index.js ***!
  \*****************************/
/***/ function(module, exports, __webpack_require__) {

	eval("var isFunction = __webpack_require__(/*! is-function */ 16)\n\nmodule.exports = forEach\n\nvar toString = Object.prototype.toString\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction forEach(list, iterator, context) {\n    if (!isFunction(iterator)) {\n        throw new TypeError('iterator must be a function')\n    }\n\n    if (arguments.length < 3) {\n        context = this\n    }\n    \n    if (toString.call(list) === '[object Array]')\n        forEachArray(list, iterator, context)\n    else if (typeof list === 'string')\n        forEachString(list, iterator, context)\n    else\n        forEachObject(list, iterator, context)\n}\n\nfunction forEachArray(array, iterator, context) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            iterator.call(context, array[i], i, array)\n        }\n    }\n}\n\nfunction forEachString(string, iterator, context) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        iterator.call(context, string.charAt(i), i, string)\n    }\n}\n\nfunction forEachObject(object, iterator, context) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            iterator.call(context, object[k], k, object)\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Zvci1lYWNoL2luZGV4LmpzPzI2ZTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzRnVuY3Rpb24gPSByZXF1aXJlKCdpcy1mdW5jdGlvbicpXG5cbm1vZHVsZS5leHBvcnRzID0gZm9yRWFjaFxuXG52YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nXG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5XG5cbmZ1bmN0aW9uIGZvckVhY2gobGlzdCwgaXRlcmF0b3IsIGNvbnRleHQpIHtcbiAgICBpZiAoIWlzRnVuY3Rpb24oaXRlcmF0b3IpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2l0ZXJhdG9yIG11c3QgYmUgYSBmdW5jdGlvbicpXG4gICAgfVxuXG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzKSB7XG4gICAgICAgIGNvbnRleHQgPSB0aGlzXG4gICAgfVxuICAgIFxuICAgIGlmICh0b1N0cmluZy5jYWxsKGxpc3QpID09PSAnW29iamVjdCBBcnJheV0nKVxuICAgICAgICBmb3JFYWNoQXJyYXkobGlzdCwgaXRlcmF0b3IsIGNvbnRleHQpXG4gICAgZWxzZSBpZiAodHlwZW9mIGxpc3QgPT09ICdzdHJpbmcnKVxuICAgICAgICBmb3JFYWNoU3RyaW5nKGxpc3QsIGl0ZXJhdG9yLCBjb250ZXh0KVxuICAgIGVsc2VcbiAgICAgICAgZm9yRWFjaE9iamVjdChsaXN0LCBpdGVyYXRvciwgY29udGV4dClcbn1cblxuZnVuY3Rpb24gZm9yRWFjaEFycmF5KGFycmF5LCBpdGVyYXRvciwgY29udGV4dCkge1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhcnJheS5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChhcnJheSwgaSkpIHtcbiAgICAgICAgICAgIGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgYXJyYXlbaV0sIGksIGFycmF5KVxuICAgICAgICB9XG4gICAgfVxufVxuXG5mdW5jdGlvbiBmb3JFYWNoU3RyaW5nKHN0cmluZywgaXRlcmF0b3IsIGNvbnRleHQpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gc3RyaW5nLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIC8vIG5vIHN1Y2ggdGhpbmcgYXMgYSBzcGFyc2Ugc3RyaW5nLlxuICAgICAgICBpdGVyYXRvci5jYWxsKGNvbnRleHQsIHN0cmluZy5jaGFyQXQoaSksIGksIHN0cmluZylcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGZvckVhY2hPYmplY3Qob2JqZWN0LCBpdGVyYXRvciwgY29udGV4dCkge1xuICAgIGZvciAodmFyIGsgaW4gb2JqZWN0KSB7XG4gICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgaykpIHtcbiAgICAgICAgICAgIGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgb2JqZWN0W2tdLCBrLCBvYmplY3QpXG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vZm9yLWVhY2gvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDE1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 16 */
/*!********************************!*\
  !*** ./~/is-function/index.js ***!
  \********************************/
/***/ function(module, exports) {

	eval("module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lzLWZ1bmN0aW9uL2luZGV4LmpzPzIwN2IiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBpc0Z1bmN0aW9uXG5cbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdcblxuZnVuY3Rpb24gaXNGdW5jdGlvbiAoZm4pIHtcbiAgdmFyIHN0cmluZyA9IHRvU3RyaW5nLmNhbGwoZm4pXG4gIHJldHVybiBzdHJpbmcgPT09ICdbb2JqZWN0IEZ1bmN0aW9uXScgfHxcbiAgICAodHlwZW9mIGZuID09PSAnZnVuY3Rpb24nICYmIHN0cmluZyAhPT0gJ1tvYmplY3QgUmVnRXhwXScpIHx8XG4gICAgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmXG4gICAgIC8vIElFOCBhbmQgYmVsb3dcbiAgICAgKGZuID09PSB3aW5kb3cuc2V0VGltZW91dCB8fFxuICAgICAgZm4gPT09IHdpbmRvdy5hbGVydCB8fFxuICAgICAgZm4gPT09IHdpbmRvdy5jb25maXJtIHx8XG4gICAgICBmbiA9PT0gd2luZG93LnByb21wdCkpXG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lzLWZ1bmN0aW9uL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 17 */
/*!********************************************!*\
  !*** ./src/inspectors/HttpRequestUtils.ts ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createEmptyBody = createEmptyBody;\nexports.createBodyForBlob = createBodyForBlob;\nexports.getMultiPartFormBoundary = getMultiPartFormBoundary;\nexports.getMultiPartFormParts = getMultiPartFormParts;\nexports.tryFindResourceTimingObject = tryFindResourceTimingObject;\n\nvar _GeneralUtilities = __webpack_require__(/*! ../common/GeneralUtilities */ 4);\n\nvar _Constants = __webpack_require__(/*! ../common/Constants */ 9);\n\n/**\n * set of regular expressions that match a mime type when the encoding of a payload is UTF8\n */\nvar UTF8_ENCODING_MIME_TYPES = [/^text\\//, /^application\\/.*?xml/, /^application\\/json/, /^application\\/javascript/, /^application\\/x-www-form-urlencoded/, /^multipart\\/form-data/];\n/**\n * Infer the encoding type given a blob\n *\n * @param blob The blob to get the encoding for\n */\nfunction getEncodingForBlob(blob) {\n    var encoding = 'none';\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = UTF8_ENCODING_MIME_TYPES[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var mimeType = _step.value;\n\n            if (mimeType.test(blob.type)) {\n                encoding = 'utf8';\n                break;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n                _iterator['return']();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return encoding;\n}\nfunction createEmptyBody(isTruncated) {\n    return {\n        size: 0,\n        encoding: 'none',\n        content: '',\n        isTruncated: isTruncated\n    };\n}\nfunction createBodyForBlob(contentTypeHeader, blob, includeParts, cb) {\n    // TODO: https://github.com/Glimpse/Glimpse.Node.Prototype/issues/307\n    // Add support for base64 encoding non-text content by setting the encoding here\n    // Note on use of setTimeout() below.  This is done to ensure all code paths execute asynchronously,\n    // irrespective of whether convertBlobtoText is called.  For a more in-depth discussion,\n    // see https://nodejs.org/dist/latest-v7.x/docs/api/process.html#process_process_nexttick_callback_args\n    if (blob.size) {\n        var encoding = getEncodingForBlob(blob);\n        switch (encoding) {\n            case 'utf8':\n                (0, _GeneralUtilities.convertBlobToText)(blob, encoding, function (content) {\n                    var boundary = getMultiPartFormBoundary(contentTypeHeader);\n                    var parts = boundary && includeParts ? getMultiPartFormParts(boundary, content) : [];\n                    content = content.slice(0, _Constants.MAX_HTTP_BODY_SIZE);\n                    var bodyMessage = {\n                        size: blob.size,\n                        encoding: encoding,\n                        content: content,\n                        isTruncated: blob.size > content.length\n                    };\n                    if (parts && includeParts) {\n                        bodyMessage.parts = parts;\n                    }\n                    cb(bodyMessage);\n                });\n                break;\n            default:\n                setTimeout(function () {\n                    return cb({\n                        size: blob.size,\n                        encoding: encoding,\n                        content: '',\n                        isTruncated: true\n                    });\n                }, 0);\n                break;\n        }\n    } else {\n        setTimeout(function () {\n            return cb(createEmptyBody(false));\n        }, 0);\n    }\n}\n/**\n * Function to convert a string to a map from header-name => string[] of header values\n *\n * @param rawHeaders raw headers string\n */\nfunction convertRawHeaders(rawHeaders) {\n    var h = {};\n    rawHeaders = rawHeaders.trim();\n    var lines = rawHeaders.split('\\r\\n');\n    lines.forEach(function (l) {\n        var idx = l.indexOf(':');\n        if (idx > 0) {\n            var name = l.substring(0, idx).trim().toLowerCase();\n            var value = l.substring(idx + 1, l.length).trim();\n            if (!h[name]) {\n                h[name] = [];\n            }\n            h[name].push(value);\n        }\n    });\n    return h;\n}\n/**\n * Regular expression to pull boundary delimiter from multipart/form-data content type.\n * valid boundary characters taken from grammar defined in https://www.ietf.org/rfc/rfc2046.txt, Appendix A\n */\nvar MULTIPART_FORMDATA_REG_EX = /\\s*(multipart\\/form-data)\\s*;.*boundary\\s*=\\s*\"?([0-9a-zA-Z'()+_,-.\\/:=?]+)\"?/i;\n/**\n * Get the boundary delimiter for a multipart/forma-data content-type header.\n * If boundary paramter doesn't exist, or if content-type is not multipart/form-data\n * this will return undefined;\n *\n * @param contentTypeHeader the value of the Content-Type header\n */\nfunction getMultiPartFormBoundary(contentTypeHeader) {\n    var matches = MULTIPART_FORMDATA_REG_EX.exec(contentTypeHeader);\n    if (matches) {\n        return matches[2];\n    }\n    return undefined;\n}\n/**\n * Given a multipart-form/data encoded body & a boundary delimiter, this will return an\n * array of IPartSummary interfaces describing the parts.\n *\n * @param boundary The boundary delimiter string used in a multipart/form-data message\n * @param body The text body.\n */\nfunction getMultiPartFormParts(boundary, body) {\n    boundary = '--' + boundary;\n    var firstBoundaryRegExString = '^((\\\\r\\\\n)?' + boundary + '\\\\s*?\\\\r\\\\n)';\n    var firstBoundaryRegEx = new RegExp(firstBoundaryRegExString, 'gm');\n    // captures:\n    //    $1:  optional header section\n    //    $2:  CRLFCRLF seperating headers & body, or if no headers, separating boundary marker & body\n    //    $3:  body section\n    //    $4:  next boundary marker\n    //    $5:  content after closing boundary\n    //    $6:  \"--\" indicating end of multipart bodies.  If this part matches, then we've found the last boundary delimiter\n    //    $7:  trailing whitespace\n    var partRegExString = '([\\\\s\\\\S]*?)(\\\\r\\\\n\\\\r\\\\n)([\\\\s\\\\S]*?)(\\\\r\\\\n' + boundary + ')((--)|(\\\\s*?\\\\r\\\\n))';\n    var partRegEx = new RegExp(partRegExString, 'gm');\n    var firstBoundary = firstBoundaryRegEx.exec(body);\n    var partSummaries = [];\n    if (firstBoundary) {\n        // start searching for parts immediately after the first boundary reg ex match.  Back up two to include trailing \\r\\n\n        partRegEx.lastIndex = firstBoundaryRegEx.lastIndex - 2;\n        while (true) {\n            var part = partRegEx.exec(body);\n            if (!part) {\n                break;\n            }\n            var headerSectionLength = part[1] ? part[1].length : 0;\n            var bodyStartIndex = part.index + headerSectionLength + part[2].length;\n            var convertedHeaders = part[1] ? convertRawHeaders(part[1]) : {};\n            var bodySectionLength = part[3] ? part[3].length : 0;\n            partSummaries.push({\n                headers: convertedHeaders,\n                bodyStartIndex: part.index + part[1].length + part[2].length,\n                bodyEndIndex: bodyStartIndex + bodySectionLength,\n                bodyLength: bodySectionLength\n            });\n            if (part[6]) {\n                // found trailing -- after boundary, which indicates we're done\n                break;\n            }\n        }\n    }\n    return partSummaries;\n}\n/**\n * Asynchronously attempts to find a PerformanceResourceTiming object that matches the given initiatorType and url and\n * whose startTime is within two milliseconds of `expectedStart` parameter. Specified callback will invoked with the\n * matching PerformanceResourceTiming object, or with undefined if unable to find matching object.\n * Will attempt lookup up to 8 times, with a delay increasing exponentially from 1ms up to 256ms, for a maximum delay of 511ms\n *\n * @param initiatorType A RegExp that will match the expected value for the initiatorType of the target PerformanceResourceTiming instance\n * @param url - expected URL of the target PerformanceResourceTiming instance\n * @param expectedStart - the expected start time for the target PerformanceResourceTiming instance\n * @param cb - callback to invoke when target is found, or when max number of lookup attempts has been made\n */\nfunction tryFindResourceTimingObject(requestId, initiatorType, url, expectedStart, cb) {\n    if (!(performance && performance.getEntriesByType)) {\n        setTimeout(function () {\n            return cb(undefined);\n        });\n        return;\n    }\n    var maxDelay = 1024; // milliseconds\n    var delay = 1;\n    function tryGet() {\n        function computeDelta(p2) {\n            return Math.abs(p2.startTime - expectedStart);\n        }\n        // try to find this request\n        var entries = performance.getEntriesByType('resource');\n        var target = undefined;\n        var candidates = [];\n        for (var i = 0; i < entries.length; i++) {\n            var curr = entries[i];\n            if (requestId && curr.__glimpse_requestId === requestId) {\n                // if we've already matched this PerformanceResourceTiming with this specific request, then use it\n                target = curr;\n                break;\n            } else if (initiatorType.test(curr.initiatorType) && curr.name === url && expectedStart <= curr.startTime && !curr.__glimpse_requestId) {\n                candidates.push(curr);\n            }\n        }\n        if (!target) {\n            candidates.sort(function (a, b) {\n                var deltaA = computeDelta(a);\n                var deltaB = computeDelta(b);\n                // sort by smallest delta between startTime & expectedStart\n                return deltaA - deltaB;\n            });\n            if (candidates.length > 0) {\n                target = candidates[0];\n                target.__glimpse_requestId = requestId;\n            }\n        }\n        if (target || delay >= maxDelay) {\n            cb(target);\n        } else {\n            delay *= 2;\n            setTimeout(tryGet, delay);\n        }\n        return target;\n    }\n    setTimeout(tryGet, delay);\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 18 */
/*!******************************************!*\
  !*** ./src/inspectors/FetchInspector.ts ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FetchInspector = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _GlimpseLogger = __webpack_require__(/*! ../common/GlimpseLogger */ 8);\n\nvar _GlimpseLogger2 = _interopRequireDefault(_GlimpseLogger);\n\nvar _MessageMixins = __webpack_require__(/*! ../common/MessageMixins */ 6);\n\nvar _FetchProxy = __webpack_require__(/*! ../tracing/proxies/FetchProxy */ 19);\n\nvar _Tracing = __webpack_require__(/*! ../tracing/Tracing */ 11);\n\nvar _Tracing2 = _interopRequireDefault(_Tracing);\n\nvar _DateTimeUtilities = __webpack_require__(/*! ../common/DateTimeUtilities */ 12);\n\nvar _RequestUtilities = __webpack_require__(/*! ../common/RequestUtilities */ 5);\n\nvar _HttpRequestUtils = __webpack_require__(/*! ./HttpRequestUtils */ 17);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FetchInspector = exports.FetchInspector = function () {\n    function FetchInspector() {\n        _classCallCheck(this, FetchInspector);\n\n        this.initiatorRexExp = /(^$)|(other)/i;\n        this.requests = {};\n    }\n\n    _createClass(FetchInspector, [{\n        key: 'createHeaders',\n        value: function createHeaders(headers) {\n            var parsedHeaders = {};\n            var headerKeys = (0, _RequestUtilities.getHeaderKeys)(headers);\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = headerKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var header = _step.value;\n\n                    parsedHeaders[header] = headers.get(header);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator['return']) {\n                        _iterator['return']();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return parsedHeaders;\n        }\n    }, {\n        key: 'getContentTypeHeader',\n        value: function getContentTypeHeader(headers) {\n            var val = void 0;\n            val = headers.get('content-type');\n            if (!val) {\n                var headerKeys = (0, _RequestUtilities.getHeaderKeys)(headers);\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                    for (var _iterator2 = headerKeys[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                        var header = _step2.value;\n\n                        if (header.toLowerCase() === 'content-type') {\n                            val = headers[header];\n                            break;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError2 = true;\n                    _iteratorError2 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n                            _iterator2['return']();\n                        }\n                    } finally {\n                        if (_didIteratorError2) {\n                            throw _iteratorError2;\n                        }\n                    }\n                }\n            }\n            return val;\n        }\n    }, {\n        key: 'before',\n        value: function before(event) {\n            var _this = this;\n\n            var eventData = event.data;\n            eventData.request.blob().then(function (blob) {\n                var contentTypeHeader = _this.getContentTypeHeader(eventData.request.headers);\n                (0, _HttpRequestUtils.createBodyForBlob)(contentTypeHeader, blob, true, function (body) {\n                    var url = (0, _RequestUtilities.parseUrl)(eventData.request.url);\n                    var startTime = (0, _DateTimeUtilities.getDateTime)(new Date(event.timeStamp));\n                    var msg = _this.messagePublisher.createMessage('data-http-request', {\n                        correlationId: eventData.id,\n                        protocol: {\n                            identifier: url.protocol.replace(/\\:$/, '').toLowerCase()\n                        },\n                        url: eventData.request.url,\n                        method: eventData.request.method,\n                        startTime: startTime,\n                        timing: {\n                            startTime: 0\n                        },\n                        headers: _this.createHeaders(eventData.request.headers),\n                        isAjax: true,\n                        body: body\n                    });\n                    (0, _MessageMixins.addOffset)(event.offset, msg);\n                    _this.messagePublisher.publishMessage(msg);\n                });\n            });\n        }\n    }, {\n        key: 'after',\n        value: function after(event, requestEntry) {\n            var _this2 = this;\n\n            var eventData = event.data;\n            eventData.response.blob().then(function (blob) {\n                var responseEndOffset = performance.now();\n                // for fetch events, the initiator type is an empty string on chrome, and 'other' on firefox.\n                (0, _HttpRequestUtils.tryFindResourceTimingObject)(event.data.id, _this2.initiatorRexExp, event.data.response.url, requestEntry.startTimeOffset, function (timings) {\n                    // we make a best-effort to find the PerformanceResourceTiming instance associated with this request.  If we have one,\n                    // we use it, but if not, we fall back to using times associated with when different proxy methods were invoked\n                    var offset = timings ? timings.startTime : requestEntry.startTimeOffset;\n                    var startTime = 0;\n                    // leave responseStart undefined if no timings instance since this is optional and we don't know accurate value\n                    var responseStart = timings && timings.responseStart >= timings.startTime ? timings.responseStart - timings.startTime : undefined;\n                    var responseEnd = timings ? timings.responseEnd - timings.startTime : responseEndOffset - requestEntry.startTimeOffset;\n                    var contentTypeHeader = _this2.getContentTypeHeader(eventData.response.headers);\n                    (0, _HttpRequestUtils.createBodyForBlob)(contentTypeHeader, blob, false, function (body) {\n                        var statusCode = void 0;\n                        switch (eventData.response.type) {\n                            case 'error':\n                                // TODO: publish an error message here. See https://github.com/Glimpse/Glimpse.Browser.Agent/issues/134\n                                return;\n                            case 'opaque':\n                                statusCode = -1;\n                                break;\n                            case 'opaqueredirect':\n                                statusCode = -2;\n                                break;\n                            default:\n                                statusCode = eventData.response.status;\n                                break;\n                        }\n                        var msg = _this2.messagePublisher.createMessage('data-http-response', {\n                            correlationId: eventData.id,\n                            url: eventData.response.url,\n                            headers: _this2.createHeaders(eventData.response.headers),\n                            statusCode: statusCode,\n                            statusMessage: eventData.response.statusText,\n                            endTime: (0, _DateTimeUtilities.getDateTime)(new Date(event.timeStamp)),\n                            duration: responseEnd,\n                            timing: {\n                                startTime: startTime,\n                                responseEnd: responseEnd\n                            },\n                            body: body\n                        });\n                        if (responseStart !== undefined) {\n                            msg.payload.timing.responseStart = responseStart;\n                        }\n                        (0, _MessageMixins.addOffset)(offset, msg);\n                        _this2.messagePublisher.publishMessage(msg);\n                    });\n                });\n            });\n        }\n    }, {\n        key: 'numOutstandingRequests',\n        value: function numOutstandingRequests() {\n            return Object.keys(this.requests).length;\n        }\n    }, {\n        key: 'init',\n        value: function init(messagePublisher) {\n            var _this3 = this;\n\n            this.messagePublisher = messagePublisher;\n            _Tracing2['default'].on(_FetchProxy.EVENT_FETCH_REQUEST_SENT, function (event) {\n                _this3.requests[event.data.id] = {\n                    startTimeStamp: event.timeStamp,\n                    startTimeOffset: event.offset\n                };\n                _this3.before(event);\n            });\n            _Tracing2['default'].on(_FetchProxy.EVENT_FETCH_RESPONSE_RECEIVED, function (event) {\n                var requestEntry = _this3.requests[event.data.id];\n                if (!requestEntry) {\n                    _GlimpseLogger2['default'].error('Glimpse Internal Error: could not find associated master data, some inspection data will be lost.');\n                    return;\n                }\n                _this3.after(event, requestEntry);\n                delete _this3.requests[event.data.id];\n            });\n            _Tracing2['default'].on(_FetchProxy.EVENT_FETCH_ERROR, function (data) {\n                delete _this3.requests[data.data.id];\n            });\n        }\n    }]);\n\n    return FetchInspector;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 19 */
/*!*******************************************!*\
  !*** ./src/tracing/proxies/FetchProxy.ts ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FetchProxy = exports.EVENT_FETCH_ERROR = exports.EVENT_FETCH_RESPONSE_RECEIVED = exports.EVENT_FETCH_REQUEST_SENT = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Tracing = __webpack_require__(/*! ../Tracing */ 11);\n\nvar _Tracing2 = _interopRequireDefault(_Tracing);\n\nvar _GeneralUtilities = __webpack_require__(/*! ../../common/GeneralUtilities */ 4);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EVENT_FETCH_REQUEST_SENT = exports.EVENT_FETCH_REQUEST_SENT = 'invoke|pre|fetch.request-sent';\nvar EVENT_FETCH_RESPONSE_RECEIVED = exports.EVENT_FETCH_RESPONSE_RECEIVED = 'notify|fetch.response-received';\nvar EVENT_FETCH_ERROR = exports.EVENT_FETCH_ERROR = 'notify|fetch.error';\n\nvar FetchProxy = exports.FetchProxy = function () {\n    function FetchProxy() {\n        _classCallCheck(this, FetchProxy);\n    }\n\n    _createClass(FetchProxy, [{\n        key: 'isSupported',\n        value: function isSupported() {\n            return !!(self && typeof self.fetch !== 'undefined');\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            // Note: we use `self` instead of `window` in case we're in a worker thread\n            // See https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n            // Only initialize if this browser supports the Fetch API\n            if (self.fetch) {\n                var oldFetch = self.fetch;\n                self.fetch = function fetch(input, init) {\n                    if (!init) {\n                        init = { headers: new Headers() };\n                    }\n                    if (init.headers instanceof Headers) {\n                        init.headers.set('X-Glimpse-IsAjax', 'true');\n                    } else if (_typeof(init.headers) === 'object') {\n                        init.headers['X-Glimpse-IsAjax'] = 'true';\n                    }\n                    // Create a request object if one wasn't specified, or clone the\n                    // existing one if it was so we can safely read the body.\n                    var request = void 0;\n\n                    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n                        args[_key - 2] = arguments[_key];\n                    }\n\n                    if (input instanceof Request) {\n                        request = input.clone();\n                    } else {\n                        // OK, so I know this looks weird, but the use of Promises\n                        // here provides a unique challenge. If you instantiate a\n                        // Request object directly, it will throw an exception if the\n                        // input is malformed. However, the `fetch()` API is wrapped\n                        // in a promise, which means malformed input does _not_ throw\n                        // when passed to `fetch()`. Instead it causes the promise to\n                        // reject. We do _not_ want to pick up on this case though,\n                        // because we would otherwise publish an ERROR_EVENT, which\n                        // we do _not_ want in this case. So we detect malformed input,\n                        // and return the promise directly without listening to it.\n                        try {\n                            request = new Request(input, init);\n                        } catch (e) {\n                            return oldFetch.call.apply(oldFetch, [this, input, init].concat(args));\n                        }\n                    }\n                    var id = (0, _GeneralUtilities.getGuid)();\n                    // Publish the request message\n                    var requestSentEventData = {\n                        id: id,\n                        request: request\n                    };\n                    _Tracing2['default'].publish(EVENT_FETCH_REQUEST_SENT, requestSentEventData);\n                    // Call the original fetch method. We wait for the response to be\n                    // received using the promise, and publish the resulting\n                    var fetchPromise = oldFetch.call.apply(oldFetch, [this, input, init].concat(args));\n                    fetchPromise.then(function (response) {\n                        var responseReceivedEventData = {\n                            id: id,\n                            response: response.clone()\n                        };\n                        _Tracing2['default'].publish(EVENT_FETCH_RESPONSE_RECEIVED, responseReceivedEventData);\n                    }, function (error) {\n                        var errorEventData = {\n                            id: id,\n                            error: error\n                        };\n                        _Tracing2['default'].publish(EVENT_FETCH_ERROR, errorEventData);\n                    });\n                    return fetchPromise;\n                };\n            }\n        }\n    }]);\n\n    return FetchProxy;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 20 */
/*!***************************************************!*\
  !*** ./src/inspectors/ResourceTimingInspector.ts ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ResourceTimingInspector = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ResourceTimingProxy = __webpack_require__(/*! ../tracing/proxies/ResourceTimingProxy */ 21);\n\nvar _Tracing = __webpack_require__(/*! ../tracing/Tracing */ 11);\n\nvar _Tracing2 = _interopRequireDefault(_Tracing);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ResourceTimingInspector = exports.ResourceTimingInspector = function () {\n    function ResourceTimingInspector() {\n        _classCallCheck(this, ResourceTimingInspector);\n    }\n\n    _createClass(ResourceTimingInspector, [{\n        key: 'init',\n        value: function init(messagePublisher) {\n            _Tracing2['default'].on(_ResourceTimingProxy.EVENT_RESOURCE_TIMING_COLLECTED, function (event) {\n                // TODO: Eventually, we'll add more logic here to clean up data in\n                // https://github.com/Glimpse/Glimpse.Browser.Agent/issues/29.\n                messagePublisher.createAndPublishMessage('browser-resource', {\n                    timings: event.data\n                });\n            });\n        }\n    }]);\n\n    return ResourceTimingInspector;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5zcGVjdG9ycy9SZXNvdXJjZVRpbWluZ0luc3BlY3Rvci50cz80MTFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElJbnNwZWN0b3IgfSBmcm9tICcuL0lJbnNwZWN0b3InO1xuaW1wb3J0IHsgSU1lc3NhZ2VQdWJsaXNoZXIgfSBmcm9tICcuLi9NZXNzYWdlUHVibGlzaGVyJztcbmltcG9ydCB7IElQcm94eUV2ZW50IH0gZnJvbSAnLi4vdHJhY2luZy9JUHJveHlFdmVudCc7XG5pbXBvcnQgeyBFVkVOVF9SRVNPVVJDRV9USU1JTkdfQ09MTEVDVEVEIH0gZnJvbSAnLi4vdHJhY2luZy9wcm94aWVzL1Jlc291cmNlVGltaW5nUHJveHknO1xuaW1wb3J0IHRyYWNpbmcgZnJvbSAnLi4vdHJhY2luZy9UcmFjaW5nJztcblxuZXhwb3J0IGNsYXNzIFJlc291cmNlVGltaW5nSW5zcGVjdG9yIGltcGxlbWVudHMgSUluc3BlY3RvciB7XG4gICAgcHVibGljIGluaXQobWVzc2FnZVB1Ymxpc2hlcjogSU1lc3NhZ2VQdWJsaXNoZXIpIHtcbiAgICAgICAgdHJhY2luZy5vbihFVkVOVF9SRVNPVVJDRV9USU1JTkdfQ09MTEVDVEVELCAoZXZlbnQ6IElQcm94eUV2ZW50KSA9PiB7XG4gICAgICAgICAgICAvLyBUT0RPOiBFdmVudHVhbGx5LCB3ZSdsbCBhZGQgbW9yZSBsb2dpYyBoZXJlIHRvIGNsZWFuIHVwIGRhdGEgaW5cbiAgICAgICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9HbGltcHNlL0dsaW1wc2UuQnJvd3Nlci5BZ2VudC9pc3N1ZXMvMjkuXG4gICAgICAgICAgICBtZXNzYWdlUHVibGlzaGVyLmNyZWF0ZUFuZFB1Ymxpc2hNZXNzYWdlKCdicm93c2VyLXJlc291cmNlJywge1xuICAgICAgICAgICAgICAgIHRpbWluZ3M6IGV2ZW50LmRhdGFcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvaW5zcGVjdG9ycy9SZXNvdXJjZVRpbWluZ0luc3BlY3Rvci50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR0E7QUFDQTtBQUFBO0FBQ0E7Ozs7Ozs7QUFFQTs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTs7OzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 21 */
/*!****************************************************!*\
  !*** ./src/tracing/proxies/ResourceTimingProxy.ts ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ResourceTimingProxy = exports.EVENT_RESOURCE_TIMING_COLLECTED = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Tracing = __webpack_require__(/*! ../Tracing */ 11);\n\nvar _Tracing2 = _interopRequireDefault(_Tracing);\n\nvar _RequestUtilities = __webpack_require__(/*! ../../common/RequestUtilities */ 5);\n\nvar _PerformanceUtilities = __webpack_require__(/*! ../../common/PerformanceUtilities */ 22);\n\nvar _PerformanceUtilities2 = _interopRequireDefault(_PerformanceUtilities);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UPDATE_INTERVAL = 1000;\nvar EVENT_RESOURCE_TIMING_COLLECTED = exports.EVENT_RESOURCE_TIMING_COLLECTED = 'notify|performance.resource-collected';\n\nvar ResourceTimingProxy = exports.ResourceTimingProxy = function () {\n    function ResourceTimingProxy() {\n        _classCallCheck(this, ResourceTimingProxy);\n    }\n\n    _createClass(ResourceTimingProxy, [{\n        key: 'isSupported',\n        value: function isSupported() {\n            // Don't initialize if this browser doesn't support resource timing\n            return !!(_PerformanceUtilities2['default'] && _PerformanceUtilities2['default'].getEntriesByType);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            function processEntry(entry) {\n                // This sheds any extra properties that may be introduced to resource timing\n                // or are browser specific, and ensures the data matches our interface for it.\n                return {\n                    name: entry.name,\n                    startTime: entry.startTime,\n                    duration: entry.duration,\n                    initiatorType: entry.initiatorType,\n                    nextHopProtocol: entry.nextHopProtocol,\n                    redirectStart: entry.redirectStart,\n                    redirectEnd: entry.redirectEnd,\n                    fetchStart: entry.fetchStart,\n                    domainLookupStart: entry.domainLookupStart,\n                    domainLookupEnd: entry.domainLookupEnd,\n                    connectStart: entry.connectStart,\n                    connectEnd: entry.connectEnd,\n                    secureConnectionStart: entry.secureConnectionStart,\n                    requestStart: entry.requestStart,\n                    responseStart: entry.responseStart,\n                    responseEnd: entry.responseEnd,\n                    transferSize: entry.transferSize,\n                    encodedBodySize: entry.encodedBodySize,\n                    decodedBodySize: entry.decodedBodySize\n                };\n            }\n            // Eventually we want to switch to using Performance Observers once browsers\n            // start to implement, but currently none do, so we poll for entries instead\n            // https://w3c.github.io/performance-timeline/#dom-performanceobserver\n            var reportedEntries = {};\n            function record() {\n                var resources = _PerformanceUtilities2['default'].getEntriesByType('resource');\n                var entriesToPublish = [];\n                var ingressUrl = (0, _RequestUtilities.getMessageIngressUrl)();\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = resources[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var resource = _step.value;\n\n                        // Create a unique id for the entry, a combination of the start time\n                        // and resolved URL\n                        var id = resource.startTime + '#' + resource.name;\n                        if (!reportedEntries[id] && resource.name.indexOf(ingressUrl) === -1) {\n                            reportedEntries[id] = true;\n                            entriesToPublish.push(processEntry(resource));\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator['return']) {\n                            _iterator['return']();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                if (entriesToPublish.length) {\n                    _Tracing2['default'].publish(EVENT_RESOURCE_TIMING_COLLECTED, entriesToPublish);\n                }\n                setTimeout(record, UPDATE_INTERVAL);\n            }\n            ;\n            record();\n        }\n    }]);\n\n    return ResourceTimingProxy;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 22 */
/*!********************************************!*\
  !*** ./src/common/PerformanceUtilities.ts ***!
  \********************************************/
/***/ function(module, exports) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction getPerformance() {\n    // tslint:disable:no-any\n    return window.performance || window.webkitPerformance || window.msPerformance || window.mozPerformance;\n}\nexports[\"default\"] = getPerformance();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tbW9uL1BlcmZvcm1hbmNlVXRpbGl0aWVzLnRzP2NhN2MiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2V0UGVyZm9ybWFuY2UoKTogUGVyZm9ybWFuY2Uge1xuICAgIC8vIHRzbGludDpkaXNhYmxlOm5vLWFueVxuICAgIHJldHVybiB3aW5kb3cucGVyZm9ybWFuY2UgfHxcbiAgICAgICAgKDxhbnk+d2luZG93KS53ZWJraXRQZXJmb3JtYW5jZSB8fFxuICAgICAgICAoPGFueT53aW5kb3cpLm1zUGVyZm9ybWFuY2UgfHxcbiAgICAgICAgKDxhbnk+d2luZG93KS5tb3pQZXJmb3JtYW5jZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0UGVyZm9ybWFuY2UoKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9jb21tb24vUGVyZm9ybWFuY2VVdGlsaXRpZXMudHMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBSUE7QUFFQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 23 */
/*!*****************************************************!*\
  !*** ./src/inspectors/NavigationTimingInspector.ts ***!
  \*****************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.NavigationTimingInspector = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _NavigationTimingProxy = __webpack_require__(/*! ../tracing/proxies/NavigationTimingProxy */ 24);\n\nvar _Tracing = __webpack_require__(/*! ../tracing/Tracing */ 11);\n\nvar _Tracing2 = _interopRequireDefault(_Tracing);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NavigationTimingInspector = exports.NavigationTimingInspector = function () {\n    function NavigationTimingInspector() {\n        _classCallCheck(this, NavigationTimingInspector);\n    }\n\n    _createClass(NavigationTimingInspector, [{\n        key: 'init',\n        value: function init(messagePublisher) {\n            _Tracing2['default'].on(_NavigationTimingProxy.EVENT_NAVIGATION_TIMING_COLLECTED, function (event) {\n                var data = event.data;\n                var message = Object.assign({ loadDuration: data.loadEventEnd - data.fetchStart,\n                    // time spent constructing the DOM tree\n                    domReadyDuration: data.domComplete - data.domInteractive,\n                    // time consumed preparing the new page\n                    readyStartDuration: data.fetchStart - data.navigationStart,\n                    // time spent during redirection\n                    redirectDuration: data.redirectEnd - data.redirectStart,\n                    // appCache\n                    appcacheDuration: data.domainLookupStart - data.fetchStart,\n                    // time spent unloading documents\n                    unloadEventDuration: data.unloadEventEnd - data.unloadEventStart,\n                    // DNS query time\n                    lookupDomainDuration: data.domainLookupEnd - data.domainLookupStart,\n                    // TCP connection time\n                    connectDuration: data.connectEnd - data.connectStart,\n                    // time spent during the request\n                    requestDuration: data.responseEnd - data.requestStart,\n                    // request to completion of the DOM loading\n                    initDomTreeDuration: data.domInteractive - data.responseEnd,\n                    // load event time\n                    loadEventDuration: data.loadEventEnd - data.loadEventStart,\n                    // time spent on the network making the outgoing request\n                    networkRequestDuration: data.requestStart - data.navigationStart,\n                    // time spent on the network receiving the incoming response\n                    networkResponseDuration: data.responseEnd - data.responseStart,\n                    // time spent on the server processing the request\n                    serverDuration: data.responseEnd - data.requestStart,\n                    // time spent on the browser handling the response\n                    browserDuration: data.loadEventEnd - data.responseStart,\n                    // total time\n                    totalDuration: data.loadEventEnd - data.navigationStart }, event.data);\n                // time spent on the network for the whole request/response\n                message.networkDuration = message.networkRequestDuration + message.networkResponseDuration;\n                // TODO: Eventually, we'll add more logic here to clean up data in\n                // https://github.com/Glimpse/Glimpse.Browser.Agent/issues/29.\n                messagePublisher.createAndPublishMessage('browser-navigation-timing', message);\n            });\n        }\n    }]);\n\n    return NavigationTimingInspector;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5zcGVjdG9ycy9OYXZpZ2F0aW9uVGltaW5nSW5zcGVjdG9yLnRzP2IzODAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUluc3BlY3RvciB9IGZyb20gJy4vSUluc3BlY3Rvcic7XG5pbXBvcnQgeyBJTWVzc2FnZVB1Ymxpc2hlciB9IGZyb20gJy4uL01lc3NhZ2VQdWJsaXNoZXInO1xuaW1wb3J0IHsgSVByb3h5RXZlbnQgfSBmcm9tICcuLi90cmFjaW5nL0lQcm94eUV2ZW50JztcbmltcG9ydCB7IEVWRU5UX05BVklHQVRJT05fVElNSU5HX0NPTExFQ1RFRCwgSU5hdmlnYXRpb25UaW1pbmdDb2xsZWN0aW9uRXZlbnQgfSBmcm9tICcuLi90cmFjaW5nL3Byb3hpZXMvTmF2aWdhdGlvblRpbWluZ1Byb3h5JztcbmltcG9ydCB0cmFjaW5nIGZyb20gJy4uL3RyYWNpbmcvVHJhY2luZyc7XG5cbmV4cG9ydCBjbGFzcyBOYXZpZ2F0aW9uVGltaW5nSW5zcGVjdG9yIGltcGxlbWVudHMgSUluc3BlY3RvciB7XG4gICAgcHVibGljIGluaXQobWVzc2FnZVB1Ymxpc2hlcjogSU1lc3NhZ2VQdWJsaXNoZXIpIHtcbiAgICAgICAgdHJhY2luZy5vbihFVkVOVF9OQVZJR0FUSU9OX1RJTUlOR19DT0xMRUNURUQsIChldmVudDogSVByb3h5RXZlbnQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGE6IElOYXZpZ2F0aW9uVGltaW5nQ29sbGVjdGlvbkV2ZW50ID0gZXZlbnQuZGF0YTtcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSB7XG4gICAgICAgICAgICAgICAgbG9hZER1cmF0aW9uOiBkYXRhLmxvYWRFdmVudEVuZCAtIGRhdGEuZmV0Y2hTdGFydCxcbiAgICAgICAgICAgICAgICAvLyB0aW1lIHNwZW50IGNvbnN0cnVjdGluZyB0aGUgRE9NIHRyZWVcbiAgICAgICAgICAgICAgICBkb21SZWFkeUR1cmF0aW9uOiBkYXRhLmRvbUNvbXBsZXRlIC0gZGF0YS5kb21JbnRlcmFjdGl2ZSxcbiAgICAgICAgICAgICAgICAvLyB0aW1lIGNvbnN1bWVkIHByZXBhcmluZyB0aGUgbmV3IHBhZ2VcbiAgICAgICAgICAgICAgICByZWFkeVN0YXJ0RHVyYXRpb246IGRhdGEuZmV0Y2hTdGFydCAtIGRhdGEubmF2aWdhdGlvblN0YXJ0LFxuICAgICAgICAgICAgICAgIC8vIHRpbWUgc3BlbnQgZHVyaW5nIHJlZGlyZWN0aW9uXG4gICAgICAgICAgICAgICAgcmVkaXJlY3REdXJhdGlvbjogZGF0YS5yZWRpcmVjdEVuZCAtIGRhdGEucmVkaXJlY3RTdGFydCxcbiAgICAgICAgICAgICAgICAvLyBhcHBDYWNoZVxuICAgICAgICAgICAgICAgIGFwcGNhY2hlRHVyYXRpb246IGRhdGEuZG9tYWluTG9va3VwU3RhcnQgLSBkYXRhLmZldGNoU3RhcnQsXG4gICAgICAgICAgICAgICAgLy8gdGltZSBzcGVudCB1bmxvYWRpbmcgZG9jdW1lbnRzXG4gICAgICAgICAgICAgICAgdW5sb2FkRXZlbnREdXJhdGlvbjogZGF0YS51bmxvYWRFdmVudEVuZCAtIGRhdGEudW5sb2FkRXZlbnRTdGFydCxcbiAgICAgICAgICAgICAgICAvLyBETlMgcXVlcnkgdGltZVxuICAgICAgICAgICAgICAgIGxvb2t1cERvbWFpbkR1cmF0aW9uOiBkYXRhLmRvbWFpbkxvb2t1cEVuZCAtIGRhdGEuZG9tYWluTG9va3VwU3RhcnQsXG4gICAgICAgICAgICAgICAgLy8gVENQIGNvbm5lY3Rpb24gdGltZVxuICAgICAgICAgICAgICAgIGNvbm5lY3REdXJhdGlvbjogZGF0YS5jb25uZWN0RW5kIC0gZGF0YS5jb25uZWN0U3RhcnQsXG4gICAgICAgICAgICAgICAgLy8gdGltZSBzcGVudCBkdXJpbmcgdGhlIHJlcXVlc3RcbiAgICAgICAgICAgICAgICByZXF1ZXN0RHVyYXRpb246IGRhdGEucmVzcG9uc2VFbmQgLSBkYXRhLnJlcXVlc3RTdGFydCxcbiAgICAgICAgICAgICAgICAvLyByZXF1ZXN0IHRvIGNvbXBsZXRpb24gb2YgdGhlIERPTSBsb2FkaW5nXG4gICAgICAgICAgICAgICAgaW5pdERvbVRyZWVEdXJhdGlvbjogZGF0YS5kb21JbnRlcmFjdGl2ZSAtIGRhdGEucmVzcG9uc2VFbmQsXG4gICAgICAgICAgICAgICAgLy8gbG9hZCBldmVudCB0aW1lXG4gICAgICAgICAgICAgICAgbG9hZEV2ZW50RHVyYXRpb246IGRhdGEubG9hZEV2ZW50RW5kIC0gZGF0YS5sb2FkRXZlbnRTdGFydCxcblxuICAgICAgICAgICAgICAgIC8vIHRpbWUgc3BlbnQgb24gdGhlIG5ldHdvcmsgbWFraW5nIHRoZSBvdXRnb2luZyByZXF1ZXN0XG4gICAgICAgICAgICAgICAgbmV0d29ya1JlcXVlc3REdXJhdGlvbjogZGF0YS5yZXF1ZXN0U3RhcnQgLSBkYXRhLm5hdmlnYXRpb25TdGFydCxcbiAgICAgICAgICAgICAgICAvLyB0aW1lIHNwZW50IG9uIHRoZSBuZXR3b3JrIHJlY2VpdmluZyB0aGUgaW5jb21pbmcgcmVzcG9uc2VcbiAgICAgICAgICAgICAgICBuZXR3b3JrUmVzcG9uc2VEdXJhdGlvbjogZGF0YS5yZXNwb25zZUVuZCAtIGRhdGEucmVzcG9uc2VTdGFydCxcbiAgICAgICAgICAgICAgICAvLyB0aW1lIHNwZW50IG9uIHRoZSBzZXJ2ZXIgcHJvY2Vzc2luZyB0aGUgcmVxdWVzdFxuICAgICAgICAgICAgICAgIHNlcnZlckR1cmF0aW9uOiBkYXRhLnJlc3BvbnNlRW5kIC0gZGF0YS5yZXF1ZXN0U3RhcnQsXG4gICAgICAgICAgICAgICAgLy8gdGltZSBzcGVudCBvbiB0aGUgYnJvd3NlciBoYW5kbGluZyB0aGUgcmVzcG9uc2VcbiAgICAgICAgICAgICAgICBicm93c2VyRHVyYXRpb246IGRhdGEubG9hZEV2ZW50RW5kIC0gZGF0YS5yZXNwb25zZVN0YXJ0LFxuICAgICAgICAgICAgICAgIC8vIHRvdGFsIHRpbWVcbiAgICAgICAgICAgICAgICB0b3RhbER1cmF0aW9uOiBkYXRhLmxvYWRFdmVudEVuZCAtIGRhdGEubmF2aWdhdGlvblN0YXJ0LFxuXG4gICAgICAgICAgICAgICAgLi4uZXZlbnQuZGF0YVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIC8vIHRpbWUgc3BlbnQgb24gdGhlIG5ldHdvcmsgZm9yIHRoZSB3aG9sZSByZXF1ZXN0L3Jlc3BvbnNlXG4gICAgICAgICAgICBtZXNzYWdlLm5ldHdvcmtEdXJhdGlvbiA9IG1lc3NhZ2UubmV0d29ya1JlcXVlc3REdXJhdGlvbiArIG1lc3NhZ2UubmV0d29ya1Jlc3BvbnNlRHVyYXRpb247XG5cbiAgICAgICAgICAgIC8vIFRPRE86IEV2ZW50dWFsbHksIHdlJ2xsIGFkZCBtb3JlIGxvZ2ljIGhlcmUgdG8gY2xlYW4gdXAgZGF0YSBpblxuICAgICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL0dsaW1wc2UvR2xpbXBzZS5Ccm93c2VyLkFnZW50L2lzc3Vlcy8yOS5cbiAgICAgICAgICAgIG1lc3NhZ2VQdWJsaXNoZXIuY3JlYXRlQW5kUHVibGlzaE1lc3NhZ2UoJ2Jyb3dzZXItbmF2aWdhdGlvbi10aW1pbmcnLCBtZXNzYWdlKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2luc3BlY3RvcnMvTmF2aWdhdGlvblRpbWluZ0luc3BlY3Rvci50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR0E7QUFDQTtBQUFBO0FBQ0E7Ozs7Ozs7QUFFQTs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 24 */
/*!******************************************************!*\
  !*** ./src/tracing/proxies/NavigationTimingProxy.ts ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.NavigationTimingProxy = exports.EVENT_NAVIGATION_TIMING_COLLECTED = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Tracing = __webpack_require__(/*! ../Tracing */ 11);\n\nvar _Tracing2 = _interopRequireDefault(_Tracing);\n\nvar _PerformanceUtilities = __webpack_require__(/*! ../../common/PerformanceUtilities */ 22);\n\nvar _PerformanceUtilities2 = _interopRequireDefault(_PerformanceUtilities);\n\nvar _RequestUtilities = __webpack_require__(/*! ../../common/RequestUtilities */ 5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EVENT_NAVIGATION_TIMING_COLLECTED = exports.EVENT_NAVIGATION_TIMING_COLLECTED = 'notify|performance.navigation-timing';\n\nvar NavigationTimingProxy = exports.NavigationTimingProxy = function () {\n    function NavigationTimingProxy() {\n        _classCallCheck(this, NavigationTimingProxy);\n    }\n\n    _createClass(NavigationTimingProxy, [{\n        key: 'isSupported',\n        value: function isSupported() {\n            return !!(_PerformanceUtilities2['default'] && _PerformanceUtilities2['default'].timing);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this = this;\n\n            // setup/regiter strategy to run later\n            (0, _RequestUtilities.addEvent)(window, 'load', function () {\n                setTimeout(function () {\n                    _this.processTimings(_PerformanceUtilities2['default'].timing);\n                });\n            });\n        }\n    }, {\n        key: 'processEntry',\n        value: function processEntry(entry) {\n            // This sheds any extra properties that may be introduced to navigation\n            // timing or are browser specific, and ensures the data matches our\n            // interface for it.\n            return {\n                connectEnd: entry.connectEnd,\n                connectStart: entry.connectStart,\n                domComplete: entry.domComplete,\n                domContentLoadedEventEnd: entry.domContentLoadedEventEnd,\n                domContentLoadedEventStart: entry.domContentLoadedEventStart,\n                domInteractive: entry.domInteractive,\n                domLoading: entry.domLoading,\n                domainLookupEnd: entry.domainLookupEnd,\n                domainLookupStart: entry.domainLookupStart,\n                fetchStart: entry.fetchStart,\n                firstPaint: entry.firstPaint,\n                firstPaintDuration: 0,\n                loadEventEnd: entry.loadEventEnd,\n                loadEventStart: entry.loadEventStart,\n                navigationStart: entry.navigationStart,\n                redirectEnd: entry.redirectEnd,\n                redirectStart: entry.redirectStart,\n                requestStart: entry.requestStart,\n                responseEnd: entry.responseEnd,\n                responseStart: entry.responseStart,\n                secureConnectionStart: entry.secureConnectionStart,\n                unloadEventEnd: entry.unloadEventEnd,\n                unloadEventStart: entry.unloadEventStart\n            };\n        }\n    }, {\n        key: 'processTimings',\n        value: function processTimings(timing) {\n            var eventData = this.processEntry(timing);\n            // time to first paint\n            // tslint:disable-next-line:no-any\n            if (eventData.firstPaint === undefined) {\n                // All times are relative times to the start time within the\n                // same objects\n                var firstPaint = 0;\n                var firstPaintDuration = 0;\n                //tslint:disable-next-line:no-any\n                if (window.chrome && window.chrome.loadTimes) {\n                    //tslint:disable-next-line:no-any\n                    var loadTimes = window.chrome.loadTimes();\n                    firstPaint = loadTimes.firstPaintTime * 1000;\n                    firstPaintDuration = firstPaint - loadTimes.startLoadTime * 1000;\n                } else if (typeof timing.msFirstPaint === 'number') {\n                    firstPaint = timing.msFirstPaint;\n                    firstPaintDuration = firstPaint - timing.navigationStart;\n                }\n                eventData.firstPaint = firstPaint;\n                eventData.firstPaintDuration = firstPaintDuration;\n            }\n            _Tracing2['default'].publish(EVENT_NAVIGATION_TIMING_COLLECTED, eventData);\n        }\n    }]);\n\n    return NavigationTimingProxy;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHJhY2luZy9wcm94aWVzL05hdmlnYXRpb25UaW1pbmdQcm94eS50cz8xN2Q5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElQcm94eSB9IGZyb20gJy4uL0lQcm94eSc7XG5pbXBvcnQgdHJhY2luZyBmcm9tICcuLi9UcmFjaW5nJztcbmltcG9ydCB7IGdldE1lc3NhZ2VJbmdyZXNzVXJsIH0gZnJvbSAnLi4vLi4vY29tbW9uL1JlcXVlc3RVdGlsaXRpZXMnO1xuaW1wb3J0IHBlcmZvcm1hbmNlIGZyb20gJy4uLy4uL2NvbW1vbi9QZXJmb3JtYW5jZVV0aWxpdGllcyc7XG5pbXBvcnQgeyBhZGRFdmVudCB9IGZyb20gJy4uLy4uL2NvbW1vbi9SZXF1ZXN0VXRpbGl0aWVzJztcblxuZXhwb3J0IGludGVyZmFjZSBJTmF2aWdhdGlvblRpbWluZ0NvbGxlY3Rpb25FdmVudCB7XG4gICAgY29ubmVjdEVuZDogbnVtYmVyO1xuICAgIGNvbm5lY3RTdGFydDogbnVtYmVyO1xuICAgIGRvbUNvbXBsZXRlOiBudW1iZXI7XG4gICAgZG9tQ29udGVudExvYWRlZEV2ZW50RW5kOiBudW1iZXI7XG4gICAgZG9tQ29udGVudExvYWRlZEV2ZW50U3RhcnQ6IG51bWJlcjtcbiAgICBkb21JbnRlcmFjdGl2ZTogbnVtYmVyO1xuICAgIGRvbUxvYWRpbmc6IG51bWJlcjtcbiAgICBkb21haW5Mb29rdXBFbmQ6IG51bWJlcjtcbiAgICBkb21haW5Mb29rdXBTdGFydDogbnVtYmVyO1xuICAgIGZldGNoU3RhcnQ6IG51bWJlcjtcbiAgICBmaXJzdFBhaW50OiBudW1iZXI7XG4gICAgZmlyc3RQYWludER1cmF0aW9uPzogbnVtYmVyO1xuICAgIGxvYWRFdmVudEVuZDogbnVtYmVyO1xuICAgIGxvYWRFdmVudFN0YXJ0OiBudW1iZXI7XG4gICAgbmF2aWdhdGlvblN0YXJ0OiBudW1iZXI7XG4gICAgcmVkaXJlY3RFbmQ6IG51bWJlcjtcbiAgICByZWRpcmVjdFN0YXJ0OiBudW1iZXI7XG4gICAgcmVxdWVzdFN0YXJ0OiBudW1iZXI7XG4gICAgcmVzcG9uc2VFbmQ6IG51bWJlcjtcbiAgICByZXNwb25zZVN0YXJ0OiBudW1iZXI7XG4gICAgc2VjdXJlQ29ubmVjdGlvblN0YXJ0OiBudW1iZXI7XG4gICAgdW5sb2FkRXZlbnRFbmQ6IG51bWJlcjtcbiAgICB1bmxvYWRFdmVudFN0YXJ0OiBudW1iZXI7XG59XG5leHBvcnQgY29uc3QgRVZFTlRfTkFWSUdBVElPTl9USU1JTkdfQ09MTEVDVEVEID0gJ25vdGlmeXxwZXJmb3JtYW5jZS5uYXZpZ2F0aW9uLXRpbWluZyc7XG5cbmV4cG9ydCBjbGFzcyBOYXZpZ2F0aW9uVGltaW5nUHJveHkgaW1wbGVtZW50cyBJUHJveHkge1xuICAgIHB1YmxpYyBpc1N1cHBvcnRlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICEhKHBlcmZvcm1hbmNlICYmIHBlcmZvcm1hbmNlLnRpbWluZyk7XG4gICAgfVxuXG4gICAgcHVibGljIGluaXQoKSB7XG4gICAgICAgIC8vIHNldHVwL3JlZ2l0ZXIgc3RyYXRlZ3kgdG8gcnVuIGxhdGVyXG4gICAgICAgIGFkZEV2ZW50KHdpbmRvdywgJ2xvYWQnLCAoKSA9PiB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NUaW1pbmdzKHBlcmZvcm1hbmNlLnRpbWluZyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBwcm9jZXNzRW50cnkoZW50cnk6IFBlcmZvcm1hbmNlVGltaW5nKTogSU5hdmlnYXRpb25UaW1pbmdDb2xsZWN0aW9uRXZlbnQge1xuICAgICAgICAvLyBUaGlzIHNoZWRzIGFueSBleHRyYSBwcm9wZXJ0aWVzIHRoYXQgbWF5IGJlIGludHJvZHVjZWQgdG8gbmF2aWdhdGlvblxuICAgICAgICAvLyB0aW1pbmcgb3IgYXJlIGJyb3dzZXIgc3BlY2lmaWMsIGFuZCBlbnN1cmVzIHRoZSBkYXRhIG1hdGNoZXMgb3VyXG4gICAgICAgIC8vIGludGVyZmFjZSBmb3IgaXQuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb25uZWN0RW5kOiBlbnRyeS5jb25uZWN0RW5kLFxuICAgICAgICAgICAgY29ubmVjdFN0YXJ0OiBlbnRyeS5jb25uZWN0U3RhcnQsXG4gICAgICAgICAgICBkb21Db21wbGV0ZTogZW50cnkuZG9tQ29tcGxldGUsXG4gICAgICAgICAgICBkb21Db250ZW50TG9hZGVkRXZlbnRFbmQ6IGVudHJ5LmRvbUNvbnRlbnRMb2FkZWRFdmVudEVuZCxcbiAgICAgICAgICAgIGRvbUNvbnRlbnRMb2FkZWRFdmVudFN0YXJ0OiBlbnRyeS5kb21Db250ZW50TG9hZGVkRXZlbnRTdGFydCxcbiAgICAgICAgICAgIGRvbUludGVyYWN0aXZlOiBlbnRyeS5kb21JbnRlcmFjdGl2ZSxcbiAgICAgICAgICAgIGRvbUxvYWRpbmc6IGVudHJ5LmRvbUxvYWRpbmcsXG4gICAgICAgICAgICBkb21haW5Mb29rdXBFbmQ6IGVudHJ5LmRvbWFpbkxvb2t1cEVuZCxcbiAgICAgICAgICAgIGRvbWFpbkxvb2t1cFN0YXJ0OiBlbnRyeS5kb21haW5Mb29rdXBTdGFydCxcbiAgICAgICAgICAgIGZldGNoU3RhcnQ6IGVudHJ5LmZldGNoU3RhcnQsXG4gICAgICAgICAgICBmaXJzdFBhaW50OiAoPGFueT5lbnRyeSkuZmlyc3RQYWludCwgIC8vdHNsaW50OmRpc2FibGUtbGluZTpuby1hbnlcbiAgICAgICAgICAgIGZpcnN0UGFpbnREdXJhdGlvbjogMCxcbiAgICAgICAgICAgIGxvYWRFdmVudEVuZDogZW50cnkubG9hZEV2ZW50RW5kLFxuICAgICAgICAgICAgbG9hZEV2ZW50U3RhcnQ6IGVudHJ5LmxvYWRFdmVudFN0YXJ0LFxuICAgICAgICAgICAgbmF2aWdhdGlvblN0YXJ0OiBlbnRyeS5uYXZpZ2F0aW9uU3RhcnQsXG4gICAgICAgICAgICByZWRpcmVjdEVuZDogZW50cnkucmVkaXJlY3RFbmQsXG4gICAgICAgICAgICByZWRpcmVjdFN0YXJ0OiBlbnRyeS5yZWRpcmVjdFN0YXJ0LFxuICAgICAgICAgICAgcmVxdWVzdFN0YXJ0OiBlbnRyeS5yZXF1ZXN0U3RhcnQsXG4gICAgICAgICAgICByZXNwb25zZUVuZDogZW50cnkucmVzcG9uc2VFbmQsXG4gICAgICAgICAgICByZXNwb25zZVN0YXJ0OiBlbnRyeS5yZXNwb25zZVN0YXJ0LFxuICAgICAgICAgICAgc2VjdXJlQ29ubmVjdGlvblN0YXJ0OiBlbnRyeS5zZWN1cmVDb25uZWN0aW9uU3RhcnQsXG4gICAgICAgICAgICB1bmxvYWRFdmVudEVuZDogZW50cnkudW5sb2FkRXZlbnRFbmQsXG4gICAgICAgICAgICB1bmxvYWRFdmVudFN0YXJ0OiBlbnRyeS51bmxvYWRFdmVudFN0YXJ0XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBwcm9jZXNzVGltaW5ncyh0aW1pbmc6IFBlcmZvcm1hbmNlVGltaW5nKSB7XG4gICAgICAgIGNvbnN0IGV2ZW50RGF0YSA9IHRoaXMucHJvY2Vzc0VudHJ5KHRpbWluZyk7XG5cbiAgICAgICAgLy8gdGltZSB0byBmaXJzdCBwYWludFxuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYW55XG4gICAgICAgIGlmICgoPGFueT5ldmVudERhdGEpLmZpcnN0UGFpbnQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gQWxsIHRpbWVzIGFyZSByZWxhdGl2ZSB0aW1lcyB0byB0aGUgc3RhcnQgdGltZSB3aXRoaW4gdGhlXG4gICAgICAgICAgICAvLyBzYW1lIG9iamVjdHNcbiAgICAgICAgICAgIGxldCBmaXJzdFBhaW50ID0gMDtcbiAgICAgICAgICAgIGxldCBmaXJzdFBhaW50RHVyYXRpb24gPSAwO1xuXG4gICAgICAgICAgICAvL3RzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcbiAgICAgICAgICAgIGlmICgoPGFueT53aW5kb3cpLmNocm9tZSAmJiAoPGFueT53aW5kb3cpLmNocm9tZS5sb2FkVGltZXMpIHtcbiAgICAgICAgICAgICAgICAvL3RzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcbiAgICAgICAgICAgICAgICBjb25zdCBsb2FkVGltZXMgPSAoPGFueT53aW5kb3cpLmNocm9tZS5sb2FkVGltZXMoKTtcbiAgICAgICAgICAgICAgICBmaXJzdFBhaW50ID0gbG9hZFRpbWVzLmZpcnN0UGFpbnRUaW1lICogMTAwMDtcbiAgICAgICAgICAgICAgICBmaXJzdFBhaW50RHVyYXRpb24gPSBmaXJzdFBhaW50IC0gbG9hZFRpbWVzLnN0YXJ0TG9hZFRpbWUgKiAxMDAwO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdGltaW5nLm1zRmlyc3RQYWludCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICBmaXJzdFBhaW50ID0gdGltaW5nLm1zRmlyc3RQYWludDtcbiAgICAgICAgICAgICAgICBmaXJzdFBhaW50RHVyYXRpb24gPSBmaXJzdFBhaW50IC0gdGltaW5nLm5hdmlnYXRpb25TdGFydDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGV2ZW50RGF0YS5maXJzdFBhaW50ID0gZmlyc3RQYWludDtcbiAgICAgICAgICAgIGV2ZW50RGF0YS5maXJzdFBhaW50RHVyYXRpb24gPSBmaXJzdFBhaW50RHVyYXRpb247XG4gICAgICAgIH1cblxuICAgICAgICB0cmFjaW5nLnB1Ymxpc2goRVZFTlRfTkFWSUdBVElPTl9USU1JTkdfQ09MTEVDVEVELCBldmVudERhdGEpO1xuICAgIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy90cmFjaW5nL3Byb3hpZXMvTmF2aWdhdGlvblRpbWluZ1Byb3h5LnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFBQTtBQUNBOzs7OztBQTBCQTtBQUNBO0FBRUE7Ozs7Ozs7O0FBQ0E7QUFDQTs7Ozs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBdkJBO0FBeUJBOzs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7Ozs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 25 */
/*!********************************************!*\
  !*** ./src/inspectors/ConsoleInspector.ts ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ConsoleInspector = exports.LogMessageTypes = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ConsoleProxy = __webpack_require__(/*! ../tracing/proxies/ConsoleProxy */ 26);\n\nvar _Tracing = __webpack_require__(/*! ../tracing/Tracing */ 11);\n\nvar _Tracing2 = _interopRequireDefault(_Tracing);\n\nvar _GeneralUtilities = __webpack_require__(/*! ../common/GeneralUtilities */ 4);\n\nvar _MessageMixins = __webpack_require__(/*! ../common/MessageMixins */ 6);\n\nvar _CallStackUtilities = __webpack_require__(/*! ../common/CallStackUtilities */ 27);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LogMessageTypes = exports.LogMessageTypes = undefined;\n(function (LogMessageTypes) {\n    LogMessageTypes[LogMessageTypes[\"json\"] = 0] = \"json\";\n    LogMessageTypes[LogMessageTypes[\"xml\"] = 1] = \"xml\";\n    LogMessageTypes[LogMessageTypes[\"table\"] = 2] = \"table\";\n    LogMessageTypes[LogMessageTypes[\"assert\"] = 3] = \"assert\";\n    LogMessageTypes[LogMessageTypes[\"count\"] = 4] = \"count\";\n    LogMessageTypes[LogMessageTypes[\"timespan_begin\"] = 5] = \"timespan_begin\";\n    LogMessageTypes[LogMessageTypes[\"timespan_end\"] = 6] = \"timespan_end\";\n    LogMessageTypes[LogMessageTypes[\"group_begin\"] = 7] = \"group_begin\";\n    LogMessageTypes[LogMessageTypes[\"group_end\"] = 8] = \"group_end\";\n})(LogMessageTypes || (exports.LogMessageTypes = LogMessageTypes = {}));\n\nvar ConsoleInspector = exports.ConsoleInspector = function () {\n    function ConsoleInspector() {\n        var _this = this;\n\n        _classCallCheck(this, ConsoleInspector);\n\n        this.countMap = {};\n        this.stack = {\n            group: [],\n            profile: []\n        };\n        this.map = {\n            time: {}\n        };\n        this.mapNull = {\n            time: undefined\n        };\n        this.methods = {\n            assert: {\n                level: 'Error',\n                processor: function processor(message, data) {\n                    return _this.assert(message, data);\n                }\n            },\n            count: {\n                level: 'Debug',\n                processor: function processor(message, data) {\n                    return _this.count(message, data);\n                },\n                tokenTypeByPass: true\n            },\n            debug: {\n                level: 'Debug',\n                nullByPass: true\n            },\n            dir: {\n                level: 'Log',\n                nullByPass: true,\n                processor: function processor(message, data) {\n                    return _this.dir(message, data, LogMessageTypes.json);\n                },\n                tokenTypeByPass: true\n            },\n            dirxml: {\n                level: 'Log',\n                nullByPass: true,\n                processor: function processor(message, data) {\n                    return _this.dir(message, data, LogMessageTypes.xml);\n                },\n                tokenTypeByPass: true\n            },\n            error: {\n                level: 'Error',\n                nullByPass: true\n            },\n            group: {\n                level: undefined,\n                processor: function processor(message, data) {\n                    return _this.groupStart(message, data, false);\n                }\n            },\n            groupCollapsed: {\n                level: undefined,\n                processor: function processor(message, data) {\n                    return _this.groupStart(message, data, true);\n                }\n            },\n            groupEnd: {\n                level: undefined,\n                processor: function processor(message, data) {\n                    return _this.groupEnd(message, data);\n                }\n            },\n            info: {\n                level: 'Info',\n                nullByPass: true\n            },\n            log: {\n                level: 'Log',\n                nullByPass: true\n            },\n            profile: {\n                level: 'Debug',\n                processor: function processor(message, data) {\n                    return _this.profileStart(message, data);\n                },\n                tokenTypeByPass: true\n            },\n            profileEnd: {\n                level: 'Debug',\n                processor: function processor(message, data) {\n                    return _this.profileEnd(message, data);\n                },\n                tokenTypeByPass: true\n            },\n            table: {\n                level: 'Log',\n                nullByPass: true,\n                processor: function processor(message, data) {\n                    return _this.applyType(message, data, LogMessageTypes.table);\n                },\n                tokenTypeByPass: true\n            },\n            time: {\n                level: 'Debug',\n                processor: function processor(message, data) {\n                    return _this.mapStart('time', message, data, LogMessageTypes.timespan_begin);\n                },\n                tokenTypeByPass: true\n            },\n            timeEnd: {\n                level: 'Debug',\n                processor: function processor(message, data) {\n                    return _this.mapEnd('time', message, data, LogMessageTypes.timespan_end);\n                },\n                tokenTypeByPass: true\n            },\n            timeStamp: {\n                level: 'Debug',\n                processor: function processor(message, data) {\n                    return _this.timeStamp(message, data);\n                },\n                tokenTypeByPass: true\n            },\n            trace: {\n                level: 'Debug',\n                processor: function processor(message, data) {\n                    return _this.trace(message, data);\n                }\n            },\n            warn: {\n                level: 'Warning',\n                nullByPass: true\n            }\n        };\n    }\n\n    _createClass(ConsoleInspector, [{\n        key: 'init',\n        value: function init(messagePublisher) {\n            var _this2 = this;\n\n            _Tracing2['default'].on(_ConsoleProxy.NOTIFY_CONSOLE_EVENT_OCCURED, function (event) {\n                var data = event.data;\n                var payload = {\n                    method: data.method,\n                    arguments: data.arguments,\n                    offset: event.offset\n                };\n                _this2.publishMessage(messagePublisher, payload);\n            });\n        }\n    }, {\n        key: 'publishMessage',\n        value: function publishMessage(messagePublisher, data) {\n            var info = this.methods[data.method];\n            // in the case where we have no args or a nullByPass is in effect then we shouldn't log messages\n            if (!data.arguments || data.arguments.constructor !== Array || info.nullByPass && data.arguments.length === 0) {\n                return;\n            }\n            // build base message\n            var payload = {\n                message: data.arguments,\n                library: 'Browser Console',\n                level: info.level\n            };\n            var message = messagePublisher.createMessage('log-write', payload);\n            (0, _MessageMixins.addOffset)(data.offset, message);\n            // run through any custom processors\n            var suppressMessage = false;\n            if (info.processor) {\n                suppressMessage = info.processor(message, data) || false;\n            }\n            // normalize token format\n            if (!info.tokenTypeByPass) {\n                this.deriveTokenType(message);\n            }\n            if (!suppressMessage) {\n                (0, _CallStackUtilities.getStackTrace)(function (frames) {\n                    message.payload.frames = frames;\n                    message.types.push('call-stack');\n                    messagePublisher.publishMessage(message);\n                });\n            }\n        }\n        // api specific targets\n\n    }, {\n        key: 'count',\n        value: function count(message, data) {\n            // chrome treats no args the same as ''\n            var label = data.arguments.length > 0 ? String(data.arguments[0]) : '';\n            // for record the label\n            message.payload.message = label;\n            // track ongoing progress\n            var currentCount = (this.countMap[label] || 0) + 1;\n            this.countMap[label] = currentCount;\n            // record the applyType\n            this.applyType(message, data, LogMessageTypes.count);\n            // record the addition count data\n            message.payload.count = currentCount;\n        }\n    }, {\n        key: 'assert',\n        value: function assert(message, data) {\n            var assertion = data.arguments.length > 0 ? data.arguments[0] : false;\n            // if we have no args|null|undefined|0 we will treat it as a fail\n            if (assertion) {\n                return true;\n            } else {\n                message.payload.message = message.payload.message.slice(1);\n            }\n        }\n    }, {\n        key: 'dir',\n        value: function dir(message, data, type) {\n            var newArgs = data.arguments.length > 0 ? [data.arguments[0]] : data.arguments; // tslint:disable-line:no-any\n            var processAsDir = false;\n            var value = newArgs[0];\n            if (type === LogMessageTypes.xml && value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.getElementsByTagName && 'outerHTML' in value) {\n                var nodeCount = value.getElementsByTagName('*').length;\n                // Safety checks to deal with large data payloads\n                if (nodeCount > 100) {\n                    newArgs = 'Node with more than `100` decendents aren\\'t supported.';\n                } else {\n                    value = value.outerHTML;\n                    if (value.length > 2500) {\n                        newArgs = 'Node with more than `2500` characters aren\\'t supported.';\n                    } else {\n                        newArgs[0] = value;\n                    }\n                }\n                processAsDir = true;\n            } else if (type === LogMessageTypes.json) {\n                processAsDir = true;\n            }\n            // this is setup this way so that in non valid `LogMessageTypes.xml` cases, we essentually\n            // treat it as plain console.log\n            if (processAsDir) {\n                // we only care about the first arg in this case\n                message.payload.message = newArgs;\n                this.applyType(message, data, type);\n            } else {\n                this.deriveTokenType(message);\n            }\n        }\n    }, {\n        key: 'timeStamp',\n        value: function timeStamp(message, data) {\n            this.getAndApplyLabel(message, data);\n        }\n    }, {\n        key: 'groupStart',\n        value: function groupStart(message, data, isCollapsed) {\n            message.payload.isCollapsed = isCollapsed;\n            this.stackStart('group', message, data, LogMessageTypes.group_begin);\n        }\n    }, {\n        key: 'groupEnd',\n        value: function groupEnd(message, data) {\n            return this.stackEnd('group', message, data, LogMessageTypes.group_end);\n        }\n    }, {\n        key: 'profileStart',\n        value: function profileStart(message, data) {\n            this.getAndApplyLabel(message, data);\n            this.stackStart('profile', message, data, LogMessageTypes.timespan_begin);\n        }\n    }, {\n        key: 'profileEnd',\n        value: function profileEnd(message, data) {\n            this.getAndApplyLabel(message, data);\n            var result = this.stackEnd('profile', message, data, LogMessageTypes.timespan_end);\n            return result;\n        }\n    }, {\n        key: 'trace',\n        value: function trace(message, data) {\n            // for trace methods include 'log-display-callstack' message type so callstack will be displayed\n            message.types.push('log-display-callstack');\n            // make a copy of the message since we're going to modify it.\n            message.payload.message = Array.prototype.slice.call(message.payload.message, 0);\n            if (message.payload.message[0] === undefined) {\n                message.payload.message[0] = 'Trace:';\n            } else {\n                message.payload.message[0] = 'Trace: ' + message.payload.message[0];\n            }\n        }\n        // common/shared helpers\n\n    }, {\n        key: 'applyType',\n        value: function applyType(message, data, mixin) {\n            var type = LogMessageTypes[mixin].replace('_', '-');\n            message.types.push('log-' + type);\n        }\n    }, {\n        key: 'getAndApplyLabel',\n        value: function getAndApplyLabel(message, data) {\n            var label = data.arguments.length > 0 ? String(data.arguments[0]) : undefined;\n            // for mapEnds we dump the args and just use the label\n            message.payload.message = label;\n            return label;\n        }\n    }, {\n        key: 'stackStart',\n        value: function stackStart(type, message, data, mixin) {\n            var group = this.coreStart(message, data, mixin);\n            this.stack[type].push(group);\n        }\n    }, {\n        key: 'stackEnd',\n        value: function stackEnd(type, message, data, mixin) {\n            var group = this.stack[type].pop();\n            if (group) {\n                this.coreEnd(group, message, data, mixin);\n            } else {\n                return true;\n            }\n        }\n    }, {\n        key: 'mapStart',\n        value: function mapStart(type, message, data, mixin) {\n            var label = this.getAndApplyLabel(message, data);\n            var group = this.coreStart(message, data, mixin);\n            if (label !== undefined) {\n                this.map[type][label] = group;\n            } else {\n                this.mapNull[type] = group;\n            }\n        }\n    }, {\n        key: 'mapEnd',\n        value: function mapEnd(type, message, data, mixin) {\n            var label = this.getAndApplyLabel(message, data);\n            var group = label !== undefined ? this.map[type][label] : this.mapNull[type];\n            if (group) {\n                if (label !== undefined) {\n                    delete this.map[type][label];\n                } else {\n                    this.mapNull[type] = undefined;\n                }\n            } else {\n                // if no match is found we should match to page load\n                group = { correlationId: (0, _GeneralUtilities.getGuid)(), time: 0 };\n            }\n            this.coreEnd(group, message, data, mixin);\n        }\n    }, {\n        key: 'coreStart',\n        value: function coreStart(message, data, mixin) {\n            var correlationId = (0, _GeneralUtilities.getGuid)();\n            var time = data.offset;\n            (0, _MessageMixins.addCorrelationBegin)(correlationId, message);\n            // add action begin specific data\n            this.applyType(message, data, mixin);\n            return {\n                correlationId: correlationId,\n                time: time\n            };\n        }\n    }, {\n        key: 'coreEnd',\n        value: function coreEnd(group, message, data, mixin) {\n            var time = data.offset;\n            // add action begin specific data\n            this.applyType(message, data, mixin);\n            (0, _MessageMixins.addCorrelationEnd)(group.correlationId, time - group.time, message);\n        }\n    }, {\n        key: 'deriveTokenType',\n        value: function deriveTokenType(message) {\n            if (message.payload.message !== undefined && message.payload.message !== null // tslint:disable-line:no-null-keyword\n            && message.payload.message !== 'string') {\n                message.types.push('log-token-printf');\n                message.payload.tokenSupport = 'browser';\n            }\n        }\n    }]);\n\n    return ConsoleInspector;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5zcGVjdG9ycy9Db25zb2xlSW5zcGVjdG9yLnRzP2U2NmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTk9USUZZX0NPTlNPTEVfRVZFTlRfT0NDVVJFRCwgSUNvbnNvbGVFdmVudCB9IGZyb20gJy4uL3RyYWNpbmcvcHJveGllcy9Db25zb2xlUHJveHknO1xuXG5pbXBvcnQgeyBJSW5zcGVjdG9yIH0gZnJvbSAnLi9JSW5zcGVjdG9yJztcbmltcG9ydCB7IElNZXNzYWdlUHVibGlzaGVyLCBJTWVzc2FnZSB9IGZyb20gJy4uL01lc3NhZ2VQdWJsaXNoZXInO1xuaW1wb3J0IHsgSVByb3h5RXZlbnQgfSBmcm9tICcuLi90cmFjaW5nL0lQcm94eUV2ZW50JztcbmltcG9ydCB0cmFjaW5nIGZyb20gJy4uL3RyYWNpbmcvVHJhY2luZyc7XG5pbXBvcnQgeyBnZXRHdWlkIH0gZnJvbSAnLi4vY29tbW9uL0dlbmVyYWxVdGlsaXRpZXMnO1xuaW1wb3J0IHsgYWRkQ29ycmVsYXRpb25CZWdpbiwgYWRkQ29ycmVsYXRpb25FbmQsIGFkZE9mZnNldCB9IGZyb20gJy4uL2NvbW1vbi9NZXNzYWdlTWl4aW5zJztcbmltcG9ydCB7IGdldFN0YWNrVHJhY2UgfSBmcm9tICcuLi9jb21tb24vQ2FsbFN0YWNrVXRpbGl0aWVzJztcblxuZXhwb3J0IGVudW0gTG9nTWVzc2FnZVR5cGVzIHtcbiAgICBqc29uLFxuICAgIHhtbCxcbiAgICB0YWJsZSxcbiAgICBhc3NlcnQsXG4gICAgY291bnQsXG4gICAgdGltZXNwYW5fYmVnaW4sXG4gICAgdGltZXNwYW5fZW5kLFxuICAgIGdyb3VwX2JlZ2luLFxuICAgIGdyb3VwX2VuZFxufVxuXG5pbnRlcmZhY2UgSUNvbnNvbGVEYXRhIHtcbiAgICBtZXRob2Q6IHN0cmluZztcbiAgICBhcmd1bWVudHM6IGFueVtdOyAvLyB0c2xpbnQ6ZGlzYWJsZS1saW5lOm5vLWFueVxuICAgIG9mZnNldDogbnVtYmVyO1xufVxuXG5pbnRlcmZhY2UgSW5zcGVjdGlvbk1ldGhvZHMge1xuICAgIFtrZXk6IHN0cmluZ106IHtcbiAgICAgICAgbGV2ZWw6IHN0cmluZztcbiAgICAgICAgbnVsbEJ5UGFzcz86IGJvb2xlYW4sXG4gICAgICAgIHRva2VuVHlwZUJ5UGFzcz86IGJvb2xlYW4sXG4gICAgICAgIHByb2Nlc3Nvcj86IChtZXNzYWdlOiBJTWVzc2FnZSwgZGF0YTogSUNvbnNvbGVEYXRhKSA9PiBib29sZWFuIHwgdm9pZDtcbiAgICB9O1xufVxuXG5leHBvcnQgY2xhc3MgQ29uc29sZUluc3BlY3RvciBpbXBsZW1lbnRzIElJbnNwZWN0b3Ige1xuICAgIHByaXZhdGUgY291bnRNYXAgPSB7fTtcblxuICAgIHByaXZhdGUgc3RhY2sgPSB7XG4gICAgICAgIGdyb3VwOiBbXSxcbiAgICAgICAgcHJvZmlsZTogW11cbiAgICB9O1xuXG4gICAgcHJpdmF0ZSBtYXAgPSB7XG4gICAgICAgIHRpbWU6IHt9XG4gICAgfTtcblxuICAgIHByaXZhdGUgbWFwTnVsbCA9IHtcbiAgICAgICAgdGltZTogdW5kZWZpbmVkXG4gICAgfTtcblxuICAgIHB1YmxpYyBtZXRob2RzOiBJbnNwZWN0aW9uTWV0aG9kcyA9IHtcbiAgICAgICAgYXNzZXJ0OiB7XG4gICAgICAgICAgICBsZXZlbDogJ0Vycm9yJyxcbiAgICAgICAgICAgIHByb2Nlc3NvcjogKG1lc3NhZ2UsIGRhdGEpID0+IHRoaXMuYXNzZXJ0KG1lc3NhZ2UsIGRhdGEpXG4gICAgICAgIH0sXG4gICAgICAgIGNvdW50OiB7XG4gICAgICAgICAgICBsZXZlbDogJ0RlYnVnJyxcbiAgICAgICAgICAgIHByb2Nlc3NvcjogKG1lc3NhZ2UsIGRhdGEpID0+IHRoaXMuY291bnQobWVzc2FnZSwgZGF0YSksXG4gICAgICAgICAgICB0b2tlblR5cGVCeVBhc3M6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgZGVidWc6IHtcbiAgICAgICAgICAgIGxldmVsOiAnRGVidWcnLFxuICAgICAgICAgICAgbnVsbEJ5UGFzczogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBkaXI6IHtcbiAgICAgICAgICAgIGxldmVsOiAnTG9nJyxcbiAgICAgICAgICAgIG51bGxCeVBhc3M6IHRydWUsXG4gICAgICAgICAgICBwcm9jZXNzb3I6IChtZXNzYWdlLCBkYXRhKSA9PiB0aGlzLmRpcihtZXNzYWdlLCBkYXRhLCBMb2dNZXNzYWdlVHlwZXMuanNvbiksXG4gICAgICAgICAgICB0b2tlblR5cGVCeVBhc3M6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgZGlyeG1sOiB7XG4gICAgICAgICAgICBsZXZlbDogJ0xvZycsXG4gICAgICAgICAgICBudWxsQnlQYXNzOiB0cnVlLFxuICAgICAgICAgICAgcHJvY2Vzc29yOiAobWVzc2FnZSwgZGF0YSkgPT4gdGhpcy5kaXIobWVzc2FnZSwgZGF0YSwgTG9nTWVzc2FnZVR5cGVzLnhtbCksXG4gICAgICAgICAgICB0b2tlblR5cGVCeVBhc3M6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICAgIGxldmVsOiAnRXJyb3InLFxuICAgICAgICAgICAgbnVsbEJ5UGFzczogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBncm91cDoge1xuICAgICAgICAgICAgbGV2ZWw6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHByb2Nlc3NvcjogKG1lc3NhZ2UsIGRhdGEpID0+IHRoaXMuZ3JvdXBTdGFydChtZXNzYWdlLCBkYXRhLCBmYWxzZSlcbiAgICAgICAgfSxcbiAgICAgICAgZ3JvdXBDb2xsYXBzZWQ6IHtcbiAgICAgICAgICAgIGxldmVsOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBwcm9jZXNzb3I6IChtZXNzYWdlLCBkYXRhKSA9PiB0aGlzLmdyb3VwU3RhcnQobWVzc2FnZSwgZGF0YSwgdHJ1ZSlcbiAgICAgICAgfSxcbiAgICAgICAgZ3JvdXBFbmQ6IHtcbiAgICAgICAgICAgIGxldmVsOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBwcm9jZXNzb3I6IChtZXNzYWdlLCBkYXRhKSA9PiB0aGlzLmdyb3VwRW5kKG1lc3NhZ2UsIGRhdGEpXG4gICAgICAgIH0sXG4gICAgICAgIGluZm86IHtcbiAgICAgICAgICAgIGxldmVsOiAnSW5mbycsXG4gICAgICAgICAgICBudWxsQnlQYXNzOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIGxvZzoge1xuICAgICAgICAgICAgbGV2ZWw6ICdMb2cnLFxuICAgICAgICAgICAgbnVsbEJ5UGFzczogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBwcm9maWxlOiB7XG4gICAgICAgICAgICBsZXZlbDogJ0RlYnVnJyxcbiAgICAgICAgICAgIHByb2Nlc3NvcjogKG1lc3NhZ2UsIGRhdGEpID0+IHRoaXMucHJvZmlsZVN0YXJ0KG1lc3NhZ2UsIGRhdGEpLFxuICAgICAgICAgICAgdG9rZW5UeXBlQnlQYXNzOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHByb2ZpbGVFbmQ6IHtcbiAgICAgICAgICAgIGxldmVsOiAnRGVidWcnLFxuICAgICAgICAgICAgcHJvY2Vzc29yOiAobWVzc2FnZSwgZGF0YSkgPT4gdGhpcy5wcm9maWxlRW5kKG1lc3NhZ2UsIGRhdGEpLFxuICAgICAgICAgICAgdG9rZW5UeXBlQnlQYXNzOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHRhYmxlOiB7XG4gICAgICAgICAgICBsZXZlbDogJ0xvZycsXG4gICAgICAgICAgICBudWxsQnlQYXNzOiB0cnVlLFxuICAgICAgICAgICAgcHJvY2Vzc29yOiAobWVzc2FnZSwgZGF0YSkgPT4gdGhpcy5hcHBseVR5cGUobWVzc2FnZSwgZGF0YSwgTG9nTWVzc2FnZVR5cGVzLnRhYmxlKSxcbiAgICAgICAgICAgIHRva2VuVHlwZUJ5UGFzczogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB0aW1lOiB7XG4gICAgICAgICAgICBsZXZlbDogJ0RlYnVnJyxcbiAgICAgICAgICAgIHByb2Nlc3NvcjogKG1lc3NhZ2UsIGRhdGEpID0+IHRoaXMubWFwU3RhcnQoJ3RpbWUnLCBtZXNzYWdlLCBkYXRhLCBMb2dNZXNzYWdlVHlwZXMudGltZXNwYW5fYmVnaW4pLFxuICAgICAgICAgICAgdG9rZW5UeXBlQnlQYXNzOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHRpbWVFbmQ6IHtcbiAgICAgICAgICAgIGxldmVsOiAnRGVidWcnLFxuICAgICAgICAgICAgcHJvY2Vzc29yOiAobWVzc2FnZSwgZGF0YSkgPT4gdGhpcy5tYXBFbmQoJ3RpbWUnLCBtZXNzYWdlLCBkYXRhLCBMb2dNZXNzYWdlVHlwZXMudGltZXNwYW5fZW5kKSxcbiAgICAgICAgICAgIHRva2VuVHlwZUJ5UGFzczogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB0aW1lU3RhbXA6IHtcbiAgICAgICAgICAgIGxldmVsOiAnRGVidWcnLFxuICAgICAgICAgICAgcHJvY2Vzc29yOiAobWVzc2FnZSwgZGF0YSkgPT4gdGhpcy50aW1lU3RhbXAobWVzc2FnZSwgZGF0YSksXG4gICAgICAgICAgICB0b2tlblR5cGVCeVBhc3M6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgdHJhY2U6IHtcbiAgICAgICAgICAgIGxldmVsOiAnRGVidWcnLFxuICAgICAgICAgICAgcHJvY2Vzc29yOiAobWVzc2FnZSwgZGF0YSkgPT4gdGhpcy50cmFjZShtZXNzYWdlLCBkYXRhKVxuICAgICAgICB9LFxuICAgICAgICB3YXJuOiB7XG4gICAgICAgICAgICBsZXZlbDogJ1dhcm5pbmcnLFxuICAgICAgICAgICAgbnVsbEJ5UGFzczogdHJ1ZVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIHB1YmxpYyBpbml0KG1lc3NhZ2VQdWJsaXNoZXI6IElNZXNzYWdlUHVibGlzaGVyKSB7XG4gICAgICAgIHRyYWNpbmcub24oTk9USUZZX0NPTlNPTEVfRVZFTlRfT0NDVVJFRCwgKGV2ZW50OiBJUHJveHlFdmVudCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZGF0YTogSUNvbnNvbGVFdmVudCA9IGV2ZW50LmRhdGE7XG5cbiAgICAgICAgICAgIGNvbnN0IHBheWxvYWQ6IElDb25zb2xlRGF0YSA9IHtcbiAgICAgICAgICAgICAgICBtZXRob2Q6IGRhdGEubWV0aG9kLFxuICAgICAgICAgICAgICAgIGFyZ3VtZW50czogZGF0YS5hcmd1bWVudHMsXG4gICAgICAgICAgICAgICAgb2Zmc2V0OiBldmVudC5vZmZzZXRcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMucHVibGlzaE1lc3NhZ2UobWVzc2FnZVB1Ymxpc2hlciwgcGF5bG9hZCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgcHVibGlzaE1lc3NhZ2UobWVzc2FnZVB1Ymxpc2hlcjogSU1lc3NhZ2VQdWJsaXNoZXIsIGRhdGE6IElDb25zb2xlRGF0YSkge1xuICAgICAgICBjb25zdCBpbmZvID0gdGhpcy5tZXRob2RzW2RhdGEubWV0aG9kXTtcblxuICAgICAgICAvLyBpbiB0aGUgY2FzZSB3aGVyZSB3ZSBoYXZlIG5vIGFyZ3Mgb3IgYSBudWxsQnlQYXNzIGlzIGluIGVmZmVjdCB0aGVuIHdlIHNob3VsZG4ndCBsb2cgbWVzc2FnZXNcbiAgICAgICAgaWYgKCFkYXRhLmFyZ3VtZW50cyB8fCBkYXRhLmFyZ3VtZW50cy5jb25zdHJ1Y3RvciAhPT0gQXJyYXkgfHwgKGluZm8ubnVsbEJ5UGFzcyAmJiBkYXRhLmFyZ3VtZW50cy5sZW5ndGggPT09IDApKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBidWlsZCBiYXNlIG1lc3NhZ2VcbiAgICAgICAgY29uc3QgcGF5bG9hZCA9IHtcbiAgICAgICAgICAgIG1lc3NhZ2U6IGRhdGEuYXJndW1lbnRzLFxuICAgICAgICAgICAgbGlicmFyeTogJ0Jyb3dzZXIgQ29uc29sZScsXG4gICAgICAgICAgICBsZXZlbDogaW5mby5sZXZlbFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gbWVzc2FnZVB1Ymxpc2hlci5jcmVhdGVNZXNzYWdlKCdsb2ctd3JpdGUnLCBwYXlsb2FkKTtcbiAgICAgICAgYWRkT2Zmc2V0KGRhdGEub2Zmc2V0LCBtZXNzYWdlKTtcblxuICAgICAgICAvLyBydW4gdGhyb3VnaCBhbnkgY3VzdG9tIHByb2Nlc3NvcnNcbiAgICAgICAgbGV0IHN1cHByZXNzTWVzc2FnZSA9IGZhbHNlO1xuICAgICAgICBpZiAoaW5mby5wcm9jZXNzb3IpIHtcbiAgICAgICAgICAgIHN1cHByZXNzTWVzc2FnZSA9IGluZm8ucHJvY2Vzc29yKG1lc3NhZ2UsIGRhdGEpIHx8IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gbm9ybWFsaXplIHRva2VuIGZvcm1hdFxuICAgICAgICBpZiAoIWluZm8udG9rZW5UeXBlQnlQYXNzKSB7XG4gICAgICAgICAgICB0aGlzLmRlcml2ZVRva2VuVHlwZShtZXNzYWdlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghc3VwcHJlc3NNZXNzYWdlKSB7XG4gICAgICAgICAgICBnZXRTdGFja1RyYWNlKChmcmFtZXMpID0+IHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlLnBheWxvYWQuZnJhbWVzID0gZnJhbWVzO1xuICAgICAgICAgICAgICAgIG1lc3NhZ2UudHlwZXMucHVzaCgnY2FsbC1zdGFjaycpO1xuICAgICAgICAgICAgICAgIG1lc3NhZ2VQdWJsaXNoZXIucHVibGlzaE1lc3NhZ2UobWVzc2FnZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGFwaSBzcGVjaWZpYyB0YXJnZXRzXG5cbiAgICBwcml2YXRlIGNvdW50KG1lc3NhZ2UsIGRhdGE6IElDb25zb2xlRGF0YSkge1xuICAgICAgICAvLyBjaHJvbWUgdHJlYXRzIG5vIGFyZ3MgdGhlIHNhbWUgYXMgJydcbiAgICAgICAgY29uc3QgbGFiZWwgPSBkYXRhLmFyZ3VtZW50cy5sZW5ndGggPiAwID8gU3RyaW5nKGRhdGEuYXJndW1lbnRzWzBdKSA6ICcnO1xuXG4gICAgICAgIC8vIGZvciByZWNvcmQgdGhlIGxhYmVsXG4gICAgICAgIG1lc3NhZ2UucGF5bG9hZC5tZXNzYWdlID0gbGFiZWw7XG5cbiAgICAgICAgLy8gdHJhY2sgb25nb2luZyBwcm9ncmVzc1xuICAgICAgICBsZXQgY3VycmVudENvdW50ID0gKHRoaXMuY291bnRNYXBbbGFiZWxdIHx8IDApICsgMTtcbiAgICAgICAgdGhpcy5jb3VudE1hcFtsYWJlbF0gPSBjdXJyZW50Q291bnQ7XG5cbiAgICAgICAgLy8gcmVjb3JkIHRoZSBhcHBseVR5cGVcbiAgICAgICAgdGhpcy5hcHBseVR5cGUobWVzc2FnZSwgZGF0YSwgTG9nTWVzc2FnZVR5cGVzLmNvdW50KTtcblxuICAgICAgICAvLyByZWNvcmQgdGhlIGFkZGl0aW9uIGNvdW50IGRhdGFcbiAgICAgICAgbWVzc2FnZS5wYXlsb2FkLmNvdW50ID0gY3VycmVudENvdW50O1xuICAgIH1cblxuICAgIHByaXZhdGUgYXNzZXJ0KG1lc3NhZ2UsIGRhdGE6IElDb25zb2xlRGF0YSkge1xuICAgICAgICBjb25zdCBhc3NlcnRpb24gPSBkYXRhLmFyZ3VtZW50cy5sZW5ndGggPiAwID8gZGF0YS5hcmd1bWVudHNbMF0gOiBmYWxzZTtcbiAgICAgICAgLy8gaWYgd2UgaGF2ZSBubyBhcmdzfG51bGx8dW5kZWZpbmVkfDAgd2Ugd2lsbCB0cmVhdCBpdCBhcyBhIGZhaWxcbiAgICAgICAgaWYgKGFzc2VydGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBtZXNzYWdlLnBheWxvYWQubWVzc2FnZSA9IG1lc3NhZ2UucGF5bG9hZC5tZXNzYWdlLnNsaWNlKDEpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBkaXIobWVzc2FnZSwgZGF0YTogSUNvbnNvbGVEYXRhLCB0eXBlOiBMb2dNZXNzYWdlVHlwZXMpIHtcbiAgICAgICAgbGV0IG5ld0FyZ3M6IGFueSA9IGRhdGEuYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBbZGF0YS5hcmd1bWVudHNbMF1dIDogZGF0YS5hcmd1bWVudHM7IC8vIHRzbGludDpkaXNhYmxlLWxpbmU6bm8tYW55XG5cbiAgICAgICAgbGV0IHByb2Nlc3NBc0RpciA9IGZhbHNlO1xuXG4gICAgICAgIGxldCB2YWx1ZSA9IG5ld0FyZ3NbMF07XG4gICAgICAgIGlmICh0eXBlID09PSBMb2dNZXNzYWdlVHlwZXMueG1sICYmIHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUuZ2V0RWxlbWVudHNCeVRhZ05hbWUgJiYgJ291dGVySFRNTCcgaW4gdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IG5vZGVDb3VudCA9IHZhbHVlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCcqJykubGVuZ3RoO1xuICAgICAgICAgICAgLy8gU2FmZXR5IGNoZWNrcyB0byBkZWFsIHdpdGggbGFyZ2UgZGF0YSBwYXlsb2Fkc1xuICAgICAgICAgICAgaWYgKG5vZGVDb3VudCA+IDEwMCkge1xuICAgICAgICAgICAgICAgIG5ld0FyZ3MgPSAnTm9kZSB3aXRoIG1vcmUgdGhhbiBgMTAwYCBkZWNlbmRlbnRzIGFyZW5cXCd0IHN1cHBvcnRlZC4nO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS5vdXRlckhUTUw7XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA+IDI1MDApIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3QXJncyA9ICdOb2RlIHdpdGggbW9yZSB0aGFuIGAyNTAwYCBjaGFyYWN0ZXJzIGFyZW5cXCd0IHN1cHBvcnRlZC4nO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3QXJnc1swXSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcHJvY2Vzc0FzRGlyID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlID09PSBMb2dNZXNzYWdlVHlwZXMuanNvbikge1xuICAgICAgICAgICAgcHJvY2Vzc0FzRGlyID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHRoaXMgaXMgc2V0dXAgdGhpcyB3YXkgc28gdGhhdCBpbiBub24gdmFsaWQgYExvZ01lc3NhZ2VUeXBlcy54bWxgIGNhc2VzLCB3ZSBlc3NlbnR1YWxseVxuICAgICAgICAvLyB0cmVhdCBpdCBhcyBwbGFpbiBjb25zb2xlLmxvZ1xuICAgICAgICBpZiAocHJvY2Vzc0FzRGlyKSB7XG4gICAgICAgICAgICAvLyB3ZSBvbmx5IGNhcmUgYWJvdXQgdGhlIGZpcnN0IGFyZyBpbiB0aGlzIGNhc2VcbiAgICAgICAgICAgIG1lc3NhZ2UucGF5bG9hZC5tZXNzYWdlID0gbmV3QXJncztcblxuICAgICAgICAgICAgdGhpcy5hcHBseVR5cGUobWVzc2FnZSwgZGF0YSwgdHlwZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmRlcml2ZVRva2VuVHlwZShtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgdGltZVN0YW1wKG1lc3NhZ2UsIGRhdGE6IElDb25zb2xlRGF0YSkge1xuICAgICAgICB0aGlzLmdldEFuZEFwcGx5TGFiZWwobWVzc2FnZSwgZGF0YSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBncm91cFN0YXJ0KG1lc3NhZ2UsIGRhdGE6IElDb25zb2xlRGF0YSwgaXNDb2xsYXBzZWQ6IGJvb2xlYW4pIHtcbiAgICAgICAgbWVzc2FnZS5wYXlsb2FkLmlzQ29sbGFwc2VkID0gaXNDb2xsYXBzZWQ7XG5cbiAgICAgICAgdGhpcy5zdGFja1N0YXJ0KCdncm91cCcsIG1lc3NhZ2UsIGRhdGEsIExvZ01lc3NhZ2VUeXBlcy5ncm91cF9iZWdpbik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBncm91cEVuZChtZXNzYWdlLCBkYXRhOiBJQ29uc29sZURhdGEpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhY2tFbmQoJ2dyb3VwJywgbWVzc2FnZSwgZGF0YSwgTG9nTWVzc2FnZVR5cGVzLmdyb3VwX2VuZCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBwcm9maWxlU3RhcnQobWVzc2FnZSwgZGF0YTogSUNvbnNvbGVEYXRhKSB7XG4gICAgICAgIHRoaXMuZ2V0QW5kQXBwbHlMYWJlbChtZXNzYWdlLCBkYXRhKTtcblxuICAgICAgICB0aGlzLnN0YWNrU3RhcnQoJ3Byb2ZpbGUnLCBtZXNzYWdlLCBkYXRhLCBMb2dNZXNzYWdlVHlwZXMudGltZXNwYW5fYmVnaW4pO1xuICAgIH1cblxuICAgIHByaXZhdGUgcHJvZmlsZUVuZChtZXNzYWdlLCBkYXRhOiBJQ29uc29sZURhdGEpIHtcbiAgICAgICAgdGhpcy5nZXRBbmRBcHBseUxhYmVsKG1lc3NhZ2UsIGRhdGEpO1xuXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuc3RhY2tFbmQoJ3Byb2ZpbGUnLCBtZXNzYWdlLCBkYXRhLCBMb2dNZXNzYWdlVHlwZXMudGltZXNwYW5fZW5kKTtcblxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIHByaXZhdGUgdHJhY2UobWVzc2FnZSwgZGF0YTogSUNvbnNvbGVEYXRhKSB7XG4gICAgICAgIC8vIGZvciB0cmFjZSBtZXRob2RzIGluY2x1ZGUgJ2xvZy1kaXNwbGF5LWNhbGxzdGFjaycgbWVzc2FnZSB0eXBlIHNvIGNhbGxzdGFjayB3aWxsIGJlIGRpc3BsYXllZFxuICAgICAgICBtZXNzYWdlLnR5cGVzLnB1c2goJ2xvZy1kaXNwbGF5LWNhbGxzdGFjaycpO1xuXG4gICAgICAgIC8vIG1ha2UgYSBjb3B5IG9mIHRoZSBtZXNzYWdlIHNpbmNlIHdlJ3JlIGdvaW5nIHRvIG1vZGlmeSBpdC5cbiAgICAgICAgbWVzc2FnZS5wYXlsb2FkLm1lc3NhZ2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChtZXNzYWdlLnBheWxvYWQubWVzc2FnZSwgMCk7XG4gICAgICAgIGlmIChtZXNzYWdlLnBheWxvYWQubWVzc2FnZVswXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBtZXNzYWdlLnBheWxvYWQubWVzc2FnZVswXSA9ICdUcmFjZTonO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbWVzc2FnZS5wYXlsb2FkLm1lc3NhZ2VbMF0gPSAnVHJhY2U6ICcgKyBtZXNzYWdlLnBheWxvYWQubWVzc2FnZVswXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGNvbW1vbi9zaGFyZWQgaGVscGVyc1xuXG4gICAgcHJpdmF0ZSBhcHBseVR5cGUobWVzc2FnZSwgZGF0YTogSUNvbnNvbGVEYXRhLCBtaXhpbjogTG9nTWVzc2FnZVR5cGVzKSB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSBMb2dNZXNzYWdlVHlwZXNbbWl4aW5dLnJlcGxhY2UoJ18nLCAnLScpO1xuXG4gICAgICAgIG1lc3NhZ2UudHlwZXMucHVzaCgnbG9nLScgKyB0eXBlKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldEFuZEFwcGx5TGFiZWwobWVzc2FnZSwgZGF0YTogSUNvbnNvbGVEYXRhKSB7XG4gICAgICAgIGNvbnN0IGxhYmVsID0gZGF0YS5hcmd1bWVudHMubGVuZ3RoID4gMCA/IFN0cmluZyhkYXRhLmFyZ3VtZW50c1swXSkgOiB1bmRlZmluZWQ7XG5cbiAgICAgICAgLy8gZm9yIG1hcEVuZHMgd2UgZHVtcCB0aGUgYXJncyBhbmQganVzdCB1c2UgdGhlIGxhYmVsXG4gICAgICAgIG1lc3NhZ2UucGF5bG9hZC5tZXNzYWdlID0gbGFiZWw7XG5cbiAgICAgICAgcmV0dXJuIGxhYmVsO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhY2tTdGFydCh0eXBlLCBtZXNzYWdlLCBkYXRhOiBJQ29uc29sZURhdGEsIG1peGluOiBMb2dNZXNzYWdlVHlwZXMpIHtcbiAgICAgICAgY29uc3QgZ3JvdXAgPSB0aGlzLmNvcmVTdGFydChtZXNzYWdlLCBkYXRhLCBtaXhpbik7XG5cbiAgICAgICAgdGhpcy5zdGFja1t0eXBlXS5wdXNoKGdyb3VwKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YWNrRW5kKHR5cGUsIG1lc3NhZ2UsIGRhdGE6IElDb25zb2xlRGF0YSwgbWl4aW46IExvZ01lc3NhZ2VUeXBlcykge1xuICAgICAgICBjb25zdCBncm91cCA9IHRoaXMuc3RhY2tbdHlwZV0ucG9wKCk7XG4gICAgICAgIGlmIChncm91cCkge1xuICAgICAgICAgICAgdGhpcy5jb3JlRW5kKGdyb3VwLCBtZXNzYWdlLCBkYXRhLCBtaXhpbik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgbWFwU3RhcnQodHlwZSwgbWVzc2FnZSwgZGF0YTogSUNvbnNvbGVEYXRhLCBtaXhpbjogTG9nTWVzc2FnZVR5cGVzKSB7XG4gICAgICAgIGNvbnN0IGxhYmVsID0gdGhpcy5nZXRBbmRBcHBseUxhYmVsKG1lc3NhZ2UsIGRhdGEpO1xuXG4gICAgICAgIGNvbnN0IGdyb3VwID0gdGhpcy5jb3JlU3RhcnQobWVzc2FnZSwgZGF0YSwgbWl4aW4pO1xuXG4gICAgICAgIGlmIChsYWJlbCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLm1hcFt0eXBlXVtsYWJlbF0gPSBncm91cDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubWFwTnVsbFt0eXBlXSA9IGdyb3VwO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBtYXBFbmQodHlwZSwgbWVzc2FnZSwgZGF0YTogSUNvbnNvbGVEYXRhLCBtaXhpbjogTG9nTWVzc2FnZVR5cGVzKSB7XG4gICAgICAgIGNvbnN0IGxhYmVsID0gdGhpcy5nZXRBbmRBcHBseUxhYmVsKG1lc3NhZ2UsIGRhdGEpO1xuXG4gICAgICAgIGxldCBncm91cCA9IGxhYmVsICE9PSB1bmRlZmluZWQgPyB0aGlzLm1hcFt0eXBlXVtsYWJlbF0gOiB0aGlzLm1hcE51bGxbdHlwZV07XG4gICAgICAgIGlmIChncm91cCkge1xuICAgICAgICAgICAgaWYgKGxhYmVsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgdGhpcy5tYXBbdHlwZV1bbGFiZWxdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5tYXBOdWxsW3R5cGVdID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gaWYgbm8gbWF0Y2ggaXMgZm91bmQgd2Ugc2hvdWxkIG1hdGNoIHRvIHBhZ2UgbG9hZFxuICAgICAgICAgICAgZ3JvdXAgPSB7IGNvcnJlbGF0aW9uSWQ6IGdldEd1aWQoKSwgdGltZTogMCB9O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5jb3JlRW5kKGdyb3VwLCBtZXNzYWdlLCBkYXRhLCBtaXhpbik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjb3JlU3RhcnQobWVzc2FnZSwgZGF0YTogSUNvbnNvbGVEYXRhLCBtaXhpbjogTG9nTWVzc2FnZVR5cGVzKSB7XG4gICAgICAgIGNvbnN0IGNvcnJlbGF0aW9uSWQgPSBnZXRHdWlkKCk7XG4gICAgICAgIGNvbnN0IHRpbWUgPSBkYXRhLm9mZnNldDtcblxuICAgICAgICBhZGRDb3JyZWxhdGlvbkJlZ2luKGNvcnJlbGF0aW9uSWQsIG1lc3NhZ2UpO1xuXG4gICAgICAgIC8vIGFkZCBhY3Rpb24gYmVnaW4gc3BlY2lmaWMgZGF0YVxuICAgICAgICB0aGlzLmFwcGx5VHlwZShtZXNzYWdlLCBkYXRhLCBtaXhpbik7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IGNvcnJlbGF0aW9uSWQsXG4gICAgICAgICAgICB0aW1lOiB0aW1lXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjb3JlRW5kKGdyb3VwLCBtZXNzYWdlLCBkYXRhOiBJQ29uc29sZURhdGEsIG1peGluOiBMb2dNZXNzYWdlVHlwZXMpIHtcbiAgICAgICAgY29uc3QgdGltZSA9IGRhdGEub2Zmc2V0O1xuXG4gICAgICAgIC8vIGFkZCBhY3Rpb24gYmVnaW4gc3BlY2lmaWMgZGF0YVxuICAgICAgICB0aGlzLmFwcGx5VHlwZShtZXNzYWdlLCBkYXRhLCBtaXhpbik7XG5cbiAgICAgICAgYWRkQ29ycmVsYXRpb25FbmQoZ3JvdXAuY29ycmVsYXRpb25JZCwgdGltZSAtIGdyb3VwLnRpbWUsIG1lc3NhZ2UpO1xuICAgIH1cblxuICAgIHByaXZhdGUgZGVyaXZlVG9rZW5UeXBlKG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKG1lc3NhZ2UucGF5bG9hZC5tZXNzYWdlICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgICYmIG1lc3NhZ2UucGF5bG9hZC5tZXNzYWdlICE9PSBudWxsIC8vIHRzbGludDpkaXNhYmxlLWxpbmU6bm8tbnVsbC1rZXl3b3JkXG4gICAgICAgICAgICAmJiBtZXNzYWdlLnBheWxvYWQubWVzc2FnZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIG1lc3NhZ2UudHlwZXMucHVzaCgnbG9nLXRva2VuLXByaW50ZicpO1xuICAgICAgICAgICAgbWVzc2FnZS5wYXlsb2FkLnRva2VuU3VwcG9ydCA9ICdicm93c2VyJztcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9pbnNwZWN0b3JzL0NvbnNvbGVJbnNwZWN0b3IudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUlBO0FBQ0E7OztBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTs7Ozs7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFnQkE7Ozs7O0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFGQTtBQUtBO0FBQ0E7QUFEQTtBQUlBO0FBQ0E7QUFEQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7O0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFBQTs7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOztBQUNBO0FBSkE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOztBQUNBO0FBSkE7QUFNQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUFBOztBQUZBO0FBSUE7QUFDQTtBQUNBO0FBQUE7O0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFBQTs7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFBQTs7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBQUE7O0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7O0FBQ0E7QUFKQTtBQU1BO0FBQ0E7QUFDQTtBQUFBOztBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7QUFBQTs7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBQUE7O0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTtBQUFBOztBQUZBO0FBSUE7QUFDQTtBQUNBO0FBRkE7QUFyRkE7QUEyRkE7QUFDQTs7O0FBREE7OztBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFFQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFFQTtBQUNBOzs7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTs7O0FBQ0E7QUFDQTtBQUVBO0FBQ0E7OztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTs7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFGQTtBQUlBOzs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7OztBQUVBO0FBQ0E7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBOzs7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 26 */
/*!*********************************************!*\
  !*** ./src/tracing/proxies/ConsoleProxy.ts ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ConsoleProxy = exports.NOTIFY_CONSOLE_EVENT_OCCURED = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Tracing = __webpack_require__(/*! ../Tracing */ 11);\n\nvar _Tracing2 = _interopRequireDefault(_Tracing);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NOTIFY_CONSOLE_EVENT_OCCURED = exports.NOTIFY_CONSOLE_EVENT_OCCURED = 'notify|event|console';\n// tslint:disable-line:no-any\n\nvar ConsoleProxy = exports.ConsoleProxy = function () {\n    function ConsoleProxy() {\n        _classCallCheck(this, ConsoleProxy);\n\n        // NOTE: this should probably be pulled from the inspector,\n        //       but that raising a dependency question and whether\n        //       one should know about the other. Was thinking about\n        //       adding a neutral party but thats overkill.\n        this.methods = ['assert', 'count', 'debug', 'dir', 'dirxml', 'error', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log', 'profile', 'profileEnd', 'table', 'time', 'timeEnd', 'timeStamp', 'trace', 'warn'];\n    }\n\n    _createClass(ConsoleProxy, [{\n        key: 'isSupported',\n        value: function isSupported() {\n            // IE9 and older throws an exception if we try and write a value to\n            // an undefined preoprty on console methods, so we test here if we\n            // can write to `console.log`, and if not return not supported\n            try {\n                // tslint:disable-next-line:no-any\n                console.log.__glimpse_enabled = true;\n                // tslint:disable-next-line:no-any\n                delete console.log.__glimpse_enabled;\n            } catch (e) {\n                return false;\n            }\n            return !!(window && typeof window.console !== 'undefined');\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.methods.forEach(function (methodKey) {\n                if (methodKey && console[methodKey] && !console[methodKey].__glimpse_original) {\n                    console[methodKey] = function (key) {\n                        var oldFunction = console[key];\n                        var newFunction = function newFunction() {\n                            var args = Array.prototype.slice.call(arguments);\n                            _Tracing2['default'].publish(NOTIFY_CONSOLE_EVENT_OCCURED, { method: key, arguments: args });\n                            return oldFunction.apply(this, arguments);\n                        };\n                        oldFunction.__glimpse_proxy = newFunction;\n                        newFunction.__glimpse_original = oldFunction;\n                        return newFunction;\n                    }(methodKey);\n                }\n            });\n        }\n    }]);\n\n    return ConsoleProxy;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHJhY2luZy9wcm94aWVzL0NvbnNvbGVQcm94eS50cz9iODFjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElQcm94eSB9IGZyb20gJy4uL0lQcm94eSc7XG5pbXBvcnQgdHJhY2luZyBmcm9tICcuLi9UcmFjaW5nJztcblxuZXhwb3J0IGNvbnN0IE5PVElGWV9DT05TT0xFX0VWRU5UX09DQ1VSRUQgPSAnbm90aWZ5fGV2ZW50fGNvbnNvbGUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElDb25zb2xlRXZlbnQge1xuICAgIG1ldGhvZDogc3RyaW5nO1xuICAgIGFyZ3VtZW50czogYW55W107IC8vIHRzbGludDpkaXNhYmxlLWxpbmU6bm8tYW55XG59XG5cbmludGVyZmFjZSBQcm94eUZ1bmN0aW9uIHsgKCk6IGFueTsgX19nbGltcHNlX29yaWdpbmFsOiBhbnk7IH0gLy8gdHNsaW50OmRpc2FibGUtbGluZTpuby1hbnlcblxuZXhwb3J0IGNsYXNzIENvbnNvbGVQcm94eSBpbXBsZW1lbnRzIElQcm94eSB7XG4gICAgLy8gTk9URTogdGhpcyBzaG91bGQgcHJvYmFibHkgYmUgcHVsbGVkIGZyb20gdGhlIGluc3BlY3RvcixcbiAgICAvLyAgICAgICBidXQgdGhhdCByYWlzaW5nIGEgZGVwZW5kZW5jeSBxdWVzdGlvbiBhbmQgd2hldGhlclxuICAgIC8vICAgICAgIG9uZSBzaG91bGQga25vdyBhYm91dCB0aGUgb3RoZXIuIFdhcyB0aGlua2luZyBhYm91dFxuICAgIC8vICAgICAgIGFkZGluZyBhIG5ldXRyYWwgcGFydHkgYnV0IHRoYXRzIG92ZXJraWxsLlxuICAgIHB1YmxpYyBtZXRob2RzID0gW1xuICAgICAgICAnYXNzZXJ0JyxcbiAgICAgICAgJ2NvdW50JyxcbiAgICAgICAgJ2RlYnVnJyxcbiAgICAgICAgJ2RpcicsXG4gICAgICAgICdkaXJ4bWwnLFxuICAgICAgICAnZXJyb3InLFxuICAgICAgICAnZ3JvdXAnLFxuICAgICAgICAnZ3JvdXBDb2xsYXBzZWQnLFxuICAgICAgICAnZ3JvdXBFbmQnLFxuICAgICAgICAnaW5mbycsXG4gICAgICAgICdsb2cnLFxuICAgICAgICAncHJvZmlsZScsXG4gICAgICAgICdwcm9maWxlRW5kJyxcbiAgICAgICAgJ3RhYmxlJyxcbiAgICAgICAgJ3RpbWUnLFxuICAgICAgICAndGltZUVuZCcsXG4gICAgICAgICd0aW1lU3RhbXAnLFxuICAgICAgICAndHJhY2UnLFxuICAgICAgICAnd2FybidcbiAgICBdO1xuXG4gICAgcHVibGljIGlzU3VwcG9ydGVkKCkge1xuICAgICAgICAvLyBJRTkgYW5kIG9sZGVyIHRocm93cyBhbiBleGNlcHRpb24gaWYgd2UgdHJ5IGFuZCB3cml0ZSBhIHZhbHVlIHRvXG4gICAgICAgIC8vIGFuIHVuZGVmaW5lZCBwcmVvcHJ0eSBvbiBjb25zb2xlIG1ldGhvZHMsIHNvIHdlIHRlc3QgaGVyZSBpZiB3ZVxuICAgICAgICAvLyBjYW4gd3JpdGUgdG8gYGNvbnNvbGUubG9nYCwgYW5kIGlmIG5vdCByZXR1cm4gbm90IHN1cHBvcnRlZFxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWFueVxuICAgICAgICAgICAgKDxhbnk+Y29uc29sZS5sb2cpLl9fZ2xpbXBzZV9lbmFibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcbiAgICAgICAgICAgIGRlbGV0ZSAoPGFueT5jb25zb2xlLmxvZykuX19nbGltcHNlX2VuYWJsZWQ7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gISEod2luZG93ICYmIHR5cGVvZiB3aW5kb3cuY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpO1xuICAgIH1cblxuICAgIHB1YmxpYyBpbml0KCkge1xuICAgICAgICB0aGlzLm1ldGhvZHMuZm9yRWFjaCgobWV0aG9kS2V5KSA9PiB7XG4gICAgICAgICAgICBpZiAobWV0aG9kS2V5ICYmIGNvbnNvbGVbbWV0aG9kS2V5XSAmJiAhY29uc29sZVttZXRob2RLZXldLl9fZ2xpbXBzZV9vcmlnaW5hbCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGVbbWV0aG9kS2V5XSA9IChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG9sZEZ1bmN0aW9uID0gY29uc29sZVtrZXldO1xuXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0Z1bmN0aW9uID0gPFByb3h5RnVuY3Rpb24+ZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYWNpbmcucHVibGlzaChOT1RJRllfQ09OU09MRV9FVkVOVF9PQ0NVUkVELCB7IG1ldGhvZDoga2V5LCBhcmd1bWVudHM6IGFyZ3MgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvbGRGdW5jdGlvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgIG9sZEZ1bmN0aW9uLl9fZ2xpbXBzZV9wcm94eSA9IG5ld0Z1bmN0aW9uO1xuICAgICAgICAgICAgICAgICAgICBuZXdGdW5jdGlvbi5fX2dsaW1wc2Vfb3JpZ2luYWwgPSBvbGRGdW5jdGlvbjtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3RnVuY3Rpb247XG4gICAgICAgICAgICAgICAgfShtZXRob2RLZXkpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3RyYWNpbmcvcHJveGllcy9Db25zb2xlUHJveHkudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNBO0FBQ0E7Ozs7Ozs7QUFDQTtBQU9BO0FBQ0E7O0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFzQkE7QUFDQTs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 27 */
/*!******************************************!*\
  !*** ./src/common/CallStackUtilities.ts ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getStackTrace = getStackTrace;\n\nvar _errorStackParser = __webpack_require__(/*! error-stack-parser */ 28);\n\nvar ErrorStackParser = _interopRequireWildcard(_errorStackParser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction getStackTrace(cb) {\n    // stacktrace-js library has a Get method that will try to apply sourcemaps, however\n    // that will trigger a download of the source, and will show up as an XHR request\n    // in glimpse, which we don't want.  When we disable source-maps, then\n    // stacktrace-js will reject a promise, which causes undesired debugger breakpoints\n    // when the user has their app open in f12 tools. The easiest thing here is to put\n    // generate the error ourself, and use the error-stack-parser library to parse the\n    // error into stack frames.\n    // this logic to get an error comes from stacktrace-js library.\n    // See https://github.com/stacktracejs/stacktrace.js/blob/master/stacktrace.js#L25-L32\n    function getError() {\n        var err = new Error();\n        if (!err.stack) {\n            try {\n                // Error must be thrown to get stack in IE\n                throw new Error();\n            } catch (e2) {\n                err = e2;\n            }\n        }\n        return err;\n    }\n    var stackFrames = ErrorStackParser.parse(getError());\n    // slice off top frames where glimpse code is on the stack.\n    for (var i = 0; i < stackFrames.length; i++) {\n        if (stackFrames[i].fileName && !stackFrames[i].fileName.endsWith('/glimpse/agent/agent.js?hash={hash}')) {\n            stackFrames = stackFrames.slice(i);\n            break;\n        }\n    }\n    // strip out any extra properties we don't want to send w/ the glimpse message\n    var newFrames = [];\n    stackFrames.forEach(function (val, index) {\n        newFrames[index] = {\n            fileName: val.fileName,\n            functionName: val.functionName,\n            lineNumber: val.lineNumber,\n            columnNumber: val.columnNumber\n        };\n    });\n    // various tests are expecting this to run asynchronously, which we'll eventually need if we ever hook up\n    // source maps.  Even though we don't need it today, we'll leave this as an async function.\n    window.setTimeout(function () {\n        cb(newFrames);\n    }, 0);\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tbW9uL0NhbGxTdGFja1V0aWxpdGllcy50cz9hMWUyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEVycm9yU3RhY2tQYXJzZXIgZnJvbSAnZXJyb3Itc3RhY2stcGFyc2VyJztcblxuZXhwb3J0IGludGVyZmFjZSBJU3RhY2tGcmFtZSB7XG4gICAgZmlsZU5hbWU6IHN0cmluZztcbiAgICBmdW5jdGlvbk5hbWU6IHN0cmluZztcbiAgICBsaW5lTnVtYmVyOiBudW1iZXI7XG4gICAgY29sdW1uTnVtYmVyOiBudW1iZXI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdGFja1RyYWNlKGNiOiAoZnJhbWVzOiBJU3RhY2tGcmFtZVtdKSA9PiB2b2lkKTogdm9pZCB7XG5cbiAgICAvLyBzdGFja3RyYWNlLWpzIGxpYnJhcnkgaGFzIGEgR2V0IG1ldGhvZCB0aGF0IHdpbGwgdHJ5IHRvIGFwcGx5IHNvdXJjZW1hcHMsIGhvd2V2ZXJcbiAgICAvLyB0aGF0IHdpbGwgdHJpZ2dlciBhIGRvd25sb2FkIG9mIHRoZSBzb3VyY2UsIGFuZCB3aWxsIHNob3cgdXAgYXMgYW4gWEhSIHJlcXVlc3RcbiAgICAvLyBpbiBnbGltcHNlLCB3aGljaCB3ZSBkb24ndCB3YW50LiAgV2hlbiB3ZSBkaXNhYmxlIHNvdXJjZS1tYXBzLCB0aGVuXG4gICAgLy8gc3RhY2t0cmFjZS1qcyB3aWxsIHJlamVjdCBhIHByb21pc2UsIHdoaWNoIGNhdXNlcyB1bmRlc2lyZWQgZGVidWdnZXIgYnJlYWtwb2ludHNcbiAgICAvLyB3aGVuIHRoZSB1c2VyIGhhcyB0aGVpciBhcHAgb3BlbiBpbiBmMTIgdG9vbHMuIFRoZSBlYXNpZXN0IHRoaW5nIGhlcmUgaXMgdG8gcHV0XG4gICAgLy8gZ2VuZXJhdGUgdGhlIGVycm9yIG91cnNlbGYsIGFuZCB1c2UgdGhlIGVycm9yLXN0YWNrLXBhcnNlciBsaWJyYXJ5IHRvIHBhcnNlIHRoZVxuICAgIC8vIGVycm9yIGludG8gc3RhY2sgZnJhbWVzLlxuXG4gICAgLy8gdGhpcyBsb2dpYyB0byBnZXQgYW4gZXJyb3IgY29tZXMgZnJvbSBzdGFja3RyYWNlLWpzIGxpYnJhcnkuXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9zdGFja3RyYWNlanMvc3RhY2t0cmFjZS5qcy9ibG9iL21hc3Rlci9zdGFja3RyYWNlLmpzI0wyNS1MMzJcbiAgICBmdW5jdGlvbiBnZXRFcnJvcigpIHtcbiAgICAgICAgbGV0IGVyciA9IG5ldyBFcnJvcigpO1xuICAgICAgICBpZiAoIWVyci5zdGFjaykge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAvLyBFcnJvciBtdXN0IGJlIHRocm93biB0byBnZXQgc3RhY2sgaW4gSUVcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgICAgICAgICAgICAgZXJyID0gZTI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVycjtcbiAgICB9XG5cbiAgICBsZXQgc3RhY2tGcmFtZXMgPSBFcnJvclN0YWNrUGFyc2VyLnBhcnNlKGdldEVycm9yKCkpO1xuXG4gICAgLy8gc2xpY2Ugb2ZmIHRvcCBmcmFtZXMgd2hlcmUgZ2xpbXBzZSBjb2RlIGlzIG9uIHRoZSBzdGFjay5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0YWNrRnJhbWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChzdGFja0ZyYW1lc1tpXS5maWxlTmFtZSAmJiAhc3RhY2tGcmFtZXNbaV0uZmlsZU5hbWUuZW5kc1dpdGgoJy9nbGltcHNlL2FnZW50L2FnZW50LmpzP2hhc2g9e2hhc2h9JykpIHtcbiAgICAgICAgICAgIHN0YWNrRnJhbWVzID0gc3RhY2tGcmFtZXMuc2xpY2UoaSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIHN0cmlwIG91dCBhbnkgZXh0cmEgcHJvcGVydGllcyB3ZSBkb24ndCB3YW50IHRvIHNlbmQgdy8gdGhlIGdsaW1wc2UgbWVzc2FnZVxuICAgIGNvbnN0IG5ld0ZyYW1lczogSVN0YWNrRnJhbWVbXSA9IFtdO1xuICAgIHN0YWNrRnJhbWVzLmZvckVhY2goKHZhbDogRXJyb3JTdGFja1BhcnNlci5TdGFja0ZyYW1lLCBpbmRleDogbnVtYmVyKSA9PiB7XG4gICAgICAgIG5ld0ZyYW1lc1tpbmRleF0gPSB7XG4gICAgICAgICAgICBmaWxlTmFtZTogdmFsLmZpbGVOYW1lLFxuICAgICAgICAgICAgZnVuY3Rpb25OYW1lOiB2YWwuZnVuY3Rpb25OYW1lLFxuICAgICAgICAgICAgbGluZU51bWJlcjogdmFsLmxpbmVOdW1iZXIsXG4gICAgICAgICAgICBjb2x1bW5OdW1iZXI6IHZhbC5jb2x1bW5OdW1iZXJcbiAgICAgICAgfTtcbiAgICB9KTtcblxuICAgIC8vIHZhcmlvdXMgdGVzdHMgYXJlIGV4cGVjdGluZyB0aGlzIHRvIHJ1biBhc3luY2hyb25vdXNseSwgd2hpY2ggd2UnbGwgZXZlbnR1YWxseSBuZWVkIGlmIHdlIGV2ZXIgaG9vayB1cFxuICAgIC8vIHNvdXJjZSBtYXBzLiAgRXZlbiB0aG91Z2ggd2UgZG9uJ3QgbmVlZCBpdCB0b2RheSwgd2UnbGwgbGVhdmUgdGhpcyBhcyBhbiBhc3luYyBmdW5jdGlvbi5cbiAgICB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7IGNiKG5ld0ZyYW1lcyk7IH0sIDApO1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2NvbW1vbi9DYWxsU3RhY2tVdGlsaXRpZXMudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBREE7QUFDQTs7O0FBUUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 28 */
/*!****************************************************!*\
  !*** ./~/error-stack-parser/error-stack-parser.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! stackframe */ 29)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join('@') || undefined;\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 29 */
/*!************************************!*\
  !*** ./~/stackframe/stackframe.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str[0].toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function () {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    function StackFrame(obj) {\n        if (obj instanceof Object) {\n            var props = booleanProps.concat(numericProps.concat(stringProps.concat(arrayProps)));\n            for (var i = 0; i < props.length; i++) {\n                if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {\n                    this['set' + _capitalize(props[i])](obj[props[i]]);\n                }\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function () {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function (v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function () {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function (p) {\n            return function (v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function (p) {\n            return function (v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function (p) {\n            return function (v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3N0YWNrZnJhbWUvc3RhY2tmcmFtZS5qcz8zOTViIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAocm9vdCwgZmFjdG9yeSkge1xuICAgICd1c2Ugc3RyaWN0JztcbiAgICAvLyBVbml2ZXJzYWwgTW9kdWxlIERlZmluaXRpb24gKFVNRCkgdG8gc3VwcG9ydCBBTUQsIENvbW1vbkpTL05vZGUuanMsIFJoaW5vLCBhbmQgYnJvd3NlcnMuXG5cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAgICAgZGVmaW5lKCdzdGFja2ZyYW1lJywgW10sIGZhY3RvcnkpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJvb3QuU3RhY2tGcmFtZSA9IGZhY3RvcnkoKTtcbiAgICB9XG59KHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG4gICAgZnVuY3Rpb24gX2lzTnVtYmVyKG4pIHtcbiAgICAgICAgcmV0dXJuICFpc05hTihwYXJzZUZsb2F0KG4pKSAmJiBpc0Zpbml0ZShuKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfY2FwaXRhbGl6ZShzdHIpIHtcbiAgICAgICAgcmV0dXJuIHN0clswXS50b1VwcGVyQ2FzZSgpICsgc3RyLnN1YnN0cmluZygxKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfZ2V0dGVyKHApIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzW3BdO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIHZhciBib29sZWFuUHJvcHMgPSBbJ2lzQ29uc3RydWN0b3InLCAnaXNFdmFsJywgJ2lzTmF0aXZlJywgJ2lzVG9wbGV2ZWwnXTtcbiAgICB2YXIgbnVtZXJpY1Byb3BzID0gWydjb2x1bW5OdW1iZXInLCAnbGluZU51bWJlciddO1xuICAgIHZhciBzdHJpbmdQcm9wcyA9IFsnZmlsZU5hbWUnLCAnZnVuY3Rpb25OYW1lJywgJ3NvdXJjZSddO1xuICAgIHZhciBhcnJheVByb3BzID0gWydhcmdzJ107XG5cbiAgICBmdW5jdGlvbiBTdGFja0ZyYW1lKG9iaikge1xuICAgICAgICBpZiAob2JqIGluc3RhbmNlb2YgT2JqZWN0KSB7XG4gICAgICAgICAgICB2YXIgcHJvcHMgPSBib29sZWFuUHJvcHMuY29uY2F0KG51bWVyaWNQcm9wcy5jb25jYXQoc3RyaW5nUHJvcHMuY29uY2F0KGFycmF5UHJvcHMpKSk7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShwcm9wc1tpXSkgJiYgb2JqW3Byb3BzW2ldXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXNbJ3NldCcgKyBfY2FwaXRhbGl6ZShwcm9wc1tpXSldKG9ialtwcm9wc1tpXV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIFN0YWNrRnJhbWUucHJvdG90eXBlID0ge1xuICAgICAgICBnZXRBcmdzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hcmdzO1xuICAgICAgICB9LFxuICAgICAgICBzZXRBcmdzOiBmdW5jdGlvbiAodikge1xuICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2KSAhPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3MgbXVzdCBiZSBhbiBBcnJheScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5hcmdzID0gdjtcbiAgICAgICAgfSxcblxuICAgICAgICBnZXRFdmFsT3JpZ2luOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5ldmFsT3JpZ2luO1xuICAgICAgICB9LFxuICAgICAgICBzZXRFdmFsT3JpZ2luOiBmdW5jdGlvbiAodikge1xuICAgICAgICAgICAgaWYgKHYgaW5zdGFuY2VvZiBTdGFja0ZyYW1lKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ldmFsT3JpZ2luID0gdjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodiBpbnN0YW5jZW9mIE9iamVjdCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXZhbE9yaWdpbiA9IG5ldyBTdGFja0ZyYW1lKHYpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFdmFsIE9yaWdpbiBtdXN0IGJlIGFuIE9iamVjdCBvciBTdGFja0ZyYW1lJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgdG9TdHJpbmc6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBmdW5jdGlvbk5hbWUgPSB0aGlzLmdldEZ1bmN0aW9uTmFtZSgpIHx8ICd7YW5vbnltb3VzfSc7XG4gICAgICAgICAgICB2YXIgYXJncyA9ICcoJyArICh0aGlzLmdldEFyZ3MoKSB8fCBbXSkuam9pbignLCcpICsgJyknO1xuICAgICAgICAgICAgdmFyIGZpbGVOYW1lID0gdGhpcy5nZXRGaWxlTmFtZSgpID8gKCdAJyArIHRoaXMuZ2V0RmlsZU5hbWUoKSkgOiAnJztcbiAgICAgICAgICAgIHZhciBsaW5lTnVtYmVyID0gX2lzTnVtYmVyKHRoaXMuZ2V0TGluZU51bWJlcigpKSA/ICgnOicgKyB0aGlzLmdldExpbmVOdW1iZXIoKSkgOiAnJztcbiAgICAgICAgICAgIHZhciBjb2x1bW5OdW1iZXIgPSBfaXNOdW1iZXIodGhpcy5nZXRDb2x1bW5OdW1iZXIoKSkgPyAoJzonICsgdGhpcy5nZXRDb2x1bW5OdW1iZXIoKSkgOiAnJztcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbk5hbWUgKyBhcmdzICsgZmlsZU5hbWUgKyBsaW5lTnVtYmVyICsgY29sdW1uTnVtYmVyO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYm9vbGVhblByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIFN0YWNrRnJhbWUucHJvdG90eXBlWydnZXQnICsgX2NhcGl0YWxpemUoYm9vbGVhblByb3BzW2ldKV0gPSBfZ2V0dGVyKGJvb2xlYW5Qcm9wc1tpXSk7XG4gICAgICAgIFN0YWNrRnJhbWUucHJvdG90eXBlWydzZXQnICsgX2NhcGl0YWxpemUoYm9vbGVhblByb3BzW2ldKV0gPSAoZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAodikge1xuICAgICAgICAgICAgICAgIHRoaXNbcF0gPSBCb29sZWFuKHYpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSkoYm9vbGVhblByb3BzW2ldKTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBqID0gMDsgaiA8IG51bWVyaWNQcm9wcy5sZW5ndGg7IGorKykge1xuICAgICAgICBTdGFja0ZyYW1lLnByb3RvdHlwZVsnZ2V0JyArIF9jYXBpdGFsaXplKG51bWVyaWNQcm9wc1tqXSldID0gX2dldHRlcihudW1lcmljUHJvcHNbal0pO1xuICAgICAgICBTdGFja0ZyYW1lLnByb3RvdHlwZVsnc2V0JyArIF9jYXBpdGFsaXplKG51bWVyaWNQcm9wc1tqXSldID0gKGZ1bmN0aW9uIChwKSB7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgICAgICAgICBpZiAoIV9pc051bWJlcih2KSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHAgKyAnIG11c3QgYmUgYSBOdW1iZXInKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpc1twXSA9IE51bWJlcih2KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pKG51bWVyaWNQcm9wc1tqXSk7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgayA9IDA7IGsgPCBzdHJpbmdQcm9wcy5sZW5ndGg7IGsrKykge1xuICAgICAgICBTdGFja0ZyYW1lLnByb3RvdHlwZVsnZ2V0JyArIF9jYXBpdGFsaXplKHN0cmluZ1Byb3BzW2tdKV0gPSBfZ2V0dGVyKHN0cmluZ1Byb3BzW2tdKTtcbiAgICAgICAgU3RhY2tGcmFtZS5wcm90b3R5cGVbJ3NldCcgKyBfY2FwaXRhbGl6ZShzdHJpbmdQcm9wc1trXSldID0gKGZ1bmN0aW9uIChwKSB7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgICAgICAgICB0aGlzW3BdID0gU3RyaW5nKHYpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSkoc3RyaW5nUHJvcHNba10pO1xuICAgIH1cblxuICAgIHJldHVybiBTdGFja0ZyYW1lO1xufSkpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3N0YWNrZnJhbWUvc3RhY2tmcmFtZS5qc1xuLy8gbW9kdWxlIGlkID0gMjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 30 */
/*!************************************************!*\
  !*** ./src/inspectors/PerformanceInspector.ts ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PerformanceInspector = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Tracing = __webpack_require__(/*! ../tracing/Tracing */ 11);\n\nvar _Tracing2 = _interopRequireDefault(_Tracing);\n\nvar _PerformanceProxy = __webpack_require__(/*! ../tracing/proxies/PerformanceProxy */ 31);\n\nvar _MessageMixins = __webpack_require__(/*! ../common/MessageMixins */ 6);\n\nvar _CallStackUtilities = __webpack_require__(/*! ../common/CallStackUtilities */ 27);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PerformanceInspector = exports.PerformanceInspector = function () {\n    function PerformanceInspector() {\n        _classCallCheck(this, PerformanceInspector);\n\n        this.markIdCache = {};\n    }\n\n    _createClass(PerformanceInspector, [{\n        key: 'init',\n        value: function init(messagePublisher) {\n            var _this = this;\n\n            this.messagePublisher = messagePublisher;\n            _Tracing2['default'].on(_PerformanceProxy.EVENT_PERFORMANCE_MARK, function (data) {\n                return _this.mark(data);\n            });\n            _Tracing2['default'].on(_PerformanceProxy.EVENT_PERFORMANCE_MEASURE, function (data) {\n                return _this.measure(data);\n            });\n        }\n    }, {\n        key: 'mark',\n        value: function mark(data) {\n            var _this2 = this;\n\n            var eventData = data.data;\n            var message = this.messagePublisher.createMessage('debug-timestamp', {\n                name: eventData.name\n            });\n            // Save the internal ID <> message ID correlation for lookup in measure\n            // events. We do this two stage caching level so that proxies don't need\n            // to know anything about the details of how message IDs work.\n            this.markIdCache[eventData.id] = message.id;\n            // Override the message offset directly. We override it manually instead\n            // of using `addOffset` because that method adjust the offset we pass to\n            // be relative to `performance.timing.requestStart - performance.timing.fetchStart`\n            // however the offsets we receive here are from performance.timing, so they\n            // are already relative to the proper time, and so shouldn't be adjusted\n            message.offset = eventData.startTime;\n            // If the mark is a built-in mark, then we skip collecting the stack trace\n            // because there is no actual stack trace associated with the mark\n            if (eventData.isBuiltIn) {\n                // Wrap the publish in a set timeout to make the asynchronicity\n                // of this method consistent across different event configurations\n                setTimeout(function () {\n                    return _this2.messagePublisher.publishMessage(message);\n                }, 0);\n            } else {\n                // We create the message first, and add frames later, to ensure that\n                // the mark ID cache is filled and waiting when `performance.measure`\n                // is called, which may occur before the getStackTrace callback is\n                // called.\n                (0, _CallStackUtilities.getStackTrace)(function (frames) {\n                    message.payload.frames = frames;\n                    _this2.messagePublisher.publishMessage(message);\n                });\n            }\n        }\n    }, {\n        key: 'measure',\n        value: function measure(data) {\n            var eventData = data.data;\n            var startMarkMessageId = this.markIdCache[eventData.startMarkId];\n            var endMarkMessageId = this.markIdCache[eventData.endMarkId];\n            var message = this.messagePublisher.createMessage('debug-timestamp-measurement', {\n                correlationMessageIds: [startMarkMessageId, endMarkMessageId],\n                category: 'duration',\n                name: eventData.name\n            });\n            (0, _MessageMixins.addOffset)(data.offset, message);\n            this.messagePublisher.publishMessage(message);\n        }\n    }]);\n\n    return PerformanceInspector;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5zcGVjdG9ycy9QZXJmb3JtYW5jZUluc3BlY3Rvci50cz83NjI1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElJbnNwZWN0b3IgfSBmcm9tICcuL0lJbnNwZWN0b3InO1xuaW1wb3J0IHsgSU1lc3NhZ2VQdWJsaXNoZXIgfSBmcm9tICcuLi9NZXNzYWdlUHVibGlzaGVyJztcbmltcG9ydCB7IElQcm94eUV2ZW50IH0gZnJvbSAnLi4vdHJhY2luZy9JUHJveHlFdmVudCc7XG5pbXBvcnQgdHJhY2luZyBmcm9tICcuLi90cmFjaW5nL1RyYWNpbmcnO1xuaW1wb3J0IHtcbiAgSVBlcmZvcm1hbmNlTWFya0V2ZW50LCBFVkVOVF9QRVJGT1JNQU5DRV9NQVJLLFxuICBJUGVyZm9ybWFuY2VNZWFzdXJlRXZlbnQsIEVWRU5UX1BFUkZPUk1BTkNFX01FQVNVUkVcbn0gZnJvbSAnLi4vdHJhY2luZy9wcm94aWVzL1BlcmZvcm1hbmNlUHJveHknO1xuaW1wb3J0IHsgYWRkT2Zmc2V0IH0gZnJvbSAnLi4vY29tbW9uL01lc3NhZ2VNaXhpbnMnO1xuaW1wb3J0IHsgZ2V0U3RhY2tUcmFjZSwgSVN0YWNrRnJhbWUgfSBmcm9tICcuLi9jb21tb24vQ2FsbFN0YWNrVXRpbGl0aWVzJztcblxuZXhwb3J0IGNsYXNzIFBlcmZvcm1hbmNlSW5zcGVjdG9yIGltcGxlbWVudHMgSUluc3BlY3RvciB7XG5cbiAgICBwcml2YXRlIG1lc3NhZ2VQdWJsaXNoZXI6IElNZXNzYWdlUHVibGlzaGVyO1xuXG4gICAgcHJpdmF0ZSBtYXJrSWRDYWNoZTogeyBbIGlkOiBzdHJpbmcgXTogc3RyaW5nIH0gPSB7fTtcblxuICAgIHB1YmxpYyBpbml0KG1lc3NhZ2VQdWJsaXNoZXI6IElNZXNzYWdlUHVibGlzaGVyKSB7XG4gICAgICAgIHRoaXMubWVzc2FnZVB1Ymxpc2hlciA9IG1lc3NhZ2VQdWJsaXNoZXI7XG4gICAgICAgIHRyYWNpbmcub24oRVZFTlRfUEVSRk9STUFOQ0VfTUFSSywgKGRhdGEpID0+IHRoaXMubWFyayhkYXRhKSk7XG4gICAgICAgIHRyYWNpbmcub24oRVZFTlRfUEVSRk9STUFOQ0VfTUVBU1VSRSwgKGRhdGEpID0+IHRoaXMubWVhc3VyZShkYXRhKSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBtYXJrKGRhdGE6IElQcm94eUV2ZW50KSB7XG4gICAgICAgIGNvbnN0IGV2ZW50RGF0YTogSVBlcmZvcm1hbmNlTWFya0V2ZW50ID0gZGF0YS5kYXRhO1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gdGhpcy5tZXNzYWdlUHVibGlzaGVyLmNyZWF0ZU1lc3NhZ2UoJ2RlYnVnLXRpbWVzdGFtcCcsIHtcbiAgICAgICAgICAgIG5hbWU6IGV2ZW50RGF0YS5uYW1lXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIFNhdmUgdGhlIGludGVybmFsIElEIDw+IG1lc3NhZ2UgSUQgY29ycmVsYXRpb24gZm9yIGxvb2t1cCBpbiBtZWFzdXJlXG4gICAgICAgIC8vIGV2ZW50cy4gV2UgZG8gdGhpcyB0d28gc3RhZ2UgY2FjaGluZyBsZXZlbCBzbyB0aGF0IHByb3hpZXMgZG9uJ3QgbmVlZFxuICAgICAgICAvLyB0byBrbm93IGFueXRoaW5nIGFib3V0IHRoZSBkZXRhaWxzIG9mIGhvdyBtZXNzYWdlIElEcyB3b3JrLlxuICAgICAgICB0aGlzLm1hcmtJZENhY2hlW2V2ZW50RGF0YS5pZF0gPSBtZXNzYWdlLmlkO1xuXG4gICAgICAgIC8vIE92ZXJyaWRlIHRoZSBtZXNzYWdlIG9mZnNldCBkaXJlY3RseS4gV2Ugb3ZlcnJpZGUgaXQgbWFudWFsbHkgaW5zdGVhZFxuICAgICAgICAvLyBvZiB1c2luZyBgYWRkT2Zmc2V0YCBiZWNhdXNlIHRoYXQgbWV0aG9kIGFkanVzdCB0aGUgb2Zmc2V0IHdlIHBhc3MgdG9cbiAgICAgICAgLy8gYmUgcmVsYXRpdmUgdG8gYHBlcmZvcm1hbmNlLnRpbWluZy5yZXF1ZXN0U3RhcnQgLSBwZXJmb3JtYW5jZS50aW1pbmcuZmV0Y2hTdGFydGBcbiAgICAgICAgLy8gaG93ZXZlciB0aGUgb2Zmc2V0cyB3ZSByZWNlaXZlIGhlcmUgYXJlIGZyb20gcGVyZm9ybWFuY2UudGltaW5nLCBzbyB0aGV5XG4gICAgICAgIC8vIGFyZSBhbHJlYWR5IHJlbGF0aXZlIHRvIHRoZSBwcm9wZXIgdGltZSwgYW5kIHNvIHNob3VsZG4ndCBiZSBhZGp1c3RlZFxuICAgICAgICBtZXNzYWdlLm9mZnNldCA9IGV2ZW50RGF0YS5zdGFydFRpbWU7XG5cbiAgICAgICAgLy8gSWYgdGhlIG1hcmsgaXMgYSBidWlsdC1pbiBtYXJrLCB0aGVuIHdlIHNraXAgY29sbGVjdGluZyB0aGUgc3RhY2sgdHJhY2VcbiAgICAgICAgLy8gYmVjYXVzZSB0aGVyZSBpcyBubyBhY3R1YWwgc3RhY2sgdHJhY2UgYXNzb2NpYXRlZCB3aXRoIHRoZSBtYXJrXG4gICAgICAgIGlmIChldmVudERhdGEuaXNCdWlsdEluKSB7XG4gICAgICAgICAgICAvLyBXcmFwIHRoZSBwdWJsaXNoIGluIGEgc2V0IHRpbWVvdXQgdG8gbWFrZSB0aGUgYXN5bmNocm9uaWNpdHlcbiAgICAgICAgICAgIC8vIG9mIHRoaXMgbWV0aG9kIGNvbnNpc3RlbnQgYWNyb3NzIGRpZmZlcmVudCBldmVudCBjb25maWd1cmF0aW9uc1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLm1lc3NhZ2VQdWJsaXNoZXIucHVibGlzaE1lc3NhZ2UobWVzc2FnZSksIDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gV2UgY3JlYXRlIHRoZSBtZXNzYWdlIGZpcnN0LCBhbmQgYWRkIGZyYW1lcyBsYXRlciwgdG8gZW5zdXJlIHRoYXRcbiAgICAgICAgICAgIC8vIHRoZSBtYXJrIElEIGNhY2hlIGlzIGZpbGxlZCBhbmQgd2FpdGluZyB3aGVuIGBwZXJmb3JtYW5jZS5tZWFzdXJlYFxuICAgICAgICAgICAgLy8gaXMgY2FsbGVkLCB3aGljaCBtYXkgb2NjdXIgYmVmb3JlIHRoZSBnZXRTdGFja1RyYWNlIGNhbGxiYWNrIGlzXG4gICAgICAgICAgICAvLyBjYWxsZWQuXG4gICAgICAgICAgICBnZXRTdGFja1RyYWNlKChmcmFtZXM6IElTdGFja0ZyYW1lW10pID0+IHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlLnBheWxvYWQuZnJhbWVzID0gZnJhbWVzO1xuICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZVB1Ymxpc2hlci5wdWJsaXNoTWVzc2FnZShtZXNzYWdlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBtZWFzdXJlKGRhdGE6IElQcm94eUV2ZW50KSB7XG4gICAgICAgIGNvbnN0IGV2ZW50RGF0YTogSVBlcmZvcm1hbmNlTWVhc3VyZUV2ZW50ID0gZGF0YS5kYXRhO1xuXG4gICAgICAgIGNvbnN0IHN0YXJ0TWFya01lc3NhZ2VJZCA9IHRoaXMubWFya0lkQ2FjaGVbZXZlbnREYXRhLnN0YXJ0TWFya0lkXTtcbiAgICAgICAgY29uc3QgZW5kTWFya01lc3NhZ2VJZCA9IHRoaXMubWFya0lkQ2FjaGVbZXZlbnREYXRhLmVuZE1hcmtJZF07XG5cbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IHRoaXMubWVzc2FnZVB1Ymxpc2hlci5jcmVhdGVNZXNzYWdlKCdkZWJ1Zy10aW1lc3RhbXAtbWVhc3VyZW1lbnQnLCB7XG4gICAgICAgICAgICBjb3JyZWxhdGlvbk1lc3NhZ2VJZHM6IFsgc3RhcnRNYXJrTWVzc2FnZUlkLCBlbmRNYXJrTWVzc2FnZUlkIF0sXG4gICAgICAgICAgICBjYXRlZ29yeTogJ2R1cmF0aW9uJyxcbiAgICAgICAgICAgIG5hbWU6IGV2ZW50RGF0YS5uYW1lXG4gICAgICAgIH0pO1xuICAgICAgICBhZGRPZmZzZXQoZGF0YS5vZmZzZXQsIG1lc3NhZ2UpO1xuXG4gICAgICAgIHRoaXMubWVzc2FnZVB1Ymxpc2hlci5wdWJsaXNoTWVzc2FnZShtZXNzYWdlKTtcbiAgICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvaW5zcGVjdG9ycy9QZXJmb3JtYW5jZUluc3BlY3Rvci50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR0E7QUFDQTs7O0FBQUE7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUNBOzs7Ozs7QUFDQTs7O0FBSUE7QUFFQTtBQUNBOzs7QUFEQTs7O0FBQ0E7QUFDQTtBQUFBOztBQUNBO0FBQUE7O0FBQ0E7OztBQUVBOzs7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBRUE7QUFDQTs7OzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 31 */
/*!*************************************************!*\
  !*** ./src/tracing/proxies/PerformanceProxy.ts ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PerformanceProxy = exports.EVENT_PERFORMANCE_MEASURE = exports.EVENT_PERFORMANCE_MARK = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Tracing = __webpack_require__(/*! ../Tracing */ 11);\n\nvar _Tracing2 = _interopRequireDefault(_Tracing);\n\nvar _PerformanceUtilities = __webpack_require__(/*! ../../common/PerformanceUtilities */ 22);\n\nvar _PerformanceUtilities2 = _interopRequireDefault(_PerformanceUtilities);\n\nvar _GeneralUtilities = __webpack_require__(/*! ../../common/GeneralUtilities */ 4);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EVENT_PERFORMANCE_MARK = exports.EVENT_PERFORMANCE_MARK = 'invoke|post|performance.mark';\nvar EVENT_PERFORMANCE_MEASURE = exports.EVENT_PERFORMANCE_MEASURE = 'invoke|post|performance.measure';\nvar measureIdCount = 1;\n\nvar PerformanceProxy = exports.PerformanceProxy = function () {\n    function PerformanceProxy() {\n        _classCallCheck(this, PerformanceProxy);\n\n        this.markIdCache = {};\n    }\n\n    _createClass(PerformanceProxy, [{\n        key: 'getMarkId',\n        value: function getMarkId(name) {\n            // Check if we have a cached mark entry, and if so, return it\n            if (this.markIdCache[name]) {\n                return this.markIdCache[name];\n            }\n            // If we got here, then that means there is not a cached mark entry,\n            // meaning we haven't seen the mark before. This can happen for two reasons:\n            // 1) The name is not a known mark name. Technically it shouldn't ever\n            //    get to this method, because `performance.measure` will throw first\n            // 2) The name is a built-in performance timing mark that the browser\n            //    generated on page load. These are stored in `performance.timing`\n            // This checks if we have a built-in `performance.timing` mark. If\n            // we do have a built in `performance.timing` mark, we create a mark\n            // message for this retroactively and publish a mark event. Note:\n            // if this built in mark was already referenced, it will be in the\n            // cache, meaning that this code will not be run twice for the same mark\n            if (_PerformanceUtilities2['default'].timing[name]) {\n                // We do a little hack here to get the `startTime` of the entry\n                // by measuring this mark against itself and getting the\n                // resulting performance entry\n                var tempMeasureName = '__glimpse_measure-' + measureIdCount++;\n                this.oldMeasure.call(_PerformanceUtilities2['default'], tempMeasureName, name, name);\n                var tempMeasureEntry = this.getPerformanceEntryByName(tempMeasureName);\n                var eventData = this.initializeMark(name, tempMeasureEntry.startTime, true);\n                // We clear the measure entry now so we can keep the `performance.getEntries`\n                // history clean for users who want to query performance entries\n                _PerformanceUtilities2['default'].clearMeasures(tempMeasureName);\n                _Tracing2['default'].publish(EVENT_PERFORMANCE_MARK, eventData);\n                return eventData.id;\n            }\n            // If we got here, then it means the mark name is not valid. We _shouldn't_\n            // ever get here, because the browser's native `performance.measure` method\n            // will throw if the name is not know before this method is called.\n            return undefined;\n        }\n    }, {\n        key: 'getPerformanceEntryByName',\n        value: function getPerformanceEntryByName(name) {\n            return _PerformanceUtilities2['default'].getEntriesByName(name).pop();\n        }\n    }, {\n        key: 'initializeMark',\n        value: function initializeMark(name, startTime, isBuiltIn) {\n            var id = (0, _GeneralUtilities.getGuid)();\n            var eventData = {\n                id: id,\n                name: name,\n                startTime: startTime,\n                isBuiltIn: isBuiltIn\n            };\n            // We only need to store the newest ID in the cache because `performance.measure`\n            // always grabs the newest mark with a given name. For more info, see\n            // https://www.w3.org/TR/user-timing/#dom-performance-measure\n            this.markIdCache[name] = id;\n            return eventData;\n        }\n    }, {\n        key: 'instrumentMark',\n        value: function instrumentMark() {\n            var oldMark = _PerformanceUtilities2['default'].mark;\n            var self = this;\n            _PerformanceUtilities2['default'].mark = function mark(name) {\n                for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                    args[_key - 1] = arguments[_key];\n                }\n\n                oldMark.call.apply(oldMark, [this, name].concat(args));\n                var performanceEntry = self.getPerformanceEntryByName(name);\n                var eventData = self.initializeMark(performanceEntry.name, performanceEntry.startTime, false);\n                _Tracing2['default'].publish(EVENT_PERFORMANCE_MARK, eventData);\n            };\n        }\n    }, {\n        key: 'instrumentMeasure',\n        value: function instrumentMeasure() {\n            this.oldMeasure = _PerformanceUtilities2['default'].measure;\n            var self = this;\n            _PerformanceUtilities2['default'].measure = function measure(name, startMark, endMark) {\n                var _self$oldMeasure;\n\n                for (var _len2 = arguments.length, args = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n                    args[_key2 - 3] = arguments[_key2];\n                }\n\n                (_self$oldMeasure = self.oldMeasure).call.apply(_self$oldMeasure, [this, name, startMark, endMark].concat(args));\n                var startMarkId = self.getMarkId(startMark);\n                var endMarkId = self.getMarkId(endMark);\n                if (startMarkId && endMarkId) {\n                    var eventData = {\n                        name: name,\n                        startMarkId: startMarkId,\n                        endMarkId: endMarkId\n                    };\n                    _Tracing2['default'].publish(EVENT_PERFORMANCE_MEASURE, eventData);\n                }\n            };\n        }\n    }, {\n        key: 'isSupported',\n        value: function isSupported() {\n            return !!(_PerformanceUtilities2['default'] && _PerformanceUtilities2['default'].getEntriesByName);\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            if (_PerformanceUtilities2['default'].mark) {\n                this.instrumentMark();\n            }\n            if (_PerformanceUtilities2['default'].measure) {\n                this.instrumentMeasure();\n            }\n        }\n    }]);\n\n    return PerformanceProxy;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 32 */
/*!******************************************!*\
  !*** ./src/tracing/initializeProxies.ts ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports['default'] = initializeProxies;\n\nvar _XHRProxy = __webpack_require__(/*! ./proxies/XHRProxy */ 10);\n\nvar _FetchProxy = __webpack_require__(/*! ./proxies/FetchProxy */ 19);\n\nvar _ResourceTimingProxy = __webpack_require__(/*! ./proxies/ResourceTimingProxy */ 21);\n\nvar _NavigationTimingProxy = __webpack_require__(/*! ./proxies/NavigationTimingProxy */ 24);\n\nvar _ConsoleProxy = __webpack_require__(/*! ./proxies/ConsoleProxy */ 26);\n\nvar _PerformanceProxy = __webpack_require__(/*! ./proxies/PerformanceProxy */ 31);\n\nvar proxies = {\n    XHRProxy: _XHRProxy.XHRProxy,\n    FetchProxy: _FetchProxy.FetchProxy,\n    ResourceTimingProxy: _ResourceTimingProxy.ResourceTimingProxy,\n    NavigationTimingProxy: _NavigationTimingProxy.NavigationTimingProxy,\n    ConsoleProxy: _ConsoleProxy.ConsoleProxy,\n    PerformanceProxy: _PerformanceProxy.PerformanceProxy\n};\nfunction initializeProxies() {\n    for (var proxyName in proxies) {\n        if (proxies.hasOwnProperty(proxyName)) {\n            var proxy = new proxies[proxyName]();\n            // Only initiate (attach) proxies if they are\n            // able to be used in the client.\n            if (proxy.isSupported()) {\n                proxy.init();\n            }\n        }\n    }\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHJhY2luZy9pbml0aWFsaXplUHJveGllcy50cz8yOTRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElQcm94eUNsYXNzIH0gZnJvbSAnLi9JUHJveHknO1xuaW1wb3J0IHsgWEhSUHJveHkgfSBmcm9tICcuL3Byb3hpZXMvWEhSUHJveHknO1xuaW1wb3J0IHsgRmV0Y2hQcm94eSB9IGZyb20gJy4vcHJveGllcy9GZXRjaFByb3h5JztcbmltcG9ydCB7IFJlc291cmNlVGltaW5nUHJveHkgfSBmcm9tICcuL3Byb3hpZXMvUmVzb3VyY2VUaW1pbmdQcm94eSc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uVGltaW5nUHJveHkgfSBmcm9tICcuL3Byb3hpZXMvTmF2aWdhdGlvblRpbWluZ1Byb3h5JztcbmltcG9ydCB7IENvbnNvbGVQcm94eSB9IGZyb20gJy4vcHJveGllcy9Db25zb2xlUHJveHknO1xuaW1wb3J0IHsgUGVyZm9ybWFuY2VQcm94eSB9IGZyb20gJy4vcHJveGllcy9QZXJmb3JtYW5jZVByb3h5JztcblxuY29uc3QgcHJveGllczogeyBbcHJveHlOYW1lOiBzdHJpbmddOiBJUHJveHlDbGFzcyB9ID0ge1xuICAgIFhIUlByb3h5LFxuICAgIEZldGNoUHJveHksXG4gICAgUmVzb3VyY2VUaW1pbmdQcm94eSxcbiAgICBOYXZpZ2F0aW9uVGltaW5nUHJveHksXG4gICAgQ29uc29sZVByb3h5LFxuICAgIFBlcmZvcm1hbmNlUHJveHlcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXRpYWxpemVQcm94aWVzKCk6IHZvaWQge1xuICAgIGZvciAoY29uc3QgcHJveHlOYW1lIGluIHByb3hpZXMpIHtcbiAgICAgICAgaWYgKHByb3hpZXMuaGFzT3duUHJvcGVydHkocHJveHlOYW1lKSkge1xuICAgICAgICAgICAgY29uc3QgcHJveHkgPSBuZXcgcHJveGllc1twcm94eU5hbWVdO1xuXG4gICAgICAgICAgICAvLyBPbmx5IGluaXRpYXRlIChhdHRhY2gpIHByb3hpZXMgaWYgdGhleSBhcmVcbiAgICAgICAgICAgIC8vIGFibGUgdG8gYmUgdXNlZCBpbiB0aGUgY2xpZW50LlxuICAgICAgICAgICAgaWYgKHByb3h5LmlzU3VwcG9ydGVkKCkpIHtcbiAgICAgICAgICAgICAgICBwcm94eS5pbml0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvdHJhY2luZy9pbml0aWFsaXplUHJveGllcy50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7O0FBVUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }
/******/ ]);