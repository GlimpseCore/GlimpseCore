/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 25);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* all exports used */
/*!*****************************!*\
  !*** ./src/assets/icons.js ***!
  \*****************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.statusIcon = statusIcon;\nvar colors = {\n    error: '#b03b00',\n    informational: '#1ba1e2',\n    other: '#b5b5b5',\n    redirection: '#f8a800',\n    success: '#78b24c'\n};\n\nfunction statusIcon(statusCode) {\n    var path = void 0;\n\n    if (statusCode < 200 || statusCode >= 400) {\n        var fill = statusCode < 200 ? colors.informational : colors.error;\n        path = '<path d=\"M1023,512c282.7,0,512,229.3,512,512s-229.3,512-512,512s-512-229.3-512-512S740.3,512,1023,512z\" fill=\"' + fill + '\"></path>';\n    } else if (statusCode < 300) {\n        path = '<path d=\"M511,512H1535V1536H511V512Z\" fill=\"' + colors.success + '\"></path>';\n    } else if (statusCode < 400) {\n        path = '<path d=\"M1024,512L512,1536h1024L1024,512z\" fill=\"' + colors.redirection + '\"></path>';\n    }\n\n    return '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" class=\"glimpse-status-icon\">' + path + '</svg>';\n}\n\nvar icons = {\n    client: '\\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" class=\"glimpse-agent-type-icon\">\\n            <path d=\"M1024,74l950,950l-950,950L74,1024L1024,74z M274,1024l750,750l750-750l-750-750L274,1024z\" fill=\"#EE89A2\">\\n            </path>\\n        </svg>\\n    ',\n    server: '\\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" class=\"glimpse-agent-type-icon\">\\n            <path d=\"M1024,174c469.8,0,850,380.2,850,850s-380.2,850-850,850s-850-380.2-850-850S554.2,174,1024,174z M1024,1674c357.6,0,650-291.6,650-650c0-357.6-292.4-650-650-650s-650,292.4-650,650S665.6,1674,1024,1674z\" fill=\"#86d7f4\">\\n            </path>\\n        </svg>\\n    ',\n    error: '\\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" class=\"icon-error\">\\n            <path d=\"M1024,0c565,0,1024,459,1024,1024S1589,2048,1024,2048,0,1589,0,1024,459,0,1024,0Zm113,1024,342-342L1366,569,1024,911,682,569,569,682l342,342L569,1366l113,113,342-342,342,342,113-113-342-342Z\" />\\n        </svg>\\n    ',\n    warn: '\\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" class=\"icon-warn\">\\n            <path d=\"M1984,1984H64L1024,64l960,1920Zm-896-384.00006H960.00006V1728H1088V1599.99994ZM1088,1472V832H960.00006v640Z\" />\\n        </svg>\\n    ',\n    info: '\\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" class=\"icon-info\">\\n            <path d=\"M1024,64c530,0,960,430,960,960s-430,960.00006-960,960.00006S64,1554,64,1024,494,64,1024,64Zm64,768H960.00006v640H1088V832Zm0-256H960.00006V704H1088V576Z\" />\\n        </svg>\\n    ',\n    expandArrow: '\\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" class=\"icon icon-arrow\">\\n            <path d=\"M1024,1639.39437 L1154.61733,1518.74783 L2048,689.177567 L1786.76534,409 L1024,1116.92504 C1024,1116.92504 356.140625,497.736328 261.234664,409 C229.199219,443.951172 0,689.177567 0,689.177567 L893.382668,1518.74783 L1024,1639.39437 Z\"></path>\\n        </svg>\\n    ',\n    lockIcon: '\\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" class=\"icon icon-lock\">\\n            <path d=\"M1792,896V2048H256V896H512V522C512,234,733,0,1024,0s512,234,512,522V896ZM640,896h768V522c0-216-164-394-384-394S640,306,640,522V896Zm1024,128H384v896.00006H1664V1024Z\" />\\n        </svg>\\n    '\n};\n\nexports.default = icons;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvYXNzZXRzL2ljb25zLmpzPzc0NDciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29sb3JzID0ge1xuICAgIGVycm9yOiAnI2IwM2IwMCcsXG4gICAgaW5mb3JtYXRpb25hbDogJyMxYmExZTInLFxuICAgIG90aGVyOiAnI2I1YjViNScsXG4gICAgcmVkaXJlY3Rpb246ICcjZjhhODAwJyxcbiAgICBzdWNjZXNzOiAnIzc4YjI0Yydcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGF0dXNJY29uKHN0YXR1c0NvZGUpIHtcbiAgICBsZXQgcGF0aDtcblxuICAgIGlmIChzdGF0dXNDb2RlIDwgMjAwIHx8IHN0YXR1c0NvZGUgPj0gNDAwKSB7XG4gICAgICAgIHZhciBmaWxsID0gc3RhdHVzQ29kZSA8IDIwMFxuICAgICAgICAgICAgPyBjb2xvcnMuaW5mb3JtYXRpb25hbFxuICAgICAgICAgICAgOiBjb2xvcnMuZXJyb3I7XG4gICAgICAgIHBhdGggPSBgPHBhdGggZD1cIk0xMDIzLDUxMmMyODIuNywwLDUxMiwyMjkuMyw1MTIsNTEycy0yMjkuMyw1MTItNTEyLDUxMnMtNTEyLTIyOS4zLTUxMi01MTJTNzQwLjMsNTEyLDEwMjMsNTEyelwiIGZpbGw9XCIke2ZpbGx9XCI+PC9wYXRoPmA7XG4gICAgfSBlbHNlIGlmIChzdGF0dXNDb2RlIDwgMzAwKSB7XG4gICAgICAgIHBhdGggPSBgPHBhdGggZD1cIk01MTEsNTEySDE1MzVWMTUzNkg1MTFWNTEyWlwiIGZpbGw9XCIke2NvbG9ycy5zdWNjZXNzfVwiPjwvcGF0aD5gO1xuICAgIH0gZWxzZSBpZiAoc3RhdHVzQ29kZSA8IDQwMCkge1xuICAgICAgICBwYXRoID0gYDxwYXRoIGQ9XCJNMTAyNCw1MTJMNTEyLDE1MzZoMTAyNEwxMDI0LDUxMnpcIiBmaWxsPVwiJHtjb2xvcnMucmVkaXJlY3Rpb259XCI+PC9wYXRoPmA7XG4gICAgfVxuXG4gICAgcmV0dXJuIGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDIwNDggMjA0OFwiIGNsYXNzPVwiZ2xpbXBzZS1zdGF0dXMtaWNvblwiPiR7cGF0aH08L3N2Zz5gO1xufVxuXG5jb25zdCBpY29ucyA9IHtcbiAgICBjbGllbnQ6IGBcbiAgICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyMDQ4IDIwNDhcIiBjbGFzcz1cImdsaW1wc2UtYWdlbnQtdHlwZS1pY29uXCI+XG4gICAgICAgICAgICA8cGF0aCBkPVwiTTEwMjQsNzRsOTUwLDk1MGwtOTUwLDk1MEw3NCwxMDI0TDEwMjQsNzR6IE0yNzQsMTAyNGw3NTAsNzUwbDc1MC03NTBsLTc1MC03NTBMMjc0LDEwMjR6XCIgZmlsbD1cIiNFRTg5QTJcIj5cbiAgICAgICAgICAgIDwvcGF0aD5cbiAgICAgICAgPC9zdmc+XG4gICAgYCxcbiAgICBzZXJ2ZXI6IGBcbiAgICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyMDQ4IDIwNDhcIiBjbGFzcz1cImdsaW1wc2UtYWdlbnQtdHlwZS1pY29uXCI+XG4gICAgICAgICAgICA8cGF0aCBkPVwiTTEwMjQsMTc0YzQ2OS44LDAsODUwLDM4MC4yLDg1MCw4NTBzLTM4MC4yLDg1MC04NTAsODUwcy04NTAtMzgwLjItODUwLTg1MFM1NTQuMiwxNzQsMTAyNCwxNzR6IE0xMDI0LDE2NzRjMzU3LjYsMCw2NTAtMjkxLjYsNjUwLTY1MGMwLTM1Ny42LTI5Mi40LTY1MC02NTAtNjUwcy02NTAsMjkyLjQtNjUwLDY1MFM2NjUuNiwxNjc0LDEwMjQsMTY3NHpcIiBmaWxsPVwiIzg2ZDdmNFwiPlxuICAgICAgICAgICAgPC9wYXRoPlxuICAgICAgICA8L3N2Zz5cbiAgICBgLFxuICAgIGVycm9yOiBgXG4gICAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjA0OCAyMDQ4XCIgY2xhc3M9XCJpY29uLWVycm9yXCI+XG4gICAgICAgICAgICA8cGF0aCBkPVwiTTEwMjQsMGM1NjUsMCwxMDI0LDQ1OSwxMDI0LDEwMjRTMTU4OSwyMDQ4LDEwMjQsMjA0OCwwLDE1ODksMCwxMDI0LDQ1OSwwLDEwMjQsMFptMTEzLDEwMjQsMzQyLTM0MkwxMzY2LDU2OSwxMDI0LDkxMSw2ODIsNTY5LDU2OSw2ODJsMzQyLDM0Mkw1NjksMTM2NmwxMTMsMTEzLDM0Mi0zNDIsMzQyLDM0MiwxMTMtMTEzLTM0Mi0zNDJaXCIgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgYCxcbiAgICB3YXJuOiBgXG4gICAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjA0OCAyMDQ4XCIgY2xhc3M9XCJpY29uLXdhcm5cIj5cbiAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTk4NCwxOTg0SDY0TDEwMjQsNjRsOTYwLDE5MjBabS04OTYtMzg0LjAwMDA2SDk2MC4wMDAwNlYxNzI4SDEwODhWMTU5OS45OTk5NFpNMTA4OCwxNDcyVjgzMkg5NjAuMDAwMDZ2NjQwWlwiIC8+XG4gICAgICAgIDwvc3ZnPlxuICAgIGAsXG4gICAgaW5mbzogYFxuICAgICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDIwNDggMjA0OFwiIGNsYXNzPVwiaWNvbi1pbmZvXCI+XG4gICAgICAgICAgICA8cGF0aCBkPVwiTTEwMjQsNjRjNTMwLDAsOTYwLDQzMCw5NjAsOTYwcy00MzAsOTYwLjAwMDA2LTk2MCw5NjAuMDAwMDZTNjQsMTU1NCw2NCwxMDI0LDQ5NCw2NCwxMDI0LDY0Wm02NCw3NjhIOTYwLjAwMDA2djY0MEgxMDg4VjgzMlptMC0yNTZIOTYwLjAwMDA2VjcwNEgxMDg4VjU3NlpcIiAvPlxuICAgICAgICA8L3N2Zz5cbiAgICBgLFxuICAgIGV4cGFuZEFycm93OiBgXG4gICAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjA0OCAyMDQ4XCIgY2xhc3M9XCJpY29uIGljb24tYXJyb3dcIj5cbiAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTAyNCwxNjM5LjM5NDM3IEwxMTU0LjYxNzMzLDE1MTguNzQ3ODMgTDIwNDgsNjg5LjE3NzU2NyBMMTc4Ni43NjUzNCw0MDkgTDEwMjQsMTExNi45MjUwNCBDMTAyNCwxMTE2LjkyNTA0IDM1Ni4xNDA2MjUsNDk3LjczNjMyOCAyNjEuMjM0NjY0LDQwOSBDMjI5LjE5OTIxOSw0NDMuOTUxMTcyIDAsNjg5LjE3NzU2NyAwLDY4OS4xNzc1NjcgTDg5My4zODI2NjgsMTUxOC43NDc4MyBMMTAyNCwxNjM5LjM5NDM3IFpcIj48L3BhdGg+XG4gICAgICAgIDwvc3ZnPlxuICAgIGAsXG4gICAgbG9ja0ljb246IGBcbiAgICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyMDQ4IDIwNDhcIiBjbGFzcz1cImljb24gaWNvbi1sb2NrXCI+XG4gICAgICAgICAgICA8cGF0aCBkPVwiTTE3OTIsODk2VjIwNDhIMjU2Vjg5Nkg1MTJWNTIyQzUxMiwyMzQsNzMzLDAsMTAyNCwwczUxMiwyMzQsNTEyLDUyMlY4OTZaTTY0MCw4OTZoNzY4VjUyMmMwLTIxNi0xNjQtMzk0LTM4NC0zOTRTNjQwLDMwNiw2NDAsNTIyVjg5NlptMTAyNCwxMjhIMzg0djg5Ni4wMDAwNkgxNjY0VjEwMjRaXCIgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgYFxufTtcblxuZXhwb3J0IGRlZmF1bHQgaWNvbnM7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2Fzc2V0cy9pY29ucy5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFRQTtBQVJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUxBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFNQTtBQUtBO0FBS0E7QUFLQTtBQUtBO0FBakNBO0FBQ0E7QUF1Q0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 1 */
/* unknown exports provided */
/* all exports used */
/*!*************************!*\
  !*** ./src/lib/util.js ***!
  \*************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar UriTemplate = __webpack_require__(/*! uri-templates */ 23);\n\nvar hudScriptElement = document.getElementById('__glimpse_hud');\nvar LOCAL_STORAGE_KEY = 'glimpse-hud';\n\nmodule.exports = {\n    toCamelCase: function toCamelCase(value) {\n        return value.replace(camelCaseRegEx, function (match, p1, p2, offset) {\n            if (p2) {\n                return p2.toUpperCase();\n            }\n            return p1.toLowerCase();\n        });\n    },\n    currentRequestId: function currentRequestId() {\n        return hudScriptElement.getAttribute('data-request-id');\n    },\n    resolveClientUrl: function resolveClientUrl(requestId, follow) {\n        var clientTemplate = new UriTemplate(hudScriptElement.getAttribute('data-client-template'));\n\n        return clientTemplate.fill({\n            requestId: requestId,\n            follow: follow,\n            metadataUri: hudScriptElement.getAttribute('data-metadata-template')\n        });\n    },\n    resolveContextSummaryUrl: function resolveContextSummaryUrl(requestId) {\n        var contextTemplate = hudScriptElement.getAttribute('data-context-summary-template');\n\n        var uri = contextTemplate.replace('{contextId}', requestId); // TODO: This should probably be resolved with a URI Template library\n\n        return encodeURI(uri);\n    },\n    isLocalUri: function isLocalUri(uri) {\n        return uri && (!(uri.indexOf('http://') == 0 || uri.indexOf('https://') == 0 || uri.indexOf('//') == 0) || (uri.substring(uri.indexOf('//') + 2, uri.length) + '/').indexOf(window.location.host + '/') == 0);\n    },\n    localGet: function localGet(key, defaultValue) {\n        try {\n            var localState = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n            return localState[key] === undefined ? defaultValue : localState[key];\n        } catch (e) {\n            return defaultValue;\n        }\n    },\n    localSet: function localSet(state, key, value, cb) {\n        state[key] = value;\n\n        try {\n            localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(state));\n        } catch (e) {\n            // do nothing\n        }\n\n        cb && cb();\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvbGliL3V0aWwuanM/M2Y4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgVXJpVGVtcGxhdGUgPSByZXF1aXJlKCd1cmktdGVtcGxhdGVzJyk7XG5cbnZhciBodWRTY3JpcHRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ19fZ2xpbXBzZV9odWQnKTtcbnZhciBMT0NBTF9TVE9SQUdFX0tFWSA9ICdnbGltcHNlLWh1ZCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHRvQ2FtZWxDYXNlOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdmFsdWUucmVwbGFjZShjYW1lbENhc2VSZWdFeCwgZnVuY3Rpb24obWF0Y2gsIHAxLCBwMiwgb2Zmc2V0KSB7XG4gICAgICAgICAgICBpZiAocDIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcDIudG9VcHBlckNhc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBwMS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICB9KTtcbiAgICB9LFxuICAgIGN1cnJlbnRSZXF1ZXN0SWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaHVkU2NyaXB0RWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtcmVxdWVzdC1pZCcpO1xuICAgIH0sXG4gICAgcmVzb2x2ZUNsaWVudFVybDogZnVuY3Rpb24ocmVxdWVzdElkLCBmb2xsb3cpIHtcbiAgICAgICAgdmFyIGNsaWVudFRlbXBsYXRlID0gbmV3IFVyaVRlbXBsYXRlKGh1ZFNjcmlwdEVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLWNsaWVudC10ZW1wbGF0ZScpKTtcblxuICAgICAgICByZXR1cm4gY2xpZW50VGVtcGxhdGUuZmlsbCh7XG4gICAgICAgICAgICByZXF1ZXN0SWQ6IHJlcXVlc3RJZCxcbiAgICAgICAgICAgIGZvbGxvdzogZm9sbG93LFxuICAgICAgICAgICAgbWV0YWRhdGFVcmk6IGh1ZFNjcmlwdEVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLW1ldGFkYXRhLXRlbXBsYXRlJyksXG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgcmVzb2x2ZUNvbnRleHRTdW1tYXJ5VXJsOiBmdW5jdGlvbihyZXF1ZXN0SWQpIHtcbiAgICAgICAgdmFyIGNvbnRleHRUZW1wbGF0ZSA9IGh1ZFNjcmlwdEVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLWNvbnRleHQtc3VtbWFyeS10ZW1wbGF0ZScpO1xuXG4gICAgICAgIHZhciB1cmkgPSBjb250ZXh0VGVtcGxhdGUucmVwbGFjZSgne2NvbnRleHRJZH0nLCByZXF1ZXN0SWQpOyAvLyBUT0RPOiBUaGlzIHNob3VsZCBwcm9iYWJseSBiZSByZXNvbHZlZCB3aXRoIGEgVVJJIFRlbXBsYXRlIGxpYnJhcnlcblxuICAgICAgICByZXR1cm4gZW5jb2RlVVJJKHVyaSk7XG4gICAgfSxcbiAgICBpc0xvY2FsVXJpOiBmdW5jdGlvbih1cmkpIHtcbiAgICAgICAgcmV0dXJuIHVyaSAmJiAoISh1cmkuaW5kZXhPZignaHR0cDovLycpID09IDAgfHwgdXJpLmluZGV4T2YoJ2h0dHBzOi8vJykgPT0gMCB8fCB1cmkuaW5kZXhPZignLy8nKSA9PSAwKSB8fFxuICAgICAgICAgICAgICAgICh1cmkuc3Vic3RyaW5nKHVyaS5pbmRleE9mKCcvLycpICsgMiwgdXJpLmxlbmd0aCkgKyAnLycpLmluZGV4T2Yod2luZG93LmxvY2F0aW9uLmhvc3QgKyAnLycpID09IDApO1xuICAgIH0sXG4gICAgbG9jYWxHZXQ6IGZ1bmN0aW9uKGtleSwgZGVmYXVsdFZhbHVlKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB2YXIgbG9jYWxTdGF0ZSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oTE9DQUxfU1RPUkFHRV9LRVkpKTtcblxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsU3RhdGVba2V5XSA9PT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgPyBkZWZhdWx0VmFsdWVcbiAgICAgICAgICAgICAgICA6IGxvY2FsU3RhdGVba2V5XTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgbG9jYWxTZXQ6IGZ1bmN0aW9uKHN0YXRlLCBrZXksIHZhbHVlLCBjYikge1xuICAgICAgICBzdGF0ZVtrZXldID0gdmFsdWU7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKExPQ0FMX1NUT1JBR0VfS0VZLCBKU09OLnN0cmluZ2lmeShzdGF0ZSkpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAvLyBkbyBub3RoaW5nXG4gICAgICAgIH1cblxuICAgICAgICBjYiAmJiBjYigpO1xuICAgIH1cbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2xpYi91dGlsLmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFyREEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 2 */
/* unknown exports provided */
/* all exports used */
/*!***********************************!*\
  !*** ./src/repository/summary.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar util = __webpack_require__(/*! ../lib/util */ 1);\n\nvar _getPromise = new Promise(function (resolve, reject) {\n    var request = new XMLHttpRequest();\n\n    request.onload = function () {\n        resolve(JSON.parse(this.responseText));\n    };\n\n    request.onerror = function (err) {\n        reject(err);\n    };\n\n    request.open('get', util.resolveContextSummaryUrl(util.currentRequestId()), true);\n    request.send();\n});\n\nmodule.exports = {\n    getPromise: function getPromise() {\n        return _getPromise;\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvcmVwb3NpdG9yeS9zdW1tYXJ5LmpzPzM0ODUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdXRpbCA9IHJlcXVpcmUoJy4uL2xpYi91dGlsJyk7XG5cbmNvbnN0IGdldFByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICBjb25zdCByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICByZXF1ZXN0Lm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXNvbHZlKEpTT04ucGFyc2UodGhpcy5yZXNwb25zZVRleHQpKTtcbiAgICB9XG5cbiAgICByZXF1ZXN0Lm9uZXJyb3IgPSBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgcmVqZWN0KGVycik7XG4gICAgfVxuXG4gICAgcmVxdWVzdC5vcGVuKCdnZXQnLCB1dGlsLnJlc29sdmVDb250ZXh0U3VtbWFyeVVybCh1dGlsLmN1cnJlbnRSZXF1ZXN0SWQoKSksIHRydWUpO1xuICAgIHJlcXVlc3Quc2VuZCgpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldFByb21pc2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZ2V0UHJvbWlzZTtcbiAgICB9XG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9yZXBvc2l0b3J5L3N1bW1hcnkuanMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 3 */
/* unknown exports provided */
/* all exports used */
/*!************************!*\
  !*** ./src/lib/dom.js ***!
  \************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = {\n    hasClass: function hasClass(el, className) {\n        return el.classList ? el.classList.contains(className) : new RegExp('\\\\b' + className + '\\\\b').test(el.className);\n    },\n    addClass: function addClass(el, className) {\n        if (el.classList) {\n            el.classList.add(className);\n        } else if (!module.exports.hasClass(el, className)) {\n            el.className += ' ' + className;\n        }\n    },\n    removeClass: function removeClass(el, className) {\n        if (el.classList) {\n            el.classList.remove(className);\n        } else {\n            el.className = el.className.replace(new RegExp('\\\\b' + className + '\\\\b', 'g'), '');\n        }\n    },\n    createElement: function createElement(html) {\n        var div = document.createElement('div');\n        div.innerHTML = html.trim();\n        return div.firstChild;\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvbGliL2RvbS5qcz83Mjk5Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGhhc0NsYXNzOiBmdW5jdGlvbihlbCwgY2xhc3NOYW1lKSB7XG4gICAgICAgIHJldHVybiBlbC5jbGFzc0xpc3RcbiAgICAgICAgICAgID8gZWwuY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSlcbiAgICAgICAgICAgIDogbmV3IFJlZ0V4cCgnXFxcXGInICsgY2xhc3NOYW1lICsgJ1xcXFxiJykudGVzdChlbC5jbGFzc05hbWUpO1xuICAgIH0sXG4gICAgYWRkQ2xhc3M6IGZ1bmN0aW9uKGVsLCBjbGFzc05hbWUpIHtcbiAgICAgICAgaWYgKGVsLmNsYXNzTGlzdCkge1xuICAgICAgICAgICAgZWwuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKCFtb2R1bGUuZXhwb3J0cy5oYXNDbGFzcyhlbCwgY2xhc3NOYW1lKSkge1xuICAgICAgICAgICAgZWwuY2xhc3NOYW1lICs9ICcgJyArIGNsYXNzTmFtZTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgcmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uKGVsLCBjbGFzc05hbWUpIHtcbiAgICAgICAgaWYgKGVsLmNsYXNzTGlzdCkge1xuICAgICAgICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZWwuY2xhc3NOYW1lID0gZWwuY2xhc3NOYW1lLnJlcGxhY2UobmV3IFJlZ0V4cCgnXFxcXGInICsgY2xhc3NOYW1lICsgJ1xcXFxiJywgJ2cnKSwgJycpO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBjcmVhdGVFbGVtZW50OiBmdW5jdGlvbihodG1sKSB7XG4gICAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgZGl2LmlubmVySFRNTCA9IGh0bWwudHJpbSgpO1xuICAgICAgICByZXR1cm4gZGl2LmZpcnN0Q2hpbGQ7XG4gICAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9saWIvZG9tLmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUExQkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 4 */
/* unknown exports provided */
/* all exports used */
/*!***************************!*\
  !*** ./src/views/open.js ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar util = __webpack_require__(/*! ../lib/util */ 1);\n\nvar icon = '\\n    <svg class=\"glimpse-arrow\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\">\\n        <path class=\"glimpse-arrow-path\" d=\"M1022,2H2046V1026H1918V221L91,2047,1,1957,1827,130H1022V2Z\"/>\\n    </svg>\\n';\n\nmodule.exports = {\n    arrowIcon: icon,\n    render: function render() {\n        var url = util.resolveClientUrl(util.currentRequestId(), true);\n\n        return '\\n            <a target=\"_glimpse\" href=\"' + url + '\" class=\"glimpse-link\">\\n                ' + icon + '\\n                <span>Open in Glimpse</span>\\n            </a>\\n        ';\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvdmlld3Mvb3Blbi5qcz9hYThiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHV0aWwgPSByZXF1aXJlKCcuLi9saWIvdXRpbCcpO1xuXG5jb25zdCBpY29uID0gYFxuICAgIDxzdmcgY2xhc3M9XCJnbGltcHNlLWFycm93XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjA0OCAyMDQ4XCI+XG4gICAgICAgIDxwYXRoIGNsYXNzPVwiZ2xpbXBzZS1hcnJvdy1wYXRoXCIgZD1cIk0xMDIyLDJIMjA0NlYxMDI2SDE5MThWMjIxTDkxLDIwNDcsMSwxOTU3LDE4MjcsMTMwSDEwMjJWMlpcIi8+XG4gICAgPC9zdmc+XG5gO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBhcnJvd0ljb246IGljb24sXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgY29uc3QgdXJsID0gdXRpbC5yZXNvbHZlQ2xpZW50VXJsKHV0aWwuY3VycmVudFJlcXVlc3RJZCgpLCB0cnVlKTtcblxuICAgICAgICByZXR1cm4gYFxuICAgICAgICAgICAgPGEgdGFyZ2V0PVwiX2dsaW1wc2VcIiBocmVmPVwiJHt1cmx9XCIgY2xhc3M9XCJnbGltcHNlLWxpbmtcIj5cbiAgICAgICAgICAgICAgICAke2ljb259XG4gICAgICAgICAgICAgICAgPHNwYW4+T3BlbiBpbiBHbGltcHNlPC9zcGFuPlxuICAgICAgICAgICAgPC9hPlxuICAgICAgICBgO1xuICAgIH1cbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3ZpZXdzL29wZW4uanMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQVhBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 5 */
/* unknown exports provided */
/* all exports used */
/*!***************************!*\
  !*** ./src/views/ajax.js ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar util = __webpack_require__(/*! ../lib/util */ 1);\nvar ajaxProxy = __webpack_require__(/*! ../proxy/ajax */ 12);\nvar dom = __webpack_require__(/*! ../lib/dom */ 3);\nvar arrowIcon = __webpack_require__(/*! ./open */ 4).arrowIcon;\nvar icons = __webpack_require__(/*! ../assets/icons */ 0).default;\nvar statusIcon = __webpack_require__(/*! ../assets/icons */ 0).statusIcon;\n\n/**\n * removeOrigin - function to remove origin from a URL.\n *\n * @param {String} url URL to remove the origin from.\n * @param {String} origin Origin to remove from URL.\n */\nvar removeOrigin = function removeOrigin() {\n    var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.origin;\n\n    if (url.substr(0, origin.length) === origin) {\n        url = url.substr(origin.length, url.length);\n    }\n\n    return url;\n};\n\n/**\n * removeOriginFromUrl - function to remove origin from a URL\n *                       reguarding `http` and `https`.\n *\n * @param {String} url URL to remove the origin from.\n * @param {String} origin Origin to remove from URL.\n */\nvar removeOriginFromUrl = function removeOriginFromUrl() {\n    var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.origin;\n\n    url = url.trim();\n    url = removeOrigin(url, origin);\n    // the first call of the `removeOrigin` makes sure that we stip off the\n    // origin in case the `url` has it the same but different(`https`) protocol\n    // if the protocol is already `https` we use it\n    url = removeOrigin(url, origin.replace(/^http\\:\\/\\//, 'https://'));\n    // same as above but for `http` protocol case. these two calls cover\n    // 4 cases, making sure that we strip the origin regardless\n    // of the protocol differences:\n    // |--------------------------------|\n    // | url protocol | origin protocol |\n    // |--------------------------------|\n    // | http         | http            |\n    // | http         | https           |\n    // | https        | http            |\n    // | https        | https           |\n    // |--------------------------------|\n    url = removeOrigin(url, origin.replace(/^https\\:\\/\\//, 'http://'));\n\n    return url;\n};\n\nvar state = {\n    count: 0,\n    ready: false,\n    preRenderCache: [],\n    summary: {\n        countId: 'glimpse-ajax-count',\n        rowsId: 'glimpse-ajax-rows',\n        timeout: undefined,\n        stack: [],\n        template: rowTemplate,\n        length: -2\n    },\n    popup: {\n        countId: 'glimpse-ajax-popup-count',\n        rowsId: 'glimpse-ajax-popup-rows',\n        timeout: undefined,\n        stack: [],\n        template: rowPopupTemplate,\n        length: 0\n    }\n};\n\nfunction processContentType(type) {\n    return type || '--';\n};\nfunction processSize(size) {\n    return size ? Math.round(size / 1024 * 10) / 10 : '--';\n}\n\n/**\n * getProtocolIcon - function to get icon regarding `URL` protocol.\n *\n * @param  {String} url: URL to get the icon for.\n * @return {String} Icon markup string.\n */\nfunction getProtocolIcon(url) {\n    return (/https\\:\\/\\//.test(url) ? '<span class=\"glimpse-ajax-uri__icon\">' + icons.lockIcon + '</span>' : ''\n    );\n}\n\nfunction rowTemplate(request) {\n    var url = util.resolveClientUrl(request.requestId, false);\n    var uri = removeOriginFromUrl(request.uri);\n\n    return '\\n        <tr class=\"glimpse-ajax-row\">\\n            <td class=\"glimpse-ajax-cell glimpse-section-label\">\\n                ' + request.method + '\\n            </td>\\n            <td class=\"glimpse-ajax-cell glimpse-ajax-uri\" title=\"' + request.uri + '\">\\n                <a class=\"glimpse-anchor\" href=\"' + url + '\" target=\"_glimpse\" title=\"Open \\'' + request.uri + '\\' in Glimpse\">' + arrowIcon + '</a>\\n                ' + getProtocolIcon(request.uri) + ' ' + uri + '\\n            </td>\\n            <td class=\"glimpse-ajax-cell\" data-glimpse-type=\"duration\">\\n                <span class=\"glimpse-time-ms\">' + request.duration + '</span>\\n            </td>\\n        </tr>\\n    ';\n}\nfunction rowPopupTemplate(request) {\n    var url = util.resolveClientUrl(request.requestId, false);\n    var uri = removeOriginFromUrl(request.uri);\n\n    return '\\n        <div class=\"glimpse-ajax-row\">\\n            <div class=\"glimpse-ajax-row-line\">\\n                <span class=\"glimpse-ajax-text\" data-glimpse-type=\"uri\" title=\"' + request.uri + '\">\\n                    <a class=\"glimpse-anchor\" href=\"' + url + '\" target=\"_glimpse\" title=\"Open \\'' + request.uri + '\\' in Glimpse\">' + arrowIcon + '</a>\\n                    <span class=\"glimpse-ajax-text glimpse-ajax-text--uri\" title=\"' + request.uri + '\">\\n                        ' + getProtocolIcon(request.uri) + ' ' + uri + '\\n                    </span>\\n                </span>\\n                <span class=\"glimpse-ajax-text\" data-glimpse-type=\"time\">\\n                    ' + request.time.toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, '$1') + '\\n                </span>\\n            </div>\\n            <div class=\"glimpse-ajax-row-line glimpse-ajax-row-line--secondary\">\\n                <span class=\"glimpse-ajax-text glimpse-label\" data-glimpse-type=\"method\">\\n                    ' + request.method + '\\n                </span>\\n                <span class=\"glimpse-ajax-text\" data-glimpse-type=\"status\">\\n                    ' + statusIcon(request.status) + '\\n                    ' + request.status + ' - ' + request.statusText + '\\n                </span>\\n                <span class=\"glimpse-ajax-text glimpse-size-kb\" data-glimpse-type=\"size\">\\n                    ' + processSize(request.size) + '\\n                </span>\\n                <span class=\"glimpse-ajax-text glimpse-time-ms\" data-glimpse-type=\"duration\">\\n                    ' + request.duration + '\\n                </span>\\n            </div>\\n        </div>\\n    ';\n}\n\nfunction update(request) {\n    state.count++;\n\n    updateCounter(state.summary, state.count);\n    updateCounter(state.popup, state.count);\n\n    updateView(state.summary, request);\n    updateView(state.popup, request);\n}\nfunction updateCounter(details, count) {\n    var counter = document.getElementById(details.countId);\n    if (!counter) {\n        // element does not exist yet\n        return;\n    }\n\n    counter.innerText = count;\n    dom.addClass(counter, 'glimpse-section-value--update');\n    if (details.timeout) {\n        clearTimeout(details.timeout);\n    }\n    details.timeout = setTimeout(function () {\n        dom.removeClass(counter, 'glimpse-section-value--update');\n    }, 2000);\n}\nfunction updateView(details, request) {\n    details.stack = details.stack.slice(details.length).concat(request);\n    document.getElementById(details.rowsId).innerHTML = details.stack.map(details.template).reverse().join('\\n');\n}\n\najaxProxy.registerListener(function (details) {\n    // if we can render the data do so, otherwise save for later\n    if (state.ready) {\n        update(details);\n    } else {\n        state.preRenderCache.push(function () {\n            update(details);\n        });\n    }\n});\n\nmodule.exports = {\n    render: function render() {\n        return '\\n            <div class=\"glimpse-section glimpse-ajax\" id=\"glimpse-ajax\">\\n                <div class=\"glimpse-section-summary\" id=\"glimpse-ajax-summary\">\\n                    <div class=\"glimpse-hud-field\">\\n                        <div class=\"glimpse-hud-field-label\">\\n                            Browser calls\\n                        </div>\\n                        <div class=\"glimpse-hud-field-value\" id=\"glimpse-ajax-count\">\\n                            ' + state.count + '\\n                        </div>\\n                    </div>\\n                    <table class=\"glimpse-ajax-rows\" id=\"glimpse-ajax-rows\"></table>\\n                </div>\\n            </div>\\n        ';\n    },\n    postRender: function postRender() {\n        state.ready = true;\n\n        state.preRenderCache.forEach(function (doTask) {\n            doTask();\n        });\n        state.preRenderCache = undefined;\n    },\n    renderPopup: function renderPopup() {\n        return '\\n            <div class=\"glimpse-hud-popup-section -ajax\">\\n                <div class=\"glimpse-hud-field\">\\n                    <div class=\"glimpse-hud-field-label\" title=\"Browser service calls (fetch/ajax)\">\\n                        ' + icons.client + '\\n                        Browser calls\\n                    </div>\\n                    <div class=\"glimpse-hud-field-value\" id=\"glimpse-ajax-popup-count\">\\n                        ' + state.count + '\\n                    </div>\\n                </div>\\n                <div id=\"glimpse-ajax-popup-rows\">\\n                </div>\\n            </div>\\n        ';\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvdmlld3MvYWpheC5qcz9hMjRhIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHV0aWwgPSByZXF1aXJlKCcuLi9saWIvdXRpbCcpO1xuY29uc3QgYWpheFByb3h5ID0gcmVxdWlyZSgnLi4vcHJveHkvYWpheCcpO1xuY29uc3QgZG9tID0gcmVxdWlyZSgnLi4vbGliL2RvbScpO1xuY29uc3QgYXJyb3dJY29uID0gcmVxdWlyZSgnLi9vcGVuJykuYXJyb3dJY29uO1xuY29uc3QgaWNvbnMgPSByZXF1aXJlKCcuLi9hc3NldHMvaWNvbnMnKS5kZWZhdWx0O1xuY29uc3Qgc3RhdHVzSWNvbiA9IHJlcXVpcmUoJy4uL2Fzc2V0cy9pY29ucycpLnN0YXR1c0ljb247XG5cbi8qKlxuICogcmVtb3ZlT3JpZ2luIC0gZnVuY3Rpb24gdG8gcmVtb3ZlIG9yaWdpbiBmcm9tIGEgVVJMLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgVVJMIHRvIHJlbW92ZSB0aGUgb3JpZ2luIGZyb20uXG4gKiBAcGFyYW0ge1N0cmluZ30gb3JpZ2luIE9yaWdpbiB0byByZW1vdmUgZnJvbSBVUkwuXG4gKi9cbmNvbnN0IHJlbW92ZU9yaWdpbiA9ICh1cmwgPSAnJywgb3JpZ2luID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbikgPT4ge1xuICAgIGlmICh1cmwuc3Vic3RyKDAsIG9yaWdpbi5sZW5ndGgpID09PSBvcmlnaW4pIHtcbiAgICAgICAgdXJsID0gdXJsLnN1YnN0cihvcmlnaW4ubGVuZ3RoLCB1cmwubGVuZ3RoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdXJsO1xufTtcblxuLyoqXG4gKiByZW1vdmVPcmlnaW5Gcm9tVXJsIC0gZnVuY3Rpb24gdG8gcmVtb3ZlIG9yaWdpbiBmcm9tIGEgVVJMXG4gKiAgICAgICAgICAgICAgICAgICAgICAgcmVndWFyZGluZyBgaHR0cGAgYW5kIGBodHRwc2AuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHVybCBVUkwgdG8gcmVtb3ZlIHRoZSBvcmlnaW4gZnJvbS5cbiAqIEBwYXJhbSB7U3RyaW5nfSBvcmlnaW4gT3JpZ2luIHRvIHJlbW92ZSBmcm9tIFVSTC5cbiAqL1xuY29uc3QgcmVtb3ZlT3JpZ2luRnJvbVVybCA9ICh1cmwgPSAnJywgb3JpZ2luID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbikgPT4ge1xuICAgIHVybCA9IHVybC50cmltKCk7XG4gICAgdXJsID0gcmVtb3ZlT3JpZ2luKHVybCwgb3JpZ2luKTtcbiAgICAvLyB0aGUgZmlyc3QgY2FsbCBvZiB0aGUgYHJlbW92ZU9yaWdpbmAgbWFrZXMgc3VyZSB0aGF0IHdlIHN0aXAgb2ZmIHRoZVxuICAgIC8vIG9yaWdpbiBpbiBjYXNlIHRoZSBgdXJsYCBoYXMgaXQgdGhlIHNhbWUgYnV0IGRpZmZlcmVudChgaHR0cHNgKSBwcm90b2NvbFxuICAgIC8vIGlmIHRoZSBwcm90b2NvbCBpcyBhbHJlYWR5IGBodHRwc2Agd2UgdXNlIGl0XG4gICAgdXJsID0gcmVtb3ZlT3JpZ2luKHVybCwgb3JpZ2luLnJlcGxhY2UoL15odHRwXFw6XFwvXFwvLywgJ2h0dHBzOi8vJykpO1xuICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IGZvciBgaHR0cGAgcHJvdG9jb2wgY2FzZS4gdGhlc2UgdHdvIGNhbGxzIGNvdmVyXG4gICAgLy8gNCBjYXNlcywgbWFraW5nIHN1cmUgdGhhdCB3ZSBzdHJpcCB0aGUgb3JpZ2luIHJlZ2FyZGxlc3NcbiAgICAvLyBvZiB0aGUgcHJvdG9jb2wgZGlmZmVyZW5jZXM6XG4gICAgLy8gfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfFxuICAgIC8vIHwgdXJsIHByb3RvY29sIHwgb3JpZ2luIHByb3RvY29sIHxcbiAgICAvLyB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18XG4gICAgLy8gfCBodHRwICAgICAgICAgfCBodHRwICAgICAgICAgICAgfFxuICAgIC8vIHwgaHR0cCAgICAgICAgIHwgaHR0cHMgICAgICAgICAgIHxcbiAgICAvLyB8IGh0dHBzICAgICAgICB8IGh0dHAgICAgICAgICAgICB8XG4gICAgLy8gfCBodHRwcyAgICAgICAgfCBodHRwcyAgICAgICAgICAgfFxuICAgIC8vIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXxcbiAgICB1cmwgPSByZW1vdmVPcmlnaW4odXJsLCBvcmlnaW4ucmVwbGFjZSgvXmh0dHBzXFw6XFwvXFwvLywgJ2h0dHA6Ly8nKSk7XG5cbiAgICByZXR1cm4gdXJsO1xufTtcblxuY29uc3Qgc3RhdGUgPSB7XG4gICAgY291bnQ6IDAsXG4gICAgcmVhZHk6IGZhbHNlLFxuICAgIHByZVJlbmRlckNhY2hlOiBbXSxcbiAgICBzdW1tYXJ5OiB7XG4gICAgICAgIGNvdW50SWQ6ICdnbGltcHNlLWFqYXgtY291bnQnLFxuICAgICAgICByb3dzSWQ6ICdnbGltcHNlLWFqYXgtcm93cycsXG4gICAgICAgIHRpbWVvdXQ6IHVuZGVmaW5lZCxcbiAgICAgICAgc3RhY2s6IFtdLFxuICAgICAgICB0ZW1wbGF0ZTogcm93VGVtcGxhdGUsXG4gICAgICAgIGxlbmd0aDogLTJcbiAgICB9LFxuICAgIHBvcHVwOiB7XG4gICAgICAgIGNvdW50SWQ6ICdnbGltcHNlLWFqYXgtcG9wdXAtY291bnQnLFxuICAgICAgICByb3dzSWQ6ICdnbGltcHNlLWFqYXgtcG9wdXAtcm93cycsXG4gICAgICAgIHRpbWVvdXQ6IHVuZGVmaW5lZCxcbiAgICAgICAgc3RhY2s6IFtdLFxuICAgICAgICB0ZW1wbGF0ZTogcm93UG9wdXBUZW1wbGF0ZSxcbiAgICAgICAgbGVuZ3RoOiAwXG4gICAgfVxufTtcblxuZnVuY3Rpb24gcHJvY2Vzc0NvbnRlbnRUeXBlKHR5cGUpIHtcbiAgICByZXR1cm4gdHlwZSB8fCAnLS0nO1xufTtcbmZ1bmN0aW9uIHByb2Nlc3NTaXplKHNpemUpIHtcbiAgICByZXR1cm4gc2l6ZSA/IChNYXRoLnJvdW5kKChzaXplIC8gMTAyNCkgKiAxMCkgLyAxMCkgOiAnLS0nO1xufVxuXG4vKipcbiAqIGdldFByb3RvY29sSWNvbiAtIGZ1bmN0aW9uIHRvIGdldCBpY29uIHJlZ2FyZGluZyBgVVJMYCBwcm90b2NvbC5cbiAqXG4gKiBAcGFyYW0gIHtTdHJpbmd9IHVybDogVVJMIHRvIGdldCB0aGUgaWNvbiBmb3IuXG4gKiBAcmV0dXJuIHtTdHJpbmd9IEljb24gbWFya3VwIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gZ2V0UHJvdG9jb2xJY29uKHVybDogc3RyaW5nKSB7XG4gICAgcmV0dXJuICgvaHR0cHNcXDpcXC9cXC8vKS50ZXN0KHVybClcbiAgICAgICAgPyBgPHNwYW4gY2xhc3M9XCJnbGltcHNlLWFqYXgtdXJpX19pY29uXCI+JHtpY29ucy5sb2NrSWNvbn08L3NwYW4+YFxuICAgICAgICA6ICcnO1xufVxuXG5mdW5jdGlvbiByb3dUZW1wbGF0ZShyZXF1ZXN0KSB7XG4gICAgY29uc3QgdXJsID0gdXRpbC5yZXNvbHZlQ2xpZW50VXJsKHJlcXVlc3QucmVxdWVzdElkLCBmYWxzZSk7XG4gICAgY29uc3QgdXJpID0gcmVtb3ZlT3JpZ2luRnJvbVVybChyZXF1ZXN0LnVyaSk7XG5cbiAgICByZXR1cm4gYFxuICAgICAgICA8dHIgY2xhc3M9XCJnbGltcHNlLWFqYXgtcm93XCI+XG4gICAgICAgICAgICA8dGQgY2xhc3M9XCJnbGltcHNlLWFqYXgtY2VsbCBnbGltcHNlLXNlY3Rpb24tbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAke3JlcXVlc3QubWV0aG9kfVxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzcz1cImdsaW1wc2UtYWpheC1jZWxsIGdsaW1wc2UtYWpheC11cmlcIiB0aXRsZT1cIiR7cmVxdWVzdC51cml9XCI+XG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJnbGltcHNlLWFuY2hvclwiIGhyZWY9XCIke3VybH1cIiB0YXJnZXQ9XCJfZ2xpbXBzZVwiIHRpdGxlPVwiT3BlbiAnJHtyZXF1ZXN0LnVyaX0nIGluIEdsaW1wc2VcIj4ke2Fycm93SWNvbn08L2E+XG4gICAgICAgICAgICAgICAgJHtnZXRQcm90b2NvbEljb24ocmVxdWVzdC51cmkpfSAke3VyaX1cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8dGQgY2xhc3M9XCJnbGltcHNlLWFqYXgtY2VsbFwiIGRhdGEtZ2xpbXBzZS10eXBlPVwiZHVyYXRpb25cIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImdsaW1wc2UtdGltZS1tc1wiPiR7cmVxdWVzdC5kdXJhdGlvbn08L3NwYW4+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICA8L3RyPlxuICAgIGA7XG59XG5mdW5jdGlvbiByb3dQb3B1cFRlbXBsYXRlKHJlcXVlc3QpIHtcbiAgICBjb25zdCB1cmwgPSB1dGlsLnJlc29sdmVDbGllbnRVcmwocmVxdWVzdC5yZXF1ZXN0SWQsIGZhbHNlKTtcbiAgICBjb25zdCB1cmkgPSByZW1vdmVPcmlnaW5Gcm9tVXJsKHJlcXVlc3QudXJpKTtcblxuICAgIHJldHVybiBgXG4gICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWFqYXgtcm93XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1hamF4LXJvdy1saW5lXCI+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJnbGltcHNlLWFqYXgtdGV4dFwiIGRhdGEtZ2xpbXBzZS10eXBlPVwidXJpXCIgdGl0bGU9XCIke3JlcXVlc3QudXJpfVwiPlxuICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImdsaW1wc2UtYW5jaG9yXCIgaHJlZj1cIiR7dXJsfVwiIHRhcmdldD1cIl9nbGltcHNlXCIgdGl0bGU9XCJPcGVuICcke3JlcXVlc3QudXJpfScgaW4gR2xpbXBzZVwiPiR7YXJyb3dJY29ufTwvYT5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJnbGltcHNlLWFqYXgtdGV4dCBnbGltcHNlLWFqYXgtdGV4dC0tdXJpXCIgdGl0bGU9XCIke3JlcXVlc3QudXJpfVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgJHtnZXRQcm90b2NvbEljb24ocmVxdWVzdC51cmkpfSAke3VyaX1cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImdsaW1wc2UtYWpheC10ZXh0XCIgZGF0YS1nbGltcHNlLXR5cGU9XCJ0aW1lXCI+XG4gICAgICAgICAgICAgICAgICAgICR7cmVxdWVzdC50aW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAudG9UaW1lU3RyaW5nKClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8uKihcXGR7Mn06XFxkezJ9OlxcZHsyfSkuKi8sICckMScpfVxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2UtYWpheC1yb3ctbGluZSBnbGltcHNlLWFqYXgtcm93LWxpbmUtLXNlY29uZGFyeVwiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZ2xpbXBzZS1hamF4LXRleHQgZ2xpbXBzZS1sYWJlbFwiIGRhdGEtZ2xpbXBzZS10eXBlPVwibWV0aG9kXCI+XG4gICAgICAgICAgICAgICAgICAgICR7cmVxdWVzdC5tZXRob2R9XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZ2xpbXBzZS1hamF4LXRleHRcIiBkYXRhLWdsaW1wc2UtdHlwZT1cInN0YXR1c1wiPlxuICAgICAgICAgICAgICAgICAgICAke3N0YXR1c0ljb24ocmVxdWVzdC5zdGF0dXMpfVxuICAgICAgICAgICAgICAgICAgICAke3JlcXVlc3Quc3RhdHVzfSAtICR7cmVxdWVzdC5zdGF0dXNUZXh0fVxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImdsaW1wc2UtYWpheC10ZXh0IGdsaW1wc2Utc2l6ZS1rYlwiIGRhdGEtZ2xpbXBzZS10eXBlPVwic2l6ZVwiPlxuICAgICAgICAgICAgICAgICAgICAke3Byb2Nlc3NTaXplKHJlcXVlc3Quc2l6ZSl9XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZ2xpbXBzZS1hamF4LXRleHQgZ2xpbXBzZS10aW1lLW1zXCIgZGF0YS1nbGltcHNlLXR5cGU9XCJkdXJhdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICAke3JlcXVlc3QuZHVyYXRpb259XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIGA7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZShyZXF1ZXN0KSB7XG4gICAgc3RhdGUuY291bnQrKztcblxuICAgIHVwZGF0ZUNvdW50ZXIoc3RhdGUuc3VtbWFyeSwgc3RhdGUuY291bnQpO1xuICAgIHVwZGF0ZUNvdW50ZXIoc3RhdGUucG9wdXAsIHN0YXRlLmNvdW50KTtcblxuICAgIHVwZGF0ZVZpZXcoc3RhdGUuc3VtbWFyeSwgcmVxdWVzdCk7XG4gICAgdXBkYXRlVmlldyhzdGF0ZS5wb3B1cCwgcmVxdWVzdCk7XG59XG5mdW5jdGlvbiB1cGRhdGVDb3VudGVyKGRldGFpbHMsIGNvdW50KSB7XG4gICAgdmFyIGNvdW50ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkZXRhaWxzLmNvdW50SWQpO1xuICAgIGlmICghY291bnRlcikge1xuICAgICAgICAvLyBlbGVtZW50IGRvZXMgbm90IGV4aXN0IHlldFxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIGNvdW50ZXIuaW5uZXJUZXh0ID0gY291bnQ7XG4gICAgZG9tLmFkZENsYXNzKGNvdW50ZXIsICdnbGltcHNlLXNlY3Rpb24tdmFsdWUtLXVwZGF0ZScpO1xuICAgIGlmIChkZXRhaWxzLnRpbWVvdXQpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KGRldGFpbHMudGltZW91dCk7XG4gICAgfVxuICAgIGRldGFpbHMudGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGRvbS5yZW1vdmVDbGFzcyhjb3VudGVyLCAnZ2xpbXBzZS1zZWN0aW9uLXZhbHVlLS11cGRhdGUnKTtcbiAgICB9LCAyMDAwKTtcbn1cbmZ1bmN0aW9uIHVwZGF0ZVZpZXcoZGV0YWlscywgcmVxdWVzdCkge1xuICAgIGRldGFpbHMuc3RhY2sgPSBkZXRhaWxzLnN0YWNrXG4gICAgICAgIC5zbGljZShkZXRhaWxzLmxlbmd0aClcbiAgICAgICAgLmNvbmNhdChyZXF1ZXN0KTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkZXRhaWxzLnJvd3NJZCkuaW5uZXJIVE1MID0gZGV0YWlscy5zdGFja1xuICAgICAgICAubWFwKGRldGFpbHMudGVtcGxhdGUpXG4gICAgICAgIC5yZXZlcnNlKClcbiAgICAgICAgLmpvaW4oJ1xcbicpO1xufVxuXG5hamF4UHJveHkucmVnaXN0ZXJMaXN0ZW5lcihmdW5jdGlvbihkZXRhaWxzKSB7XG4gICAgLy8gaWYgd2UgY2FuIHJlbmRlciB0aGUgZGF0YSBkbyBzbywgb3RoZXJ3aXNlIHNhdmUgZm9yIGxhdGVyXG4gICAgaWYgKHN0YXRlLnJlYWR5KSB7XG4gICAgICAgIHVwZGF0ZShkZXRhaWxzKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHN0YXRlLnByZVJlbmRlckNhY2hlLnB1c2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB1cGRhdGUoZGV0YWlscyk7XG4gICAgICAgIH0pO1xuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2Utc2VjdGlvbiBnbGltcHNlLWFqYXhcIiBpZD1cImdsaW1wc2UtYWpheFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLXNlY3Rpb24tc3VtbWFyeVwiIGlkPVwiZ2xpbXBzZS1hamF4LXN1bW1hcnlcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2UtaHVkLWZpZWxkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1odWQtZmllbGQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBCcm93c2VyIGNhbGxzXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZC12YWx1ZVwiIGlkPVwiZ2xpbXBzZS1hamF4LWNvdW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHtzdGF0ZS5jb3VudH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwiZ2xpbXBzZS1hamF4LXJvd3NcIiBpZD1cImdsaW1wc2UtYWpheC1yb3dzXCI+PC90YWJsZT5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuICAgIH0sXG4gICAgcG9zdFJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0YXRlLnJlYWR5ID0gdHJ1ZTtcblxuICAgICAgICBzdGF0ZS5wcmVSZW5kZXJDYWNoZS5mb3JFYWNoKGZ1bmN0aW9uKGRvVGFzaykge1xuICAgICAgICAgICAgZG9UYXNrKCk7XG4gICAgICAgIH0pO1xuICAgICAgICBzdGF0ZS5wcmVSZW5kZXJDYWNoZSA9IHVuZGVmaW5lZDtcbiAgICB9LFxuICAgIHJlbmRlclBvcHVwOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1wb3B1cC1zZWN0aW9uIC1hamF4XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2UtaHVkLWZpZWxkXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZC1sYWJlbFwiIHRpdGxlPVwiQnJvd3NlciBzZXJ2aWNlIGNhbGxzIChmZXRjaC9hamF4KVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgJHtpY29ucy5jbGllbnR9XG4gICAgICAgICAgICAgICAgICAgICAgICBCcm93c2VyIGNhbGxzXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1odWQtZmllbGQtdmFsdWVcIiBpZD1cImdsaW1wc2UtYWpheC1wb3B1cC1jb3VudFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgJHtzdGF0ZS5jb3VudH1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBpZD1cImdsaW1wc2UtYWpheC1wb3B1cC1yb3dzXCI+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYDtcbiAgICB9XG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy92aWV3cy9hamF4LmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBWkE7QUFDQTtBQXFCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWdDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFlQTtBQTFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 6 */
/* unknown exports provided */
/* all exports used */
/*!***************************!*\
  !*** ./src/views/data.js ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar dom = __webpack_require__(/*! ../lib/dom */ 3);\nvar summaryRepository = __webpack_require__(/*! ../repository/summary */ 2);\nvar icons = __webpack_require__(/*! ../assets/icons */ 0).default;\nvar statusIcon = __webpack_require__(/*! ../assets/icons */ 0).statusIcon;\n\nvar supportedStatusCodes = ['200', '400', '500'];\nvar supportedOperationCategories = ['Create', 'Read', 'Update', 'Delete', 'Other'];\n\nfunction processType(summary) {\n    return {\n        total: summary.totalCount,\n        time: Math.round(summary.totalTime)\n    };\n}\nfunction process(requestSummary) {\n    var webServicesData = requestSummary.summary.server.webServices;\n    var dataStoreData = requestSummary.summary.server.dataStore;\n\n    // summary\n    var result = {};\n    result.webServices = processType(webServicesData);\n    result.dataStore = processType(dataStoreData);\n    result.summary = {\n        total: result.webServices.total + result.dataStore.total,\n        time: result.webServices.time + result.dataStore.time\n    };\n\n    // web services\n    var statusCodes = result.webServices.statusCodes = {};\n    webServicesData.listing.forEach(function (item) {\n        var statusCodeGroup = (parseInt(item.statusCode / 100) * 100).toString();\n        if (!statusCodes[statusCodeGroup]) {\n            statusCodes[statusCodeGroup] = 0;\n        }\n        statusCodes[statusCodeGroup]++;\n    });\n\n    // data store\n    var operationCategories = result.dataStore.operationCategories = {};\n    dataStoreData.listing.forEach(function (item) {\n        var operationCategory = item.operationCategory.toLowerCase();\n        if (!operationCategories[operationCategory]) {\n            operationCategories[operationCategory] = 0;\n        }\n        operationCategories[operationCategory]++;\n    });\n\n    return result;\n}\n\nfunction update(model) {\n    updateValue('glimpse-data-summary-value', model.summary);\n    updateValue('glimpse-data-popup-summary-value', model.summary);\n    updateValue('glimpse-data-popup-webServices-value', model.webServices);\n    updateValue('glimpse-data-popup-dataStore-value', model.dataStore);\n\n    updateListingWebServices('glimpse-data-popup-webServices-subvalue', model.webServices.statusCodes);\n    updateListingDataStore('glimpse-data-popup-dataStore-subvalue', model.dataStore.operationCategories);\n}\nfunction updateValue(target, summary) {\n    var element = document.getElementById(target);\n\n    if (!element) {\n        // element does not exist yet\n        return;\n    }\n\n    var content = summary.total;\n    if (summary.total > 0) {\n        dom.addClass(element, 'glimpse-time-ms');\n\n        content += ' &middot; ' + summary.time;\n    }\n    element.innerHTML = content;\n}\nfunction updateListingWebServices(target, statusCodes) {\n    updateCoreListing(target, Object.assign({}, statusCodes), supportedStatusCodes, true);\n}\nfunction updateListingDataStore(target, operationCategories) {\n    updateCoreListing(target, Object.assign({}, operationCategories), supportedOperationCategories, false);\n}\nfunction updateCoreListing(target, data, supportedRecords, isStatusCode) {\n    // run through supported status codes so order is maintained\n    var content = '';\n    supportedRecords.forEach(function (record) {\n        var recordLower = record.toLowerCase();\n        var prefix = isStatusCode ? statusIcon(record) : '';\n        var suffix = isStatusCode ? 's' : '';\n        if (data[recordLower]) {\n            content += '<span>' + data[recordLower] + ' &middot; ' + prefix + record + suffix + '</span>';\n            delete data[recordLower];\n        }\n    });\n\n    // process the remaining items\n    var otherCount = Object.keys(data).reduce(function (acc, key) {\n        return acc + data[key];\n    }, 0);\n\n    if (otherCount > 0) {\n        content += '<span>' + otherCount + ' &middot; Others</span>';\n    }\n\n    var targetElement = document.getElementById(target);\n    if (!targetElement) {\n        // element does not exist yet\n        return;\n    }\n\n    if (content.length > 0) {\n        targetElement.innerHTML = content + '<div></div>';\n    } else {\n        targetElement.remove();\n    }\n}\n\nmodule.exports = {\n    preInit: function preInit(initPromise) {\n        Promise.all([summaryRepository.getPromise(), initPromise]).then(function (values) {\n            var requestSummary = values[0];\n            var model = process(requestSummary);\n            update(model);\n        });\n    },\n    render: function render() {\n        return '\\n            <div class=\"glimpse-section glimpse-data\">\\n                <div class=\"glimpse-section-summary\">\\n                    <div class=\"glimpse-hud-field\">\\n                        <div class=\"glimpse-hud-field-label\">\\n                            Server calls\\n                        </div>\\n                        <div class=\"glimpse-hud-field-value\" id=\"glimpse-data-summary-value\">\\n                            --\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        ';\n    },\n    renderPopup: function renderPopup() {\n        return '\\n            <div class=\"glimpse-hud-popup-section\">\\n                <div class=\"glimpse-hud-field\">\\n                    <div class=\"glimpse-hud-field-label\">\\n                        ' + icons.server + '\\n                        Server calls\\n                    </div>\\n                    <div class=\"glimpse-hud-field-value\" id=\"glimpse-data-popup-summary-value\">\\n                        --\\n                    </div>\\n                    <div class=\"glimpse-hud-field\">\\n                        <div class=\"glimpse-hud-field-label\">Web services</div>\\n                        <div class=\"glimpse-hud-field-value\" id=\"glimpse-data-popup-webServices-value\">\\n                            --\\n                        </div>\\n                        <div class=\"glimpse-hud-field-listing\" id=\"glimpse-data-popup-webServices-subvalue\"></div>\\n                    </div>\\n                    <div class=\"glimpse-hud-field\">\\n                        <div class=\"glimpse-hud-field-label\">Data access</div>\\n                        <div class=\"glimpse-hud-field-value\" id=\"glimpse-data-popup-dataStore-value\">\\n                            --\\n                        </div>\\n                        <div class=\"glimpse-hud-field-listing\" id=\"glimpse-data-popup-dataStore-subvalue\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        ';\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 7 */
/* unknown exports provided */
/* all exports used */
/*!*****************************************!*\
  !*** ./src/views/expand-button-view.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar icons = __webpack_require__(/*! ../assets/icons */ 0).default;\n\nmodule.exports = {\n    render: function render() {\n        return '\\n            <div class=\"glimpse-section glimpse-expand-button\" id=\"js-glimpse-expand-button\" title=\"expand\">\\n              ' + icons.expandArrow + '\\n            </div>\\n        ';\n    },\n    renderPopup: function renderPopup() {\n        return '\\n            <div class=\"glimpse-hud-popup-section glimpse-hud-popup-section--arrow\" id=\"js-glimpse-collapse-button\" title=\"collapse\">\\n              ' + icons.expandArrow + '\\n            </div>\\n        ';\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvdmlld3MvZXhwYW5kLWJ1dHRvbi12aWV3LmpzP2I4MWUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaWNvbnMgPSByZXF1aXJlKCcuLi9hc3NldHMvaWNvbnMnKS5kZWZhdWx0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2Utc2VjdGlvbiBnbGltcHNlLWV4cGFuZC1idXR0b25cIiBpZD1cImpzLWdsaW1wc2UtZXhwYW5kLWJ1dHRvblwiIHRpdGxlPVwiZXhwYW5kXCI+XG4gICAgICAgICAgICAgICR7aWNvbnMuZXhwYW5kQXJyb3d9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYDtcbiAgICB9LFxuICAgIHJlbmRlclBvcHVwOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1wb3B1cC1zZWN0aW9uIGdsaW1wc2UtaHVkLXBvcHVwLXNlY3Rpb24tLWFycm93XCIgaWQ9XCJqcy1nbGltcHNlLWNvbGxhcHNlLWJ1dHRvblwiIHRpdGxlPVwiY29sbGFwc2VcIj5cbiAgICAgICAgICAgICAgJHtpY29ucy5leHBhbmRBcnJvd31cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuICAgIH1cbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3ZpZXdzL2V4cGFuZC1idXR0b24tdmlldy5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBS0E7QUFkQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 8 */
/* unknown exports provided */
/* all exports used */
/*!***************************!*\
  !*** ./src/views/logs.js ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar dom = __webpack_require__(/*! ../lib/dom */ 3);\nvar consoleProxy = __webpack_require__(/*! ../proxy/console */ 13);\nvar summaryRepository = __webpack_require__(/*! ../repository/summary */ 2);\nvar icons = __webpack_require__(/*! ../assets/icons */ 0).default;\n\nvar supportedLevels = ['error', 'warn', 'info'];\nvar state = {\n    data: {\n        server: defaultDataState(),\n        browser: defaultDataState()\n    },\n    ready: false,\n    preRenderCache: []\n};\n\nfunction defaultDataState() {\n    return {\n        error: 0,\n        warn: 0,\n        info: 0\n    };\n}\n\nfunction updateServer(requestDetails) {\n    var serverData = state.data.server;\n    var logSummary = requestDetails.summary.server.logs;\n\n    serverData.error = logSummary.totalErrorCount;\n    serverData.warn = logSummary.totalWarnCount;\n    serverData.info = logSummary.totalInfoCount;\n\n    updateSummary();\n    updateView(serverData, 'glimpse-logs-popup-server-value');\n}\nfunction updateBrowser(log) {\n    var level = log.method;\n    if (supportedLevels.indexOf(level) > -1) {\n        var browserData = state.data.browser;\n        browserData[level]++;\n\n        updateSummary();\n        updateView(browserData, 'glimpse-logs-popup-browser-value');\n    }\n}\nfunction updateSummary() {\n    var serverData = state.data.server;\n    var browserData = state.data.browser;\n\n    var summaryData = {\n        error: serverData.error + browserData.error,\n        warn: serverData.warn + browserData.warn,\n        info: serverData.info + browserData.info\n    };\n\n    updateView(summaryData, 'glimpse-logs-count');\n    updateView(summaryData, 'glimpse-logs-popup-summary-value');\n}\nfunction updateView(data, target) {\n    var content = '\\n        <span' + iconSectionHasValueClass(data.error) + '>' + icons.error + ' ' + data.error + '</span>\\n        <span' + iconSectionHasValueClass(data.warn) + '>' + icons.warn + ' ' + data.warn + '</span>\\n        <span' + iconSectionHasValueClass(data.info) + '>' + icons.info + ' ' + data.info + '</span>\\n    ';\n\n    document.getElementById(target).innerHTML = content;\n}\nfunction iconSectionHasValueClass(total) {\n    return total > 0 ? ' class=\"has-value\"' : '';\n}\n\nconsoleProxy.registerListener(function (details) {\n    // if we can render the data do so, otherwise save for later\n    if (state.ready) {\n        updateBrowser(details);\n    } else {\n        state.preRenderCache.push(function () {\n            updateBrowser(details);\n        });\n    }\n});\n\nmodule.exports = {\n    render: function render() {\n        return '\\n            <div class=\"glimpse-section glimpse-logs\" id=\"glimpse-logs\">\\n                <div class=\"glimpse-section-summary\" id=\"glimpse-logs-summary\">\\n                    <div class=\"glimpse-hud-field\">\\n                        <div class=\"glimpse-hud-field-label\">\\n                            Logs\\n                        </div>\\n                        <div class=\"glimpse-hud-field-value\" id=\"glimpse-logs-count\">\\n                            --\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        ';\n    },\n    postRender: function postRender() {\n        state.ready = true;\n\n        // run through the browser logs if we have any\n        updateView(state.data.browser, 'glimpse-logs-popup-browser-value');\n        state.preRenderCache.forEach(function (doTask) {\n            doTask();\n        });\n        state.preRenderCache = undefined;\n\n        // when request summary is ready run through the server logs if we have any\n        summaryRepository.getPromise().then(function (requestDetails) {\n            updateServer(requestDetails);\n        });\n    },\n    renderPopup: function renderPopup() {\n        return '\\n            <div class=\"glimpse-hud-popup-section glimpse-logs\">\\n                <div class=\"glimpse-hud-field\">\\n                    <div class=\"glimpse-hud-field-label\">\\n                        Logs\\n                    </div>\\n                    <div class=\"glimpse-hud-field-value\" id=\"glimpse-logs-popup-summary-value\">\\n                        --\\n                    </div>\\n                    <div class=\"glimpse-hud-field\">\\n                        <div class=\"glimpse-hud-field-label\">\\n                            Server logs\\n                        </div>\\n                        <div class=\"glimpse-hud-field-value\" id=\"glimpse-logs-popup-server-value\">\\n                            --\\n                        </div>\\n                    </div>\\n                    <div class=\"glimpse-hud-field\">\\n                        <div class=\"glimpse-hud-field-label\">\\n                            Browser logs\\n                        </div>\\n                        <div class=\"glimpse-hud-field-value\" id=\"glimpse-logs-popup-browser-value\">\\n                            --\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        ';\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvdmlld3MvbG9ncy5qcz9iODMzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRvbSA9IHJlcXVpcmUoJy4uL2xpYi9kb20nKTtcbmNvbnN0IGNvbnNvbGVQcm94eSA9IHJlcXVpcmUoJy4uL3Byb3h5L2NvbnNvbGUnKTtcbmNvbnN0IHN1bW1hcnlSZXBvc2l0b3J5ID0gcmVxdWlyZSgnLi4vcmVwb3NpdG9yeS9zdW1tYXJ5Jyk7XG5jb25zdCBpY29ucyA9IHJlcXVpcmUoJy4uL2Fzc2V0cy9pY29ucycpLmRlZmF1bHQ7XG5cbmNvbnN0IHN1cHBvcnRlZExldmVscyA9IFsgJ2Vycm9yJywgJ3dhcm4nLCAnaW5mbycgXTtcbmNvbnN0IHN0YXRlID0ge1xuICAgIGRhdGE6IHtcbiAgICAgICAgc2VydmVyOiBkZWZhdWx0RGF0YVN0YXRlKCksXG4gICAgICAgIGJyb3dzZXI6IGRlZmF1bHREYXRhU3RhdGUoKVxuICAgIH0sXG4gICAgcmVhZHk6IGZhbHNlLFxuICAgIHByZVJlbmRlckNhY2hlOiBbXVxufTtcblxuZnVuY3Rpb24gZGVmYXVsdERhdGFTdGF0ZSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBlcnJvcjogMCxcbiAgICAgICAgd2FybjogMCxcbiAgICAgICAgaW5mbzogMFxuICAgIH07XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZVNlcnZlcihyZXF1ZXN0RGV0YWlscykge1xuICAgIGNvbnN0IHNlcnZlckRhdGEgPSBzdGF0ZS5kYXRhLnNlcnZlcjtcbiAgICBjb25zdCBsb2dTdW1tYXJ5ID0gcmVxdWVzdERldGFpbHMuc3VtbWFyeS5zZXJ2ZXIubG9ncztcblxuICAgIHNlcnZlckRhdGEuZXJyb3IgPSBsb2dTdW1tYXJ5LnRvdGFsRXJyb3JDb3VudDtcbiAgICBzZXJ2ZXJEYXRhLndhcm4gPSBsb2dTdW1tYXJ5LnRvdGFsV2FybkNvdW50O1xuICAgIHNlcnZlckRhdGEuaW5mbyA9IGxvZ1N1bW1hcnkudG90YWxJbmZvQ291bnQ7XG5cbiAgICB1cGRhdGVTdW1tYXJ5KCk7XG4gICAgdXBkYXRlVmlldyhzZXJ2ZXJEYXRhLCAnZ2xpbXBzZS1sb2dzLXBvcHVwLXNlcnZlci12YWx1ZScpO1xufVxuZnVuY3Rpb24gdXBkYXRlQnJvd3Nlcihsb2cpIHtcbiAgICBjb25zdCBsZXZlbCA9IGxvZy5tZXRob2Q7XG4gICAgaWYgKHN1cHBvcnRlZExldmVscy5pbmRleE9mKGxldmVsKSA+IC0xKSB7XG4gICAgICAgIGNvbnN0IGJyb3dzZXJEYXRhID0gc3RhdGUuZGF0YS5icm93c2VyO1xuICAgICAgICBicm93c2VyRGF0YVtsZXZlbF0rKztcblxuICAgICAgICB1cGRhdGVTdW1tYXJ5KCk7XG4gICAgICAgIHVwZGF0ZVZpZXcoYnJvd3NlckRhdGEsICdnbGltcHNlLWxvZ3MtcG9wdXAtYnJvd3Nlci12YWx1ZScpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHVwZGF0ZVN1bW1hcnkoKSB7XG4gICAgY29uc3Qgc2VydmVyRGF0YSA9IHN0YXRlLmRhdGEuc2VydmVyO1xuICAgIGNvbnN0IGJyb3dzZXJEYXRhID0gc3RhdGUuZGF0YS5icm93c2VyO1xuXG4gICAgY29uc3Qgc3VtbWFyeURhdGEgPSB7XG4gICAgICAgIGVycm9yOiBzZXJ2ZXJEYXRhLmVycm9yICsgYnJvd3NlckRhdGEuZXJyb3IsXG4gICAgICAgIHdhcm46IHNlcnZlckRhdGEud2FybiArIGJyb3dzZXJEYXRhLndhcm4sXG4gICAgICAgIGluZm86IHNlcnZlckRhdGEuaW5mbyArIGJyb3dzZXJEYXRhLmluZm8sXG4gICAgfTtcblxuICAgIHVwZGF0ZVZpZXcoc3VtbWFyeURhdGEsICdnbGltcHNlLWxvZ3MtY291bnQnKTtcbiAgICB1cGRhdGVWaWV3KHN1bW1hcnlEYXRhLCAnZ2xpbXBzZS1sb2dzLXBvcHVwLXN1bW1hcnktdmFsdWUnKTtcbn1cbmZ1bmN0aW9uIHVwZGF0ZVZpZXcoZGF0YSwgdGFyZ2V0KSB7XG4gICAgY29uc3QgY29udGVudCA9IGBcbiAgICAgICAgPHNwYW4ke2ljb25TZWN0aW9uSGFzVmFsdWVDbGFzcyhkYXRhLmVycm9yKX0+JHtpY29ucy5lcnJvcn0gJHtkYXRhLmVycm9yfTwvc3Bhbj5cbiAgICAgICAgPHNwYW4ke2ljb25TZWN0aW9uSGFzVmFsdWVDbGFzcyhkYXRhLndhcm4pfT4ke2ljb25zLndhcm59ICR7ZGF0YS53YXJufTwvc3Bhbj5cbiAgICAgICAgPHNwYW4ke2ljb25TZWN0aW9uSGFzVmFsdWVDbGFzcyhkYXRhLmluZm8pfT4ke2ljb25zLmluZm99ICR7ZGF0YS5pbmZvfTwvc3Bhbj5cbiAgICBgO1xuXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGFyZ2V0KS5pbm5lckhUTUwgPSBjb250ZW50O1xufVxuZnVuY3Rpb24gaWNvblNlY3Rpb25IYXNWYWx1ZUNsYXNzKHRvdGFsKSB7XG4gICAgcmV0dXJuIHRvdGFsID4gMCA/ICcgY2xhc3M9XCJoYXMtdmFsdWVcIicgOiAnJztcbn1cblxuY29uc29sZVByb3h5LnJlZ2lzdGVyTGlzdGVuZXIoZnVuY3Rpb24oZGV0YWlscykge1xuICAgIC8vIGlmIHdlIGNhbiByZW5kZXIgdGhlIGRhdGEgZG8gc28sIG90aGVyd2lzZSBzYXZlIGZvciBsYXRlclxuICAgIGlmIChzdGF0ZS5yZWFkeSkge1xuICAgICAgICB1cGRhdGVCcm93c2VyKGRldGFpbHMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgc3RhdGUucHJlUmVuZGVyQ2FjaGUucHVzaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHVwZGF0ZUJyb3dzZXIoZGV0YWlscyk7XG4gICAgICAgIH0pO1xuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2Utc2VjdGlvbiBnbGltcHNlLWxvZ3NcIiBpZD1cImdsaW1wc2UtbG9nc1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLXNlY3Rpb24tc3VtbWFyeVwiIGlkPVwiZ2xpbXBzZS1sb2dzLXN1bW1hcnlcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2UtaHVkLWZpZWxkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1odWQtZmllbGQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dzXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZC12YWx1ZVwiIGlkPVwiZ2xpbXBzZS1sb2dzLWNvdW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLS1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuICAgIH0sXG4gICAgcG9zdFJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0YXRlLnJlYWR5ID0gdHJ1ZTtcblxuICAgICAgICAvLyBydW4gdGhyb3VnaCB0aGUgYnJvd3NlciBsb2dzIGlmIHdlIGhhdmUgYW55XG4gICAgICAgIHVwZGF0ZVZpZXcoc3RhdGUuZGF0YS5icm93c2VyLCAnZ2xpbXBzZS1sb2dzLXBvcHVwLWJyb3dzZXItdmFsdWUnKTtcbiAgICAgICAgc3RhdGUucHJlUmVuZGVyQ2FjaGUuZm9yRWFjaChmdW5jdGlvbihkb1Rhc2spIHtcbiAgICAgICAgICAgIGRvVGFzaygpO1xuICAgICAgICB9KTtcbiAgICAgICAgc3RhdGUucHJlUmVuZGVyQ2FjaGUgPSB1bmRlZmluZWQ7XG5cbiAgICAgICAgLy8gd2hlbiByZXF1ZXN0IHN1bW1hcnkgaXMgcmVhZHkgcnVuIHRocm91Z2ggdGhlIHNlcnZlciBsb2dzIGlmIHdlIGhhdmUgYW55XG4gICAgICAgIHN1bW1hcnlSZXBvc2l0b3J5LmdldFByb21pc2UoKS50aGVuKGZ1bmN0aW9uKHJlcXVlc3REZXRhaWxzKSB7XG4gICAgICAgICAgICB1cGRhdGVTZXJ2ZXIocmVxdWVzdERldGFpbHMpO1xuICAgICAgICB9KTtcbiAgICB9LFxuICAgIHJlbmRlclBvcHVwOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1wb3B1cC1zZWN0aW9uIGdsaW1wc2UtbG9nc1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1odWQtZmllbGQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIExvZ3NcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZC12YWx1ZVwiIGlkPVwiZ2xpbXBzZS1sb2dzLXBvcHVwLXN1bW1hcnktdmFsdWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIC0tXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1odWQtZmllbGRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlcnZlciBsb2dzXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZC12YWx1ZVwiIGlkPVwiZ2xpbXBzZS1sb2dzLXBvcHVwLXNlcnZlci12YWx1ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2UtaHVkLWZpZWxkLWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQnJvd3NlciBsb2dzXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZC12YWx1ZVwiIGlkPVwiZ2xpbXBzZS1sb2dzLXBvcHVwLWJyb3dzZXItdmFsdWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIGA7XG4gICAgfVxufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvdmlld3MvbG9ncy5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQU5BO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBY0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBNEJBO0FBN0RBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 9 */
/* unknown exports provided */
/* all exports used */
/*!*****************************!*\
  !*** ./src/views/timing.js ***!
  \*****************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar timingProxy = __webpack_require__(/*! ../proxy/timing */ 14);\n\nmodule.exports = {\n    render: function render() {\n        var timings = timingProxy.getTimings();\n\n        return '\\n            <div class=\"glimpse-section glimpse-timing\">\\n                <div class=\"glimpse-section-summary\">\\n                    <div class=\"glimpse-hud-field\">\\n                        <div class=\"glimpse-hud-field-label\">\\n                            Page load time\\n                        </div>\\n                        <div class=\"glimpse-hud-field-value glimpse-time-ms\">\\n                            ' + timings.pageLoad + '\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        ';\n    },\n    renderPopup: function renderPopup() {\n        var timings = timingProxy.getTimings();\n\n        return '\\n            <div class=\"glimpse-hud-popup-section\">\\n                <div class=\"glimpse-hud-field\">\\n                    <div class=\"glimpse-hud-field-label\">Load time</div>\\n                    <div class=\"glimpse-hud-field-value glimpse-time-ms\">' + timings.pageLoad + '</div>\\n                    <div class=\"glimpse-hud-field\">\\n                        <div class=\"glimpse-hud-field-label\">Network connection</div>\\n                        <div class=\"glimpse-hud-field-value glimpse-time-ms\">' + timings.networkConnection + '</div>\\n                    </div>\\n                    <div class=\"glimpse-hud-field\">\\n                        <div class=\"glimpse-hud-field-label\">Sending request</div>\\n                        <div class=\"glimpse-hud-field-value glimpse-time-ms\">' + timings.sendingRequest + '</div>\\n                    </div>\\n                    <div class=\"glimpse-hud-field\">\\n                        <div class=\"glimpse-hud-field-label\">Receiving response</div>\\n                        <div class=\"glimpse-hud-field-value glimpse-time-ms\">' + timings.receivingResponse + '</div>\\n                    </div>\\n                    <div class=\"glimpse-hud-field\">\\n                        <div class=\"glimpse-hud-field-label\">Browser processing</div>\\n                        <div class=\"glimpse-hud-field-value glimpse-time-ms\">' + timings.browserProcessing + '</div>\\n                    </div>\\n                </div>\\n            </div>\\n        ';\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvdmlld3MvdGltaW5nLmpzP2ExMDciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdGltaW5nUHJveHkgPSByZXF1aXJlKCcuLi9wcm94eS90aW1pbmcnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgY29uc3QgdGltaW5ncyA9IHRpbWluZ1Byb3h5LmdldFRpbWluZ3MoKTtcblxuICAgICAgICByZXR1cm4gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2Utc2VjdGlvbiBnbGltcHNlLXRpbWluZ1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLXNlY3Rpb24tc3VtbWFyeVwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1odWQtZmllbGRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBhZ2UgbG9hZCB0aW1lXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZC12YWx1ZSBnbGltcHNlLXRpbWUtbXNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAke3RpbWluZ3MucGFnZUxvYWR9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYDtcbiAgICB9LFxuICAgIHJlbmRlclBvcHVwOiBmdW5jdGlvbigpIHtcbiAgICAgICAgY29uc3QgdGltaW5ncyA9IHRpbWluZ1Byb3h5LmdldFRpbWluZ3MoKTtcblxuICAgICAgICByZXR1cm4gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2UtaHVkLXBvcHVwLXNlY3Rpb25cIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1odWQtZmllbGRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2UtaHVkLWZpZWxkLWxhYmVsXCI+TG9hZCB0aW1lPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZC12YWx1ZSBnbGltcHNlLXRpbWUtbXNcIj4ke3RpbWluZ3MucGFnZUxvYWR9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2UtaHVkLWZpZWxkLWxhYmVsXCI+TmV0d29yayBjb25uZWN0aW9uPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1odWQtZmllbGQtdmFsdWUgZ2xpbXBzZS10aW1lLW1zXCI+JHt0aW1pbmdzLm5ldHdvcmtDb25uZWN0aW9ufTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2UtaHVkLWZpZWxkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1odWQtZmllbGQtbGFiZWxcIj5TZW5kaW5nIHJlcXVlc3Q8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZC12YWx1ZSBnbGltcHNlLXRpbWUtbXNcIj4ke3RpbWluZ3Muc2VuZGluZ1JlcXVlc3R9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1odWQtZmllbGRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZC1sYWJlbFwiPlJlY2VpdmluZyByZXNwb25zZTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2UtaHVkLWZpZWxkLXZhbHVlIGdsaW1wc2UtdGltZS1tc1wiPiR7dGltaW5ncy5yZWNlaXZpbmdSZXNwb25zZX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1maWVsZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2UtaHVkLWZpZWxkLWxhYmVsXCI+QnJvd3NlciBwcm9jZXNzaW5nPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1odWQtZmllbGQtdmFsdWUgZ2xpbXBzZS10aW1lLW1zXCI+JHt0aW1pbmdzLmJyb3dzZXJQcm9jZXNzaW5nfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuICAgIH1cbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3ZpZXdzL3RpbWluZy5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF3QkE7QUE5Q0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 10 */
/* unknown exports provided */
/* all exports used */
/*!******************************!*\
  !*** ./src/views/version.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar icon = '\\n    <svg viewBox=\"0 0 51 42\" xmlns=\"http://www.w3.org/2000/svg\">\\n        <g fill=\"none\" fill-rule=\"evenodd\">\\n            <path d=\"M18.906 1.057C12.596 3.594 6.146 6.167.73 8.333c-.414.086-.74.493-.73.917v22.916c-.004.396.28.777.66.888 6.303 2.82 12.698 5.708 18.09 8.136.314.175.73.195 1.03-.014l5.385-2.42L38.5 33.053V9.25c.005-.41-.302-.806-.702-.902l-18.19-7.276c-.123-.055-.25-.073-.372-.072-.122 0-.236.02-.33.057zm.344 1.834l15.855 6.346-6.688 2.678-15.856-6.33 6.69-2.693zm-9.167 3.682l15.856 6.345-6.69 2.664L3.395 9.25l6.688-2.678zm-8.25 4.024l16.5 6.603v21.784l-16.5-7.42V10.597zm34.834 21.318l-16.5 7.07V17.2l7.333-2.937v5.987c-.007.484.432.93.917.93.484 0 .923-.446.916-.93v-6.718l7.334-2.936v21.318z\" fill=\"#FFF\" fill-rule=\"nonzero\"/><path fill=\"#FFF\" d=\"M37.69 38.076l-5.51-9.16 4.592-8.627 6.148 4.646-3.182 11.828\"/><path d=\"M48.992 33.706L41.27 20.33c-.688-1.19-1.968-1.93-3.342-1.93-1.373 0-2.653.74-3.34 1.93l-7.812 13.53c-.687 1.188-.686 2.667 0 3.856.687 1.19 1.967 1.93 3.34 1.93h15.661c2.112-.018 3.825-1.742 3.825-3.858 0-.743-.21-1.46-.61-2.082zm-11.06-10.54c.657 0 1.19.532 1.19 1.19l-.303 7.11c-.032.643-.532.887-.89.887-.4 0-.85-.21-.886-.887l-.305-7.11c0-.658.533-1.19 1.19-1.19zm1.075 12.792c-.283.283-.674.445-1.076.445-.4 0-.79-.162-1.077-.445-.284-.283-.445-.677-.445-1.08 0-.398.16-.79.445-1.075.286-.283.68-.448 1.078-.448.4 0 .793.165 1.077.448.286.284.448.677.448 1.076 0 .4-.162.794-.448 1.078z\" fill=\"#D0011B\" fill-rule=\"nonzero\"/>\\n        </g>\\n    </svg>\\n';\n\nfunction getLatestVersion() {\n    try {\n        var updateInfo = JSON.parse(localStorage.getItem('glimpseLatestVersion'));\n\n        if (updateInfo.latestVersion && updateInfo.latestVersion !== \"0.22.15\") {\n            return updateInfo.latestVersion;\n        }\n    } catch (e) {\n        return false;\n    }\n\n    return false;\n}\n\nmodule.exports = {\n    render: function render() {\n        var newVersion = getLatestVersion();\n\n        return newVersion ? '\\n                <a class=\"glimpse-icon\" title=\"New version available: ' + newVersion + '\" href=\"https://www.npmjs.com/package/@glimpse/glimpse\" target=\"_blank\">\\n                    ' + icon + '\\n                </a>\\n            ' : '';\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3ZpZXdzL3ZlcnNpb24uanM/ZjljNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpY29uID0gYFxuICAgIDxzdmcgdmlld0JveD1cIjAgMCA1MSA0MlwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbiAgICAgICAgPGcgZmlsbD1cIm5vbmVcIiBmaWxsLXJ1bGU9XCJldmVub2RkXCI+XG4gICAgICAgICAgICA8cGF0aCBkPVwiTTE4LjkwNiAxLjA1N0MxMi41OTYgMy41OTQgNi4xNDYgNi4xNjcuNzMgOC4zMzNjLS40MTQuMDg2LS43NC40OTMtLjczLjkxN3YyMi45MTZjLS4wMDQuMzk2LjI4Ljc3Ny42Ni44ODggNi4zMDMgMi44MiAxMi42OTggNS43MDggMTguMDkgOC4xMzYuMzE0LjE3NS43My4xOTUgMS4wMy0uMDE0bDUuMzg1LTIuNDJMMzguNSAzMy4wNTNWOS4yNWMuMDA1LS40MS0uMzAyLS44MDYtLjcwMi0uOTAybC0xOC4xOS03LjI3NmMtLjEyMy0uMDU1LS4yNS0uMDczLS4zNzItLjA3Mi0uMTIyIDAtLjIzNi4wMi0uMzMuMDU3em0uMzQ0IDEuODM0bDE1Ljg1NSA2LjM0Ni02LjY4OCAyLjY3OC0xNS44NTYtNi4zMyA2LjY5LTIuNjkzem0tOS4xNjcgMy42ODJsMTUuODU2IDYuMzQ1LTYuNjkgMi42NjRMMy4zOTUgOS4yNWw2LjY4OC0yLjY3OHptLTguMjUgNC4wMjRsMTYuNSA2LjYwM3YyMS43ODRsLTE2LjUtNy40MlYxMC41OTd6bTM0LjgzNCAyMS4zMThsLTE2LjUgNy4wN1YxNy4ybDcuMzMzLTIuOTM3djUuOTg3Yy0uMDA3LjQ4NC40MzIuOTMuOTE3LjkzLjQ4NCAwIC45MjMtLjQ0Ni45MTYtLjkzdi02LjcxOGw3LjMzNC0yLjkzNnYyMS4zMTh6XCIgZmlsbD1cIiNGRkZcIiBmaWxsLXJ1bGU9XCJub256ZXJvXCIvPjxwYXRoIGZpbGw9XCIjRkZGXCIgZD1cIk0zNy42OSAzOC4wNzZsLTUuNTEtOS4xNiA0LjU5Mi04LjYyNyA2LjE0OCA0LjY0Ni0zLjE4MiAxMS44MjhcIi8+PHBhdGggZD1cIk00OC45OTIgMzMuNzA2TDQxLjI3IDIwLjMzYy0uNjg4LTEuMTktMS45NjgtMS45My0zLjM0Mi0xLjkzLTEuMzczIDAtMi42NTMuNzQtMy4zNCAxLjkzbC03LjgxMiAxMy41M2MtLjY4NyAxLjE4OC0uNjg2IDIuNjY3IDAgMy44NTYuNjg3IDEuMTkgMS45NjcgMS45MyAzLjM0IDEuOTNoMTUuNjYxYzIuMTEyLS4wMTggMy44MjUtMS43NDIgMy44MjUtMy44NTggMC0uNzQzLS4yMS0xLjQ2LS42MS0yLjA4MnptLTExLjA2LTEwLjU0Yy42NTcgMCAxLjE5LjUzMiAxLjE5IDEuMTlsLS4zMDMgNy4xMWMtLjAzMi42NDMtLjUzMi44ODctLjg5Ljg4Ny0uNCAwLS44NS0uMjEtLjg4Ni0uODg3bC0uMzA1LTcuMTFjMC0uNjU4LjUzMy0xLjE5IDEuMTktMS4xOXptMS4wNzUgMTIuNzkyYy0uMjgzLjI4My0uNjc0LjQ0NS0xLjA3Ni40NDUtLjQgMC0uNzktLjE2Mi0xLjA3Ny0uNDQ1LS4yODQtLjI4My0uNDQ1LS42NzctLjQ0NS0xLjA4IDAtLjM5OC4xNi0uNzkuNDQ1LTEuMDc1LjI4Ni0uMjgzLjY4LS40NDggMS4wNzgtLjQ0OC40IDAgLjc5My4xNjUgMS4wNzcuNDQ4LjI4Ni4yODQuNDQ4LjY3Ny40NDggMS4wNzYgMCAuNC0uMTYyLjc5NC0uNDQ4IDEuMDc4elwiIGZpbGw9XCIjRDAwMTFCXCIgZmlsbC1ydWxlPVwibm9uemVyb1wiLz5cbiAgICAgICAgPC9nPlxuICAgIDwvc3ZnPlxuYDtcblxuZnVuY3Rpb24gZ2V0TGF0ZXN0VmVyc2lvbigpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCB1cGRhdGVJbmZvID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZ2xpbXBzZUxhdGVzdFZlcnNpb24nKSk7XG5cbiAgICAgICAgaWYgKHVwZGF0ZUluZm8ubGF0ZXN0VmVyc2lvblxuICAgICAgICAgICAgJiYgdXBkYXRlSW5mby5sYXRlc3RWZXJzaW9uICE9PSBHTElNUFNFX1ZFUlNJT04pIHtcbiAgICAgICAgICAgIHJldHVybiB1cGRhdGVJbmZvLmxhdGVzdFZlcnNpb247XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnN0IG5ld1ZlcnNpb24gPSBnZXRMYXRlc3RWZXJzaW9uKCk7XG5cbiAgICAgICAgcmV0dXJuIG5ld1ZlcnNpb25cbiAgICAgICAgICAgID8gYFxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZ2xpbXBzZS1pY29uXCIgdGl0bGU9XCJOZXcgdmVyc2lvbiBhdmFpbGFibGU6ICR7bmV3VmVyc2lvbn1cIiBocmVmPVwiaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQGdsaW1wc2UvZ2xpbXBzZVwiIHRhcmdldD1cIl9ibGFua1wiPlxuICAgICAgICAgICAgICAgICAgICAke2ljb259XG4gICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgYFxuICAgICAgICAgICAgOiAnJ1xuICAgIH1cbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3ZpZXdzL3ZlcnNpb24uanMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFYQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 11 */
/* unknown exports provided */
/* all exports used */
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(/*! !../~/css-loader!../~/autoprefixer-loader?browsers=last 2 version!../~/sass-loader/lib/loader.js??ref--0-3!./index.scss */ 18);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(/*! ../~/style-loader/addStyles.js */ 21)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/autoprefixer-loader/index.js?browsers=last 2 version!../node_modules/sass-loader/lib/loader.js??ref--0-3!./index.scss\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/autoprefixer-loader/index.js?browsers=last 2 version!../node_modules/sass-loader/lib/loader.js??ref--0-3!./index.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguc2Nzcz8zMzQ3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyLWxvYWRlci9pbmRleC5qcz9icm93c2Vycz1sYXN0IDIgdmVyc2lvbiEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS0wLTMhLi9pbmRleC5zY3NzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXItbG9hZGVyL2luZGV4LmpzP2Jyb3dzZXJzPWxhc3QgMiB2ZXJzaW9uIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTAtMyEuL2luZGV4LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXItbG9hZGVyL2luZGV4LmpzP2Jyb3dzZXJzPWxhc3QgMiB2ZXJzaW9uIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTAtMyEuL2luZGV4LnNjc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2luZGV4LnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDExXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 12 */
/* unknown exports provided */
/* all exports used */
/*!***************************!*\
  !*** ./src/proxy/ajax.js ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// TODO: Switch to get data directly from the browser agent\n\nvar util = __webpack_require__(/*! ../lib/util */ 1);\n\nvar listeners = [];\n\nvar oldFetch = self.fetch;\nself.fetch = function (input, init) {\n    // setup requests so we can read data\n    var request = void 0;\n    if (input instanceof Request) {\n        request = input.clone();\n    } else {\n        try {\n            request = new Request(input, init);\n        } catch (e) {\n            return oldFetch.apply(this, arguments);\n        }\n    }\n\n    var startTime = new Date().getTime();\n    var uri = request.url;\n\n    // pass call through to caller\n    var fetchPromise = oldFetch.apply(this, arguments);\n    if (util.isLocalUri(uri) && uri.indexOf('/glimpse/') == -1) {\n        fetchPromise.then(function (response) {\n            response = response.clone();\n\n            if (response.headers.get('X-Glimpse-ContextId')) {\n                publishRequest(buildFetchModel(request, response, startTime));\n            }\n        }, function (error) {\n            // nothing we can do\n        });\n    }\n\n    return fetchPromise;\n};\n\nfunction buildFetchModel(request, response, startTime) {\n    return {\n        method: request.method,\n        uri: response.url,\n        duration: new Date().getTime() - startTime,\n        size: response.headers.get('Content-Length'),\n        status: response.status,\n        statusText: response.statusText,\n        time: new Date(),\n        contentType: response.headers.get('Content-Type'),\n        requestId: response.headers.get('X-Glimpse-ContextId')\n    };\n}\n\nvar open = XMLHttpRequest.prototype.open;\nXMLHttpRequest.prototype.open = function (method, uri) {\n    if (util.isLocalUri(uri) && uri.indexOf('/glimpse/') == -1) {\n        var startTime = new Date().getTime();\n        this.addEventListener('readystatechange', function () {\n            if (this.readyState == 4 && this.getResponseHeader('X-Glimpse-ContextId')) {\n                publishRequest(buildAjaxModel(method, uri, startTime, this));\n            }\n        }, false);\n    }\n\n    open.apply(this, arguments);\n};\n\nfunction buildAjaxModel(method, uri, startTime, xhrObj) {\n    return {\n        method: method,\n        uri: uri,\n        duration: new Date().getTime() - startTime,\n        size: xhrObj.getResponseHeader('Content-Length'),\n        status: xhrObj.status,\n        statusText: xhrObj.statusText,\n        time: new Date(),\n        contentType: xhrObj.getResponseHeader('Content-Type'),\n        requestId: xhrObj.getResponseHeader('X-Glimpse-ContextId')\n    };\n}\n\nfunction publishRequest(details) {\n    for (var i = 0; i < listeners.length; i++) {\n        listeners[i](details);\n    }\n}\n\nmodule.exports = {\n    registerListener: function registerListener(callback) {\n        listeners.push(callback);\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3Byb3h5L2FqYXguanM/ODdlYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPOiBTd2l0Y2ggdG8gZ2V0IGRhdGEgZGlyZWN0bHkgZnJvbSB0aGUgYnJvd3NlciBhZ2VudFxuXG5jb25zdCB1dGlsID0gcmVxdWlyZSgnLi4vbGliL3V0aWwnKTtcblxuY29uc3QgbGlzdGVuZXJzID0gW107XG5cbmNvbnN0IG9sZEZldGNoID0gc2VsZi5mZXRjaDtcbnNlbGYuZmV0Y2ggPSBmdW5jdGlvbihpbnB1dCwgaW5pdCkge1xuICAgIC8vIHNldHVwIHJlcXVlc3RzIHNvIHdlIGNhbiByZWFkIGRhdGFcbiAgICBsZXQgcmVxdWVzdDtcbiAgICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBSZXF1ZXN0KSB7XG4gICAgICAgIHJlcXVlc3QgPSBpbnB1dC5jbG9uZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXF1ZXN0ID0gbmV3IFJlcXVlc3QoaW5wdXQsIGluaXQpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gb2xkRmV0Y2guYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHN0YXJ0VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgIGNvbnN0IHVyaSA9IHJlcXVlc3QudXJsO1xuXG4gICAgLy8gcGFzcyBjYWxsIHRocm91Z2ggdG8gY2FsbGVyXG4gICAgY29uc3QgZmV0Y2hQcm9taXNlID0gb2xkRmV0Y2guYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAodXRpbC5pc0xvY2FsVXJpKHVyaSkgJiYgdXJpLmluZGV4T2YoJy9nbGltcHNlLycpID09IC0xKSB7XG4gICAgICAgIGZldGNoUHJvbWlzZS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICByZXNwb25zZSA9IHJlc3BvbnNlLmNsb25lKCk7XG5cbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5oZWFkZXJzLmdldCgnWC1HbGltcHNlLUNvbnRleHRJZCcpKSB7XG4gICAgICAgICAgICAgICAgcHVibGlzaFJlcXVlc3QoYnVpbGRGZXRjaE1vZGVsKHJlcXVlc3QsIHJlc3BvbnNlLCBzdGFydFRpbWUpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgICAgIC8vIG5vdGhpbmcgd2UgY2FuIGRvXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBmZXRjaFByb21pc2U7XG59XG5cbmZ1bmN0aW9uIGJ1aWxkRmV0Y2hNb2RlbChyZXF1ZXN0LCByZXNwb25zZSwgc3RhcnRUaW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbWV0aG9kOiByZXF1ZXN0Lm1ldGhvZCxcbiAgICAgICAgdXJpOiByZXNwb25zZS51cmwsXG4gICAgICAgIGR1cmF0aW9uOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIHN0YXJ0VGltZSxcbiAgICAgICAgc2l6ZTogcmVzcG9uc2UuaGVhZGVycy5nZXQoJ0NvbnRlbnQtTGVuZ3RoJyksXG4gICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiByZXNwb25zZS5zdGF0dXNUZXh0LFxuICAgICAgICB0aW1lOiBuZXcgRGF0ZSgpLFxuICAgICAgICBjb250ZW50VHlwZTogcmVzcG9uc2UuaGVhZGVycy5nZXQoJ0NvbnRlbnQtVHlwZScpLFxuICAgICAgICByZXF1ZXN0SWQ6IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdYLUdsaW1wc2UtQ29udGV4dElkJylcbiAgICB9O1xufVxuXG5jb25zdCBvcGVuID0gWE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLm9wZW47XG5YTUxIdHRwUmVxdWVzdC5wcm90b3R5cGUub3BlbiA9IGZ1bmN0aW9uKG1ldGhvZCwgdXJpKSB7XG4gICAgaWYgKHV0aWwuaXNMb2NhbFVyaSh1cmkpICYmIHVyaS5pbmRleE9mKCcvZ2xpbXBzZS8nKSA9PSAtMSkge1xuICAgICAgICBjb25zdCBzdGFydFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgICAgICAgJ3JlYWR5c3RhdGVjaGFuZ2UnLFxuICAgICAgICAgICAgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PSA0ICYmIHRoaXMuZ2V0UmVzcG9uc2VIZWFkZXIoJ1gtR2xpbXBzZS1Db250ZXh0SWQnKSkge1xuICAgICAgICAgICAgICAgICAgICBwdWJsaXNoUmVxdWVzdChidWlsZEFqYXhNb2RlbChtZXRob2QsIHVyaSwgc3RhcnRUaW1lLCB0aGlzKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhbHNlXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgb3Blbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcblxuZnVuY3Rpb24gYnVpbGRBamF4TW9kZWwobWV0aG9kLCB1cmksIHN0YXJ0VGltZSwgeGhyT2JqKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICAgIHVyaTogdXJpLFxuICAgICAgICBkdXJhdGlvbjogbmV3IERhdGUoKS5nZXRUaW1lKCkgLSBzdGFydFRpbWUsXG4gICAgICAgIHNpemU6IHhock9iai5nZXRSZXNwb25zZUhlYWRlcignQ29udGVudC1MZW5ndGgnKSxcbiAgICAgICAgc3RhdHVzOiB4aHJPYmouc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiB4aHJPYmouc3RhdHVzVGV4dCxcbiAgICAgICAgdGltZTogbmV3IERhdGUoKSxcbiAgICAgICAgY29udGVudFR5cGU6IHhock9iai5nZXRSZXNwb25zZUhlYWRlcignQ29udGVudC1UeXBlJyksXG4gICAgICAgIHJlcXVlc3RJZDogeGhyT2JqLmdldFJlc3BvbnNlSGVhZGVyKCdYLUdsaW1wc2UtQ29udGV4dElkJylcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBwdWJsaXNoUmVxdWVzdChkZXRhaWxzKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbGlzdGVuZXJzW2ldKGRldGFpbHMpO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgcmVnaXN0ZXJMaXN0ZW5lcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgICAgbGlzdGVuZXJzLnB1c2goY2FsbGJhY2spO1xuICAgIH1cbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3Byb3h5L2FqYXguanMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFUQTtBQVdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 13 */
/* unknown exports provided */
/* all exports used */
/*!******************************!*\
  !*** ./src/proxy/console.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// TODO: Switch to get data directly from the browser agent\n\nvar methods = ['error', 'info', 'warn'];\nvar listeners = [];\n\nmethods.forEach(function (methodKey) {\n    console[methodKey] = function (key) {\n        var oldFunction = console[key];\n        var newFunction = function newFunction() {\n            var args = Array.prototype.slice.call(arguments);\n\n            publishLog({ method: key, arguments: args });\n\n            return oldFunction.apply(this, arguments);\n        };\n\n        return newFunction;\n    }(methodKey);\n});\n\nfunction publishLog(details) {\n    listeners.forEach(function (listener) {\n        return listener(details);\n    });\n}\n\nmodule.exports = {\n    registerListener: function registerListener(callback) {\n        listeners.push(callback);\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3Byb3h5L2NvbnNvbGUuanM/YTVmZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPOiBTd2l0Y2ggdG8gZ2V0IGRhdGEgZGlyZWN0bHkgZnJvbSB0aGUgYnJvd3NlciBhZ2VudFxuXG5jb25zdCBtZXRob2RzID0gW1xuICAgICdlcnJvcicsXG4gICAgJ2luZm8nLFxuICAgICd3YXJuJ1xuXTtcbmNvbnN0IGxpc3RlbmVycyA9IFtdO1xuXG5tZXRob2RzLmZvckVhY2goZnVuY3Rpb24obWV0aG9kS2V5KSB7XG4gICAgY29uc29sZVttZXRob2RLZXldID0gKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgY29uc3Qgb2xkRnVuY3Rpb24gPSBjb25zb2xlW2tleV07XG4gICAgICAgIGNvbnN0IG5ld0Z1bmN0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY29uc3QgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cbiAgICAgICAgICAgIHB1Ymxpc2hMb2coeyBtZXRob2Q6IGtleSwgYXJndW1lbnRzOiBhcmdzIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gb2xkRnVuY3Rpb24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gbmV3RnVuY3Rpb247XG4gICAgfShtZXRob2RLZXkpKTtcbn0pO1xuXG5mdW5jdGlvbiBwdWJsaXNoTG9nKGRldGFpbHMpIHtcbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChsaXN0ZW5lciA9PiBsaXN0ZW5lcihkZXRhaWxzKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHJlZ2lzdGVyTGlzdGVuZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICAgIGxpc3RlbmVycy5wdXNoKGNhbGxiYWNrKTtcbiAgICB9XG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9wcm94eS9jb25zb2xlLmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 14 */
/* unknown exports provided */
/* all exports used */
/*!*****************************!*\
  !*** ./src/proxy/timing.js ***!
  \*****************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// TODO: Switch to get data directly from the browser agent\n\nvar timingsRaw = (window.performance || window.mozPerformanceperformance || window.msPerformanceperformance || window.webkitPerformanceperformance || {}).timing;\n\n// cache so we only work out the once\nvar timings = undefined;\n\nfunction normalizeTotal(value) {\n    // avoid negative values\n    return Math.max(0, value);\n}\n\nmodule.exports = {\n    getTimings: function getTimings(callback) {\n        if (!timings) {\n            var pageLoad = normalizeTotal(timingsRaw.loadEventEnd - timingsRaw.navigationStart);\n            var networkConnection = normalizeTotal(timingsRaw.connectEnd - (timingsRaw.redirectStart || timingsRaw.fetchStart));\n            var sendingRequest = normalizeTotal(timingsRaw.responseStart - timingsRaw.requestStart);\n            var receivingResponse = normalizeTotal(timingsRaw.responseEnd - timingsRaw.responseStart);\n            var browserProcessing = normalizeTotal(timingsRaw.loadEventEnd - timingsRaw.domLoading);\n\n            timings = {\n                pageLoad: pageLoad,\n                networkConnection: networkConnection,\n                sendingRequest: sendingRequest,\n                receivingResponse: receivingResponse,\n                browserProcessing: browserProcessing\n            };\n        }\n\n        return timings;\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3Byb3h5L3RpbWluZy5qcz82MjVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE86IFN3aXRjaCB0byBnZXQgZGF0YSBkaXJlY3RseSBmcm9tIHRoZSBicm93c2VyIGFnZW50XG5cbmNvbnN0IHRpbWluZ3NSYXcgPSAod2luZG93LnBlcmZvcm1hbmNlIHx8XG4gICAgd2luZG93Lm1velBlcmZvcm1hbmNlcGVyZm9ybWFuY2UgfHxcbiAgICB3aW5kb3cubXNQZXJmb3JtYW5jZXBlcmZvcm1hbmNlIHx8XG4gICAgd2luZG93LndlYmtpdFBlcmZvcm1hbmNlcGVyZm9ybWFuY2UgfHxcbiAgICB7fSkudGltaW5nO1xuXG4vLyBjYWNoZSBzbyB3ZSBvbmx5IHdvcmsgb3V0IHRoZSBvbmNlXG5sZXQgdGltaW5ncyA9IHVuZGVmaW5lZDtcblxuZnVuY3Rpb24gbm9ybWFsaXplVG90YWwodmFsdWUpIHtcbiAgICAvLyBhdm9pZCBuZWdhdGl2ZSB2YWx1ZXNcbiAgICByZXR1cm4gTWF0aC5tYXgoMCwgdmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRUaW1pbmdzOiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAgICBpZiAoIXRpbWluZ3MpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhZ2VMb2FkID0gbm9ybWFsaXplVG90YWwodGltaW5nc1Jhdy5sb2FkRXZlbnRFbmQgLSB0aW1pbmdzUmF3Lm5hdmlnYXRpb25TdGFydCk7XG4gICAgICAgICAgICBjb25zdCBuZXR3b3JrQ29ubmVjdGlvbiA9IG5vcm1hbGl6ZVRvdGFsKHRpbWluZ3NSYXcuY29ubmVjdEVuZCAtICh0aW1pbmdzUmF3LnJlZGlyZWN0U3RhcnQgfHwgdGltaW5nc1Jhdy5mZXRjaFN0YXJ0KSk7XG4gICAgICAgICAgICBjb25zdCBzZW5kaW5nUmVxdWVzdCA9IG5vcm1hbGl6ZVRvdGFsKHRpbWluZ3NSYXcucmVzcG9uc2VTdGFydCAtIHRpbWluZ3NSYXcucmVxdWVzdFN0YXJ0KTtcbiAgICAgICAgICAgIGNvbnN0IHJlY2VpdmluZ1Jlc3BvbnNlID0gbm9ybWFsaXplVG90YWwodGltaW5nc1Jhdy5yZXNwb25zZUVuZCAtIHRpbWluZ3NSYXcucmVzcG9uc2VTdGFydCk7XG4gICAgICAgICAgICBjb25zdCBicm93c2VyUHJvY2Vzc2luZyA9IG5vcm1hbGl6ZVRvdGFsKHRpbWluZ3NSYXcubG9hZEV2ZW50RW5kIC0gdGltaW5nc1Jhdy5kb21Mb2FkaW5nKTtcblxuICAgICAgICAgICAgdGltaW5ncyA9IHtcbiAgICAgICAgICAgICAgICBwYWdlTG9hZCxcbiAgICAgICAgICAgICAgICBuZXR3b3JrQ29ubmVjdGlvbixcbiAgICAgICAgICAgICAgICBzZW5kaW5nUmVxdWVzdCxcbiAgICAgICAgICAgICAgICByZWNlaXZpbmdSZXNwb25zZSxcbiAgICAgICAgICAgICAgICBicm93c2VyUHJvY2Vzc2luZ1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aW1pbmdzO1xuICAgIH1cbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3Byb3h5L3RpbWluZy5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBbkJBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 15 */
/* unknown exports provided */
/* all exports used */
/*!******************************!*\
  !*** ./~/base64-js/index.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Jhc2U2NC1qcy9pbmRleC5qcz8yYWRkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5leHBvcnRzLmJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoXG5leHBvcnRzLnRvQnl0ZUFycmF5ID0gdG9CeXRlQXJyYXlcbmV4cG9ydHMuZnJvbUJ5dGVBcnJheSA9IGZyb21CeXRlQXJyYXlcblxudmFyIGxvb2t1cCA9IFtdXG52YXIgcmV2TG9va3VwID0gW11cbnZhciBBcnIgPSB0eXBlb2YgVWludDhBcnJheSAhPT0gJ3VuZGVmaW5lZCcgPyBVaW50OEFycmF5IDogQXJyYXlcblxudmFyIGNvZGUgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLydcbmZvciAodmFyIGkgPSAwLCBsZW4gPSBjb2RlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gIGxvb2t1cFtpXSA9IGNvZGVbaV1cbiAgcmV2TG9va3VwW2NvZGUuY2hhckNvZGVBdChpKV0gPSBpXG59XG5cbnJldkxvb2t1cFsnLScuY2hhckNvZGVBdCgwKV0gPSA2MlxucmV2TG9va3VwWydfJy5jaGFyQ29kZUF0KDApXSA9IDYzXG5cbmZ1bmN0aW9uIHBsYWNlSG9sZGVyc0NvdW50IChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcbiAgaWYgKGxlbiAlIDQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0JylcbiAgfVxuXG4gIC8vIHRoZSBudW1iZXIgb2YgZXF1YWwgc2lnbnMgKHBsYWNlIGhvbGRlcnMpXG4gIC8vIGlmIHRoZXJlIGFyZSB0d28gcGxhY2Vob2xkZXJzLCB0aGFuIHRoZSB0d28gY2hhcmFjdGVycyBiZWZvcmUgaXRcbiAgLy8gcmVwcmVzZW50IG9uZSBieXRlXG4gIC8vIGlmIHRoZXJlIGlzIG9ubHkgb25lLCB0aGVuIHRoZSB0aHJlZSBjaGFyYWN0ZXJzIGJlZm9yZSBpdCByZXByZXNlbnQgMiBieXRlc1xuICAvLyB0aGlzIGlzIGp1c3QgYSBjaGVhcCBoYWNrIHRvIG5vdCBkbyBpbmRleE9mIHR3aWNlXG4gIHJldHVybiBiNjRbbGVuIC0gMl0gPT09ICc9JyA/IDIgOiBiNjRbbGVuIC0gMV0gPT09ICc9JyA/IDEgOiAwXG59XG5cbmZ1bmN0aW9uIGJ5dGVMZW5ndGggKGI2NCkge1xuICAvLyBiYXNlNjQgaXMgNC8zICsgdXAgdG8gdHdvIGNoYXJhY3RlcnMgb2YgdGhlIG9yaWdpbmFsIGRhdGFcbiAgcmV0dXJuIGI2NC5sZW5ndGggKiAzIC8gNCAtIHBsYWNlSG9sZGVyc0NvdW50KGI2NClcbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgaSwgaiwgbCwgdG1wLCBwbGFjZUhvbGRlcnMsIGFyclxuICB2YXIgbGVuID0gYjY0Lmxlbmd0aFxuICBwbGFjZUhvbGRlcnMgPSBwbGFjZUhvbGRlcnNDb3VudChiNjQpXG5cbiAgYXJyID0gbmV3IEFycihsZW4gKiAzIC8gNCAtIHBsYWNlSG9sZGVycylcblxuICAvLyBpZiB0aGVyZSBhcmUgcGxhY2Vob2xkZXJzLCBvbmx5IGdldCB1cCB0byB0aGUgbGFzdCBjb21wbGV0ZSA0IGNoYXJzXG4gIGwgPSBwbGFjZUhvbGRlcnMgPiAwID8gbGVuIC0gNCA6IGxlblxuXG4gIHZhciBMID0gMFxuXG4gIGZvciAoaSA9IDAsIGogPSAwOyBpIDwgbDsgaSArPSA0LCBqICs9IDMpIHtcbiAgICB0bXAgPSAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxOCkgfCAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgMTIpIHwgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHwgcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAzKV1cbiAgICBhcnJbTCsrXSA9ICh0bXAgPj4gMTYpICYgMHhGRlxuICAgIGFycltMKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbTCsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnMgPT09IDIpIHtcbiAgICB0bXAgPSAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAyKSB8IChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltMKytdID0gdG1wICYgMHhGRlxuICB9IGVsc2UgaWYgKHBsYWNlSG9sZGVycyA9PT0gMSkge1xuICAgIHRtcCA9IChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDEwKSB8IChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0KSB8IChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltMKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbTCsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArIGxvb2t1cFtudW0gPj4gMTIgJiAweDNGXSArIGxvb2t1cFtudW0gPj4gNiAmIDB4M0ZdICsgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9ICh1aW50OFtpXSA8PCAxNikgKyAodWludDhbaSArIDFdIDw8IDgpICsgKHVpbnQ4W2kgKyAyXSlcbiAgICBvdXRwdXQucHVzaCh0cmlwbGV0VG9CYXNlNjQodG1wKSlcbiAgfVxuICByZXR1cm4gb3V0cHV0LmpvaW4oJycpXG59XG5cbmZ1bmN0aW9uIGZyb21CeXRlQXJyYXkgKHVpbnQ4KSB7XG4gIHZhciB0bXBcbiAgdmFyIGxlbiA9IHVpbnQ4Lmxlbmd0aFxuICB2YXIgZXh0cmFCeXRlcyA9IGxlbiAlIDMgLy8gaWYgd2UgaGF2ZSAxIGJ5dGUgbGVmdCwgcGFkIDIgYnl0ZXNcbiAgdmFyIG91dHB1dCA9ICcnXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsodWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKSkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBvdXRwdXQgKz0gbG9va3VwW3RtcCA+PiAyXVxuICAgIG91dHB1dCArPSBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdXG4gICAgb3V0cHV0ICs9ICc9PSdcbiAgfSBlbHNlIGlmIChleHRyYUJ5dGVzID09PSAyKSB7XG4gICAgdG1wID0gKHVpbnQ4W2xlbiAtIDJdIDw8IDgpICsgKHVpbnQ4W2xlbiAtIDFdKVxuICAgIG91dHB1dCArPSBsb29rdXBbdG1wID4+IDEwXVxuICAgIG91dHB1dCArPSBsb29rdXBbKHRtcCA+PiA0KSAmIDB4M0ZdXG4gICAgb3V0cHV0ICs9IGxvb2t1cFsodG1wIDw8IDIpICYgMHgzRl1cbiAgICBvdXRwdXQgKz0gJz0nXG4gIH1cblxuICBwYXJ0cy5wdXNoKG91dHB1dClcblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9iYXNlNjQtanMvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDE1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 16 */
/* unknown exports provided */
/* all exports used */
/*!***************************!*\
  !*** ./~/buffer/index.js ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ 15)\nvar ieee754 = __webpack_require__(/*! ieee754 */ 20)\nvar isArray = __webpack_require__(/*! isarray */ 17)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/global.js */ 24)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 17 */
/* unknown exports provided */
/* all exports used */
/*!*************************************!*\
  !*** ./~/buffer/~/isarray/index.js ***!
  \*************************************/
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2J1ZmZlci9+L2lzYXJyYXkvaW5kZXguanM/MTQ4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9idWZmZXIvfi9pc2FycmF5L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 18 */
/* unknown exports provided */
/* all exports used */
/*!**************************************************************************************************************************************************!*\
  !*** ./~/css-loader!./~/autoprefixer-loader?browsers=last 2 version!./~/sass-loader/lib/loader.js?{"outputStyle":"compressed"}!./src/index.scss ***!
  \**************************************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../~/css-loader/lib/css-base.js */ 19)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \"@font-face{font-family:'Selawik';src:url(\\\"/glimpse/hud/assets/selawk.woff2\\\") format(\\\"woff2\\\"),url(\\\"/glimpse/hud/assets/selawk.woff\\\") format(\\\"woff\\\")}.glimpse-hud{display:-ms-flexbox !important;display:flex !important;height:40px !important;width:auto !important;-ms-flex-direction:row !important;flex-direction:row !important;-ms-flex-align:end !important;align-items:flex-end !important;color:white !important;position:fixed !important;bottom:0 !important;right:0 !important;color:#f1f1f1 !important;font-size:14px !important;font-family:'Selawik', sans-serif !important;font-weight:300 !important;-webkit-font-smoothing:subpixel-antialiased}.glimpse-hud>*+*{border-left:1px solid #999 !important}.glimpse-hud ::-webkit-scrollbar{width:0.5rem !important;height:0.5rem !important}.glimpse-hud ::-webkit-scrollbar *,.glimpse-hud ::-webkit-scrollbar-corner{background:transparent !important}.glimpse-hud ::-webkit-scrollbar-thumb{background:rgba(70,70,70,0.5) !important}.glimpse-hud-popup,.glimpse-link,.glimpse-hud-data{border-top:3px solid #39f !important}.glimpse-hud-popup{color:white !important;font-size:14px !important;font-family:'Selawik', sans-serif !important;font-weight:300 !important;background-color:rgba(0,0,0,0.85) !important;position:absolute !important;width:auto !important;bottom:0 !important;right:0 !important;opacity:0 !important;transform:translateY(calc(100% - 43px)) !important;transition:transform .3s ease-out, z-index 0s step-end, opacity 0s .3s step-end !important;z-index:0}.glimpse-hud-popup>*{opacity:0 !important;transition:opacity 0.3s 0s !important}.glimpse-hud-data{display:-ms-flexbox !important;display:flex !important;-ms-flex-direction:row !important;flex-direction:row !important;position:relative !important;height:100% !important;transition:border-color 0s 0.3s !important}.glimpse-hud-data>:not(.glimpse-hud-popup){z-index:1 !important;transition:opacity 0s 0.3s !important}.glimpse-hud-data>:not(.glimpse-hud-popup)>*{transition:opacity 0.3s 0.3s !important}.glimpse-hud-data[data-glimpse-expanded=\\\"true\\\"]{border-color:transparent !important;transition-delay:0s !important}.glimpse-hud-data[data-glimpse-expanded=\\\"true\\\"]>:not(.glimpse-hud-popup){background-color:transparent !important;opacity:0 !important;transition-delay:0s !important}.glimpse-hud-data[data-glimpse-expanded=\\\"true\\\"]>.glimpse-hud-popup{transform:translateY(0) !important;opacity:1 !important;z-index:2 !important;left:initial !important;transition-delay:0s !important}.glimpse-hud-data[data-glimpse-expanded=\\\"true\\\"]>.glimpse-hud-popup>*{opacity:1 !important;transition-delay:0s !important}.glimpse-hud-data .glimpse-arrow{margin-right:5px !important;height:8px !important;width:8px !important}.glimpse-arrow{height:15px !important;width:15px !important;display:inline-block !important;margin-right:10px !important}.glimpse-arrow-path{fill:currentColor !important}.glimpse-link{color:#39f !important;display:-ms-flexbox !important;display:flex !important;-ms-flex-direction:row !important;flex-direction:row !important;-ms-flex-align:center !important;align-items:center !important;height:100% !important;padding:0 15px !important;text-decoration:none !important;background-color:rgba(0,0,0,0.85) !important;transition:.3s ease !important;transition-property:background-color, color !important;border-left-color:#39f !important}.glimpse-link:hover{background-color:rgba(13,92,157,0.85) !important;color:inherit !important}.glimpse-section{padding:4px 15px 0 !important;background-color:rgba(0,0,0,0.85) !important;min-height:40px !important}.glimpse-section+.glimpse-section{border-left:1px solid #999 !important}.glimpse-section-summary{display:-ms-flexbox !important;display:flex !important;-ms-flex-direction:row !important;flex-direction:row !important;-ms-flex-align:start !important;align-items:flex-start !important;height:40px !important}.glimpse-section-detail{max-height:0 !important;overflow:hidden !important}.glimpse-section-duration,.glimpse-section-value{position:relative !important;font-size:17px !important;margin-left:5px !important;margin-right:1px !important;top:-2px !important;font-weight:600 !important}.glimpse-section-label,.glimpse-label,.glimpse-section-suffix{color:#999 !important}.glimpse-time-ms:after,.glimpse-size-kb:after{font-weight:normal !important}.glimpse-time-ms:after{content:' ms';color:#999 !important}.glimpse-size-kb:after{content:'kb';color:#999 !important}.glimpse-section-value{transition:color 0.5s ease-in-out}.glimpse-section-value.glimpse-section-value--update{color:#39f !important}.glimpse-icon{display:-ms-flexbox !important;display:flex !important;-ms-flex-pack:center !important;justify-content:center !important;-ms-flex-align:center !important;align-items:center !important;background-color:rgba(0,0,0,0.85) !important;padding:0 15px !important;border-right:1px solid #39f !important}.glimpse-icon>svg{position:relative !important;left:2px !important;height:25px !important;width:25px !important}.glimpse-icon:hover{background-color:rgba(13,92,157,0.85) !important}.glimpse-ajax-rows{font-size:11px !important;overflow:hidden !important}.glimpse-section-summary .glimpse-ajax-rows{margin-left:20px !important;width:180px !important;-ms-flex-positive:1 !important;flex-grow:1 !important;table-layout:fixed !important}.glimpse-section-summary .glimpse-ajax-rows:empty{display:none !important}.glimpse-section-summary .glimpse-hud-field-value{font-size:17px !important}.glimpse-section-summary .glimpse-ajax-row:nth-child(3){animation-name:glimpse-ajax-row-leave !important}.glimpse-hud-popup-section .glimpse-hud-field+*{margin-top:5px !important}.glimpse-hud-popup-section>.glimpse-hud-field>.glimpse-hud-field-value{font-size:17px !important}.glimpse-hud-popup-section .glimpse-ajax-rows{width:100% !important}.glimpse-hud-popup-section .glimpse-ajax-row{margin-bottom:5px !important}@keyframes glimpse-ajax-row-enter{from{transform:translateY(-100%)}to{transform:translateY(0)}}@keyframes glimpse-ajax-row-leave{from{opacity:1;visibility:visible;transform:translateY(-100%)}to{opacity:0;visibility:hidden;transform:translateY(0)}}.glimpse-ajax-row{white-space:nowrap !important;position:relative !important;animation:glimpse-ajax-row-enter .3s ease-out both !important;border:none !important;padding:0 !important;margin:0 !important}.glimpse-ajax-row-line{white-space:nowrap !important;overflow:hidden !important;text-overflow:ellipsis !important;display:-ms-flexbox !important;display:flex !important;-ms-flex-direction:row !important;flex-direction:row !important;-ms-flex-pack:start !important;justify-content:flex-start !important;-ms-flex-align:center !important;align-items:center !important;height:17px !important;font-size:11px !important}.glimpse-ajax-cell{white-space:nowrap !important;text-overflow:ellipsis !important;overflow:hidden !important;padding:0 !important;margin:0 !important;font-size:inherit !important}.glimpse-ajax-cell:last-child{text-align:right !important}.glimpse-ajax-cell[data-glimpse-type=\\\"duration\\\"]{text-overflow:none !important;overflow:visible !important}.glimpse-ajax-text--uri{width:100% !important;display:inline-block !important;overflow:hidden !important;text-overflow:ellipsis !important;white-space:nowrap !important;box-sizing:border-box !important;padding-right:1.2rem !important;vertical-align:bottom !important}.glimpse-ajax-text[data-glimpse-type=\\\"uri\\\"],.glimpse-ajax-text[data-glimpse-type=\\\"status\\\"]{-ms-flex-positive:1 !important;flex-grow:1 !important;white-space:nowrap !important;text-overflow:ellipsis !important}.glimpse-ajax-text[data-glimpse-type=\\\"uri\\\"]{width:50% !important;display:inline-block !important}.glimpse-ajax-text[data-glimpse-type=\\\"status\\\"]{padding-left:12px !important;position:relative !important}.glimpse-ajax-text+.glimpse-ajax-text{margin-left:5px !important}.glimpse-ajax-text>.glimpse-status-icon{position:absolute !important;left:0 !important;height:11px !important;top:calc(50% - 5.5px) !important}.glimpse-ajax-uri{text-overflow:ellipsis !important;white-space:nowrap !important;overflow:hidden !important;text-overflow:ellipsis !important;width:100px !important;vertical-align:top}.glimpse-ajax-uri__icon{width:10px !important;height:10px !important;fill:#69A648 !important;display:inline-block !important;position:relative !important;bottom:-1px !important}.glimpse-ajax-uri__icon .icon{width:100% !important;height:100% !important}.glimpse-hud-popup{display:-ms-flexbox !important;display:flex !important;-ms-flex-direction:row !important;flex-direction:row !important;-ms-flex-pack:start !important;justify-content:flex-start !important;-ms-flex-align:stretch !important;align-items:stretch !important}.glimpse-hud-popup-section{padding:10px !important;padding-right:15px !important}.glimpse-hud-popup-section ~ *{border-left:1px solid #999 !important}.glimpse-hud-popup-section.-ajax{-ms-flex-positive:1 !important;flex-grow:1 !important}.glimpse-hud-popup-section:last-of-type{padding-right:10px !important}.glimpse-hud-field .glimpse-hud-field-value{white-space:nowrap !important}.glimpse-hud-field .glimpse-hud-field-listing{padding-bottom:5px !important;padding-top:2px !important;opacity:0.5 !important}.glimpse-hud-field .glimpse-hud-field-listing span{font-size:9px !important;line-height:11px !important;display:block !important}.glimpse-hud-field>.glimpse-hud-field{margin:0 !important;padding:5px 0 0 10px !important}.glimpse-hud-field-label{font-size:11px !important;color:rgba(255,255,255,0.5) !important;margin-bottom:2px !important;white-space:nowrap;text-overflow:ellipsis;display:-ms-flexbox !important;display:flex !important;-ms-flex-direction:row !important;flex-direction:row !important;-ms-flex-align:center !important;align-items:center !important}.glimpse-hud-field-value{font-weight:bold !important}.glimpse-anchor{color:#39f !important;text-decoration:none !important}.glimpse-agent-type-icon,.glimpse-status-icon{display:inline-block !important;height:11px !important;margin-right:2px !important;vertical-align:middle !important}.glimpse-logs svg{height:10px !important;width:10px !important;fill:rgba(255,255,255,0.5) !important}.glimpse-logs.glimpse-hud-popup svg{height:8px !important;width:8px !important}.glimpse-logs .has-value .icon-error{fill:#b03b00 !important}.glimpse-logs .has-value .icon-warn{fill:#f8a800 !important}.glimpse-logs .has-value .icon-info{fill:#1ba1e2 !important}#glimpse-ajax-popup-rows{height:150px !important;max-height:150px !important;width:220px !important;overflow-y:auto !important;padding-right:5px !important}.glimpse-hud-field-listing .glimpse-status-icon{height:9px !important}.glimpse-expand-button,.glimpse-hud-popup-section--arrow{position:relative !important;padding:0 8px !important}.glimpse-expand-button .icon-arrow,.glimpse-hud-popup-section--arrow .icon-arrow{display:block;width:8px !important;height:8px !important;margin-left:-4px !important;margin-top:-4px !important;position:absolute !important;top:50% !important;left:50% !important;display:block !important;transform:rotate(180deg) !important;fill:white !important}.glimpse-expand-button:hover,.glimpse-hud-popup-section--arrow:hover{background-color:#3c3c3c !important;cursor:pointer !important}.glimpse-hud-popup-section--arrow{background-color:#3c3c3c !important}.glimpse-hud-popup-section--arrow .icon-arrow{transform:rotate(0) !important}.glimpse-hud-popup-section--arrow:hover{background-color:#353535 !important;cursor:pointer !important}.icon{fill:inherit}\\n\", \"\"]);\n\n// exports\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 19 */
/* unknown exports provided */
/* all exports used */
/*!**************************************!*\
  !*** ./~/css-loader/lib/css-base.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap) {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n  var base64 = new Buffer(JSON.stringify(sourceMap)).toString('base64');\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n  return '/*# ' + data + ' */';\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../buffer/index.js */ 16).Buffer))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzP2RhMDQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0dmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cdFx0XHRpZihpdGVtWzJdKSB7XG5cdFx0XHRcdHJldHVybiBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiBjb250ZW50O1xuXHRcdFx0fVxuXHRcdH0pLmpvaW4oXCJcIik7XG5cdH07XG5cblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3Rcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcblx0XHR9XG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRyZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG5cdHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcblx0dmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXHRpZiAoIWNzc01hcHBpbmcpIHtcblx0XHRyZXR1cm4gY29udGVudDtcblx0fVxuXG5cdGlmICh1c2VTb3VyY2VNYXApIHtcblx0XHR2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcblx0XHR2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuXHRcdFx0cmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJ1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG5cdH1cblxuXHRyZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufVxuXG4vLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIHZhciBiYXNlNjQgPSBuZXcgQnVmZmVyKEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbiAgdmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcblxuICByZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXG4vLyBtb2R1bGUgaWQgPSAxOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 20 */
/* unknown exports provided */
/* all exports used */
/*!****************************!*\
  !*** ./~/ieee754/index.js ***!
  \****************************/
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2llZWU3NTQvaW5kZXguanM/NzBmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLnJlYWQgPSBmdW5jdGlvbiAoYnVmZmVyLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbVxuICB2YXIgZUxlbiA9IG5CeXRlcyAqIDggLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIG5CaXRzID0gLTdcbiAgdmFyIGkgPSBpc0xFID8gKG5CeXRlcyAtIDEpIDogMFxuICB2YXIgZCA9IGlzTEUgPyAtMSA6IDFcbiAgdmFyIHMgPSBidWZmZXJbb2Zmc2V0ICsgaV1cblxuICBpICs9IGRcblxuICBlID0gcyAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBzID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBlTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSBlICogMjU2ICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgbSA9IGUgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgZSA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gbUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBtID0gbSAqIDI1NiArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhc1xuICB9IGVsc2UgaWYgKGUgPT09IGVNYXgpIHtcbiAgICByZXR1cm4gbSA/IE5hTiA6ICgocyA/IC0xIDogMSkgKiBJbmZpbml0eSlcbiAgfSBlbHNlIHtcbiAgICBtID0gbSArIE1hdGgucG93KDIsIG1MZW4pXG4gICAgZSA9IGUgLSBlQmlhc1xuICB9XG4gIHJldHVybiAocyA/IC0xIDogMSkgKiBtICogTWF0aC5wb3coMiwgZSAtIG1MZW4pXG59XG5cbmV4cG9ydHMud3JpdGUgPSBmdW5jdGlvbiAoYnVmZmVyLCB2YWx1ZSwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG0sIGNcbiAgdmFyIGVMZW4gPSBuQnl0ZXMgKiA4IC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBydCA9IChtTGVuID09PSAyMyA/IE1hdGgucG93KDIsIC0yNCkgLSBNYXRoLnBvdygyLCAtNzcpIDogMClcbiAgdmFyIGkgPSBpc0xFID8gMCA6IChuQnl0ZXMgLSAxKVxuICB2YXIgZCA9IGlzTEUgPyAxIDogLTFcbiAgdmFyIHMgPSB2YWx1ZSA8IDAgfHwgKHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDApID8gMSA6IDBcblxuICB2YWx1ZSA9IE1hdGguYWJzKHZhbHVlKVxuXG4gIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgbSA9IGlzTmFOKHZhbHVlKSA/IDEgOiAwXG4gICAgZSA9IGVNYXhcbiAgfSBlbHNlIHtcbiAgICBlID0gTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMilcbiAgICBpZiAodmFsdWUgKiAoYyA9IE1hdGgucG93KDIsIC1lKSkgPCAxKSB7XG4gICAgICBlLS1cbiAgICAgIGMgKj0gMlxuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gY1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIE1hdGgucG93KDIsIDEgLSBlQmlhcylcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKytcbiAgICAgIGMgLz0gMlxuICAgIH1cblxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDBcbiAgICAgIGUgPSBlTWF4XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICh2YWx1ZSAqIGMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gZSArIGVCaWFzXG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSB2YWx1ZSAqIE1hdGgucG93KDIsIGVCaWFzIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IDBcbiAgICB9XG4gIH1cblxuICBmb3IgKDsgbUxlbiA+PSA4OyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBtICYgMHhmZiwgaSArPSBkLCBtIC89IDI1NiwgbUxlbiAtPSA4KSB7fVxuXG4gIGUgPSAoZSA8PCBtTGVuKSB8IG1cbiAgZUxlbiArPSBtTGVuXG4gIGZvciAoOyBlTGVuID4gMDsgYnVmZmVyW29mZnNldCArIGldID0gZSAmIDB4ZmYsIGkgKz0gZCwgZSAvPSAyNTYsIGVMZW4gLT0gOCkge31cblxuICBidWZmZXJbb2Zmc2V0ICsgaSAtIGRdIHw9IHMgKiAxMjhcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9pZWVlNzU0L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAyMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 21 */
/* unknown exports provided */
/* all exports used */
/*!*************************************!*\
  !*** ./~/style-loader/addStyles.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [],\n\tfixUrls = __webpack_require__(/*! ./fixUrls */ 22);\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\toptions.attrs.type = \"text/css\";\n\n\tattachTagAttrs(styleElement, options.attrs);\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\tattachTagAttrs(linkElement, options.attrs);\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction attachTagAttrs(element, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\telement.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement, options);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/* If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls){\n\t\tcss = fixUrls(css);\n\t}\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 22 */
/* unknown exports provided */
/* all exports used */
/*!***********************************!*\
  !*** ./~/style-loader/fixUrls.js ***!
  \***********************************/
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\tvar fixedCss = css.replace(/url *\\( *(.+?) *\\)/g, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3N0eWxlLWxvYWRlci9maXhVcmxzLmpzPzRlMmQiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmwgKlxcKCAqKC4rPykgKlxcKS9nLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcLykvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9zdHlsZS1sb2FkZXIvZml4VXJscy5qc1xuLy8gbW9kdWxlIGlkID0gMjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 23 */
/* unknown exports provided */
/* all exports used */
/*!******************************************!*\
  !*** ./~/uri-templates/uri-templates.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module !== 'undefined' && module.exports){\n\t\tmodule.exports = factory();\n\t} else {\n\t\tglobal.UriTemplate = factory();\n\t}\n})(this, function () {\n\tvar uriTemplateGlobalModifiers = {\n\t\t\"+\": true,\n\t\t\"#\": true,\n\t\t\".\": true,\n\t\t\"/\": true,\n\t\t\";\": true,\n\t\t\"?\": true,\n\t\t\"&\": true\n\t};\n\tvar uriTemplateSuffices = {\n\t\t\"*\": true\n\t};\n\tvar urlEscapedChars = /[:/&?#]/;\n\n\tfunction notReallyPercentEncode(string) {\n\t\treturn encodeURI(string).replace(/%25[0-9][0-9]/g, function (doubleEncoded) {\n\t\t\treturn \"%\" + doubleEncoded.substring(3);\n\t\t});\n\t}\n\n\tfunction isPercentEncoded(string) {\n\t\tstring = string.replace(/%../g, '');\n\t\treturn encodeURIComponent(string) === string;\n\t}\n\n\tfunction uriTemplateSubstitution(spec) {\n\t\tvar modifier = \"\";\n\t\tif (uriTemplateGlobalModifiers[spec.charAt(0)]) {\n\t\t\tmodifier = spec.charAt(0);\n\t\t\tspec = spec.substring(1);\n\t\t}\n\t\tvar separator = \"\";\n\t\tvar prefix = \"\";\n\t\tvar shouldEscape = true;\n\t\tvar showVariables = false;\n\t\tvar trimEmptyString = false;\n\t\tif (modifier == '+') {\n\t\t\tshouldEscape = false;\n\t\t} else if (modifier == \".\") {\n\t\t\tprefix = \".\";\n\t\t\tseparator = \".\";\n\t\t} else if (modifier == \"/\") {\n\t\t\tprefix = \"/\";\n\t\t\tseparator = \"/\";\n\t\t} else if (modifier == '#') {\n\t\t\tprefix = \"#\";\n\t\t\tshouldEscape = false;\n\t\t} else if (modifier == ';') {\n\t\t\tprefix = \";\";\n\t\t\tseparator = \";\",\n\t\t\tshowVariables = true;\n\t\t\ttrimEmptyString = true;\n\t\t} else if (modifier == '?') {\n\t\t\tprefix = \"?\";\n\t\t\tseparator = \"&\",\n\t\t\tshowVariables = true;\n\t\t} else if (modifier == '&') {\n\t\t\tprefix = \"&\";\n\t\t\tseparator = \"&\",\n\t\t\tshowVariables = true;\n\t\t}\n\n\t\tvar varNames = [];\n\t\tvar varList = spec.split(\",\");\n\t\tvar varSpecs = [];\n\t\tvar varSpecMap = {};\n\t\tfor (var i = 0; i < varList.length; i++) {\n\t\t\tvar varName = varList[i];\n\t\t\tvar truncate = null;\n\t\t\tif (varName.indexOf(\":\") != -1) {\n\t\t\t\tvar parts = varName.split(\":\");\n\t\t\t\tvarName = parts[0];\n\t\t\t\ttruncate = parseInt(parts[1]);\n\t\t\t}\n\t\t\tvar suffices = {};\n\t\t\twhile (uriTemplateSuffices[varName.charAt(varName.length - 1)]) {\n\t\t\t\tsuffices[varName.charAt(varName.length - 1)] = true;\n\t\t\t\tvarName = varName.substring(0, varName.length - 1);\n\t\t\t}\n\t\t\tvar varSpec = {\n\t\t\t\ttruncate: truncate,\n\t\t\t\tname: varName,\n\t\t\t\tsuffices: suffices\n\t\t\t};\n\t\t\tvarSpecs.push(varSpec);\n\t\t\tvarSpecMap[varName] = varSpec;\n\t\t\tvarNames.push(varName);\n\t\t}\n\t\tvar subFunction = function (valueFunction) {\n\t\t\tvar result = \"\";\n\t\t\tvar startIndex = 0;\n\t\t\tfor (var i = 0; i < varSpecs.length; i++) {\n\t\t\t\tvar varSpec = varSpecs[i];\n\t\t\t\tvar value = valueFunction(varSpec.name);\n\t\t\t\tif (value == null || (Array.isArray(value) && value.length == 0) || (typeof value == 'object' && Object.keys(value).length == 0)) {\n\t\t\t\t\tstartIndex++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (i == startIndex) {\n\t\t\t\t\tresult += prefix;\n\t\t\t\t} else {\n\t\t\t\t\tresult += (separator || \",\");\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tif (showVariables) {\n\t\t\t\t\t\tresult += varSpec.name + \"=\";\n\t\t\t\t\t}\n\t\t\t\t\tfor (var j = 0; j < value.length; j++) {\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tresult += varSpec.suffices['*'] ? (separator || \",\") : \",\";\n\t\t\t\t\t\t\tif (varSpec.suffices['*'] && showVariables) {\n\t\t\t\t\t\t\t\tresult += varSpec.name + \"=\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(value[j]).replace(/!/g, \"%21\") : notReallyPercentEncode(value[j]);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof value == \"object\") {\n\t\t\t\t\tif (showVariables && !varSpec.suffices['*']) {\n\t\t\t\t\t\tresult += varSpec.name + \"=\";\n\t\t\t\t\t}\n\t\t\t\t\tvar first = true;\n\t\t\t\t\tfor (var key in value) {\n\t\t\t\t\t\tif (!first) {\n\t\t\t\t\t\t\tresult += varSpec.suffices['*'] ? (separator || \",\") : \",\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(key).replace(/!/g, \"%21\") : notReallyPercentEncode(key);\n\t\t\t\t\t\tresult += varSpec.suffices['*'] ? '=' : \",\";\n\t\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(value[key]).replace(/!/g, \"%21\") : notReallyPercentEncode(value[key]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (showVariables) {\n\t\t\t\t\t\tresult += varSpec.name;\n\t\t\t\t\t\tif (!trimEmptyString || value != \"\") {\n\t\t\t\t\t\t\tresult += \"=\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (varSpec.truncate != null) {\n\t\t\t\t\t\tvalue = value.substring(0, varSpec.truncate);\n\t\t\t\t\t}\n\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(value).replace(/!/g, \"%21\"): notReallyPercentEncode(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tvar guessFunction = function (stringValue, resultObj, strict) {\n\t\t\tif (prefix) {\n\t\t\t\tstringValue = stringValue.substring(prefix.length);\n\t\t\t}\n\t\t\tif (varSpecs.length == 1 && varSpecs[0].suffices['*']) {\n\t\t\t\tvar varSpec = varSpecs[0];\n\t\t\t\tvar varName = varSpec.name;\n\t\t\t\tvar arrayValue = varSpec.suffices['*'] ? stringValue.split(separator || \",\") : [stringValue];\n\t\t\t\tvar hasEquals = (shouldEscape && stringValue.indexOf('=') != -1);\t// There's otherwise no way to distinguish between \"{value*}\" for arrays and objects\n\t\t\t\tfor (var i = 1; i < arrayValue.length; i++) {\n\t\t\t\t\tvar stringValue = arrayValue[i];\n\t\t\t\t\tif (hasEquals && stringValue.indexOf('=') == -1) {\n\t\t\t\t\t\t// Bit of a hack - if we're expecting \"=\" for key/value pairs, and values can't contain \"=\", then assume a value has been accidentally split\n\t\t\t\t\t\tarrayValue[i - 1] += (separator || \",\") + stringValue;\n\t\t\t\t\t\tarrayValue.splice(i, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (var i = 0; i < arrayValue.length; i++) {\n\t\t\t\t\tvar stringValue = arrayValue[i];\n\t\t\t\t\tif (shouldEscape && stringValue.indexOf('=') != -1) {\n\t\t\t\t\t\thasEquals = true;\n\t\t\t\t\t}\n\t\t\t\t\tvar innerArrayValue = stringValue.split(\",\");\n\t\t\t\t\tif (innerArrayValue.length == 1) {\n\t\t\t\t\t\tarrayValue[i] = innerArrayValue[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarrayValue[i] = innerArrayValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (showVariables || hasEquals) {\n\t\t\t\t\tvar objectValue = resultObj[varName] || {};\n\t\t\t\t\tfor (var j = 0; j < arrayValue.length; j++) {\n\t\t\t\t\t\tvar innerValue = stringValue;\n\t\t\t\t\t\tif (showVariables && !innerValue) {\n\t\t\t\t\t\t\t// The empty string isn't a valid variable, so if our value is zero-length we have nothing\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (typeof arrayValue[j] == \"string\") {\n\t\t\t\t\t\t\tvar stringValue = arrayValue[j];\n\t\t\t\t\t\t\tvar innerVarName = stringValue.split(\"=\", 1)[0];\n\t\t\t\t\t\t\tvar stringValue = stringValue.substring(innerVarName.length + 1);\n\t\t\t\t\t\t\tif (shouldEscape) {\n\t\t\t\t\t\t\t\tif (strict && !isPercentEncoded(stringValue)) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstringValue = decodeURIComponent(stringValue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinnerValue = stringValue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar stringValue = arrayValue[j][0];\n\t\t\t\t\t\t\tvar innerVarName = stringValue.split(\"=\", 1)[0];\n\t\t\t\t\t\t\tvar stringValue = stringValue.substring(innerVarName.length + 1);\n\t\t\t\t\t\t\tif (shouldEscape) {\n\t\t\t\t\t\t\t\tif (strict && !isPercentEncoded(stringValue)) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstringValue = decodeURIComponent(stringValue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tarrayValue[j][0] = stringValue;\n\t\t\t\t\t\t\tinnerValue = arrayValue[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (shouldEscape) {\n\t\t\t\t\t\t\tif (strict && !isPercentEncoded(innerVarName)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinnerVarName = decodeURIComponent(innerVarName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (objectValue[innerVarName] !== undefined) {\n\t\t\t\t\t\t\tif (Array.isArray(objectValue[innerVarName])) {\n\t\t\t\t\t\t\t\tobjectValue[innerVarName].push(innerValue);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tobjectValue[innerVarName] = [objectValue[innerVarName], innerValue];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobjectValue[innerVarName] = innerValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (Object.keys(objectValue).length == 1 && objectValue[varName] !== undefined) {\n\t\t\t\t\t\tresultObj[varName] = objectValue[varName];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresultObj[varName] = objectValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (shouldEscape) {\n\t\t\t\t\t\tfor (var j = 0; j < arrayValue.length; j++) {\n\t\t\t\t\t\t\tvar innerArrayValue = arrayValue[j];\n\t\t\t\t\t\t\tif (Array.isArray(innerArrayValue)) {\n\t\t\t\t\t\t\t\tfor (var k = 0; k < innerArrayValue.length; k++) {\n\t\t\t\t\t\t\t\t\tif (strict && !isPercentEncoded(innerArrayValue[k])) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tinnerArrayValue[k] = decodeURIComponent(innerArrayValue[k]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (strict && !isPercentEncoded(innerArrayValue)) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tarrayValue[j] = decodeURIComponent(innerArrayValue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (resultObj[varName] !== undefined) {\n\t\t\t\t\t\tif (Array.isArray(resultObj[varName])) {\n\t\t\t\t\t\t\tresultObj[varName] = resultObj[varName].concat(arrayValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresultObj[varName] = [resultObj[varName]].concat(arrayValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (arrayValue.length == 1 && !varSpec.suffices['*']) {\n\t\t\t\t\t\t\tresultObj[varName] = arrayValue[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresultObj[varName] = arrayValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar arrayValue = (varSpecs.length == 1) ? [stringValue] : stringValue.split(separator || \",\");\n\t\t\t\tvar specIndexMap = {};\n\t\t\t\tfor (var i = 0; i < arrayValue.length; i++) {\n\t\t\t\t\t// Try from beginning\n\t\t\t\t\tvar firstStarred = 0;\n\t\t\t\t\tfor (; firstStarred < varSpecs.length - 1 && firstStarred < i; firstStarred++) {\n\t\t\t\t\t\tif (varSpecs[firstStarred].suffices['*']) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (firstStarred == i) {\n\t\t\t\t\t\t// The first [i] of them have no \"*\" suffix\n\t\t\t\t\t\tspecIndexMap[i] = i;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Try from the end\n\t\t\t\t\t\tfor (var lastStarred = varSpecs.length - 1; lastStarred > 0 && (varSpecs.length - lastStarred) < (arrayValue.length - i); lastStarred--) {\n\t\t\t\t\t\t\tif (varSpecs[lastStarred].suffices['*']) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((varSpecs.length - lastStarred) == (arrayValue.length - i)) {\n\t\t\t\t\t\t\t// The last [length - i] of them have no \"*\" suffix\n\t\t\t\t\t\t\tspecIndexMap[i] = lastStarred;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Just give up and use the first one\n\t\t\t\t\tspecIndexMap[i] = firstStarred;\n\t\t\t\t}\n\t\t\t\tfor (var i = 0; i < arrayValue.length; i++) {\n\t\t\t\t\tvar stringValue = arrayValue[i];\n\t\t\t\t\tif (!stringValue && showVariables) {\n\t\t\t\t\t\t// The empty string isn't a valid variable, so if our value is zero-length we have nothing\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar innerArrayValue = stringValue.split(\",\");\n\t\t\t\t\tvar hasEquals = false;\n\n\t\t\t\t\tif (showVariables) {\n\t\t\t\t\t\tvar stringValue = innerArrayValue[0]; // using innerArrayValue\n\t\t\t\t\t\tvar varName = stringValue.split(\"=\", 1)[0];\n\t\t\t\t\t\tvar stringValue = stringValue.substring(varName.length + 1);\n\t\t\t\t\t\tinnerArrayValue[0] = stringValue;\n\t\t\t\t\t\tvar varSpec = varSpecMap[varName] || varSpecs[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar varSpec = varSpecs[specIndexMap[i]];\n\t\t\t\t\t\tvar varName = varSpec.name;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var j = 0; j < innerArrayValue.length; j++) {\n\t\t\t\t\t\tif (shouldEscape) {\n\t\t\t\t\t\t\tif (strict && !isPercentEncoded(innerArrayValue[j])) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinnerArrayValue[j] = decodeURIComponent(innerArrayValue[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((showVariables || varSpec.suffices['*'])&& resultObj[varName] !== undefined) {\n\t\t\t\t\t\tif (Array.isArray(resultObj[varName])) {\n\t\t\t\t\t\t\tresultObj[varName] = resultObj[varName].concat(innerArrayValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresultObj[varName] = [resultObj[varName]].concat(innerArrayValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (innerArrayValue.length == 1 && !varSpec.suffices['*']) {\n\t\t\t\t\t\t\tresultObj[varName] = innerArrayValue[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresultObj[varName] = innerArrayValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 1;\n\t\t};\n\t\treturn {\n\t\t\tvarNames: varNames,\n\t\t\tprefix: prefix,\n\t\t\tsubstitution: subFunction,\n\t\t\tunSubstitution: guessFunction\n\t\t};\n\t}\n\n\tfunction UriTemplate(template) {\n\t\tif (!(this instanceof UriTemplate)) {\n\t\t\treturn new UriTemplate(template);\n\t\t}\n\t\tvar parts = template.split(\"{\");\n\t\tvar textParts = [parts.shift()];\n\t\tvar prefixes = [];\n\t\tvar substitutions = [];\n\t\tvar unSubstitutions = [];\n\t\tvar varNames = [];\n\t\twhile (parts.length > 0) {\n\t\t\tvar part = parts.shift();\n\t\t\tvar spec = part.split(\"}\")[0];\n\t\t\tvar remainder = part.substring(spec.length + 1);\n\t\t\tvar funcs = uriTemplateSubstitution(spec);\n\t\t\tsubstitutions.push(funcs.substitution);\n\t\t\tunSubstitutions.push(funcs.unSubstitution);\n\t\t\tprefixes.push(funcs.prefix);\n\t\t\ttextParts.push(remainder);\n\t\t\tvarNames = varNames.concat(funcs.varNames);\n\t\t}\n\t\tthis.fill = function (valueFunction) {\n\t\t\tif (valueFunction && typeof valueFunction !== 'function') {\n\t\t\t\tvar value = valueFunction;\n\t\t\t\tvalueFunction = function (varName) {\n\t\t\t\t\treturn value[varName];\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar result = textParts[0];\n\t\t\tfor (var i = 0; i < substitutions.length; i++) {\n\t\t\t\tvar substitution = substitutions[i];\n\t\t\t\tresult += substitution(valueFunction);\n\t\t\t\tresult += textParts[i + 1];\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tthis.fromUri = function (substituted, options) {\n\t\t\toptions = options || {};\n\t\t\tvar result = {};\n\t\t\tfor (var i = 0; i < textParts.length; i++) {\n\t\t\t\tvar part = textParts[i];\n\t\t\t\tif (substituted.substring(0, part.length) !== part) {\n\t\t\t\t\treturn /*undefined*/;\n\t\t\t\t}\n\t\t\t\tsubstituted = substituted.substring(part.length);\n\t\t\t\tif (i >= textParts.length - 1) {\n\t\t\t\t\t// We've run out of input - is there any template left?\n\t\t\t\t\tif (substituted == \"\") {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn /*undefined*/;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar prefix = prefixes[i];\n\t\t\t\tif (prefix && substituted.substring(0, prefix.length) !== prefix) {\n\t\t\t\t\t// All values are optional - if we have a prefix and it doesn't match, move along\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Find the next part to un-substitute\n\t\t\t\tvar nextPart = textParts[i + 1];\n\t\t\t\tvar offset = i;\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (offset == textParts.length - 2) {\n\t\t\t\t\t\tvar endPart = substituted.substring(substituted.length - nextPart.length);\n\t\t\t\t\t\tif (endPart !== nextPart) {\n\t\t\t\t\t\t\treturn /*undefined*/;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar stringValue = substituted.substring(0, substituted.length - nextPart.length);\n\t\t\t\t\t\tsubstituted = endPart;\n\t\t\t\t\t} else if (nextPart) {\n\t\t\t\t\t\tvar nextPartPos = substituted.indexOf(nextPart);\n\t\t\t\t\t\tvar stringValue = substituted.substring(0, nextPartPos);\n\t\t\t\t\t\tsubstituted = substituted.substring(nextPartPos);\n\t\t\t\t\t} else if (prefixes[offset + 1]) {\n\t\t\t\t\t\tvar nextPartPos = substituted.indexOf(prefixes[offset + 1]);\n\t\t\t\t\t\tif (nextPartPos === -1) nextPartPos = substituted.length;\n\t\t\t\t\t\tvar stringValue = substituted.substring(0, nextPartPos);\n\t\t\t\t\t\tsubstituted = substituted.substring(nextPartPos);\n\t\t\t\t\t} else if (textParts.length > offset + 2) {\n\t\t\t\t\t\t// If the separator between this variable and the next is blank (with no prefix), continue onwards\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t\tnextPart = textParts[offset + 1];\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar stringValue = substituted;\n\t\t\t\t\t\tsubstituted = \"\";\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!unSubstitutions[i](stringValue, result, options.strict)) {\n\t\t\t\t\treturn /*undefined*/;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\tthis.varNames = varNames;\n\t\tthis.template = template;\n\t}\n\tUriTemplate.prototype = {\n\t\ttoString: function () {\n\t\t\treturn this.template;\n\t\t},\n\t\tfillFromObject: function (obj) {\n\t\t\treturn this.fill(obj);\n\t\t},\n\t\ttest: function (uri, options) {\n\t\t\treturn !!this.fromUri(uri, options)\n\t\t}\n\t};\n\n\treturn UriTemplate;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 24 */
/* unknown exports provided */
/* all exports used */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XHJcblxyXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxyXG5nID0gKGZ1bmN0aW9uKCkge1xyXG5cdHJldHVybiB0aGlzO1xyXG59KSgpO1xyXG5cclxudHJ5IHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcclxuXHRnID0gZyB8fCBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCkgfHwgKDEsZXZhbCkoXCJ0aGlzXCIpO1xyXG59IGNhdGNoKGUpIHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxyXG5cdGlmKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpXHJcblx0XHRnID0gd2luZG93O1xyXG59XHJcblxyXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXHJcbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXHJcbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZztcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzXG4vLyBtb2R1bGUgaWQgPSAyNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 25 */
/* unknown exports provided */
/* all exports used */
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// DEV TIME CODE\nif (false) {\n    require('fake');\n}\n// DEV TIME CODE\n__webpack_require__(/*! ./index.scss */ 11);\n\nvar summaryRepository = __webpack_require__(/*! ./repository/summary */ 2);\nvar versionView = __webpack_require__(/*! ./views/version */ 10);\nvar openView = __webpack_require__(/*! ./views/open */ 4);\nvar timingView = __webpack_require__(/*! ./views/timing */ 9);\nvar ajaxView = __webpack_require__(/*! ./views/ajax */ 5);\nvar dataView = __webpack_require__(/*! ./views/data */ 6);\nvar logsView = __webpack_require__(/*! ./views/logs */ 8);\nvar expandButtonView = __webpack_require__(/*! ./views/expand-button-view */ 7);\nvar util = __webpack_require__(/*! ./lib/util */ 1);\n\nvar state = {\n    expanded: util.localGet('expanded', false)\n};\n\nfunction render(state) {\n    return '\\n        <div class=\"glimpse-hud\">\\n            <div class=\"glimpse-hud-data\" data-glimpse-expanded=\"' + state.expanded + '\">\\n                ' + versionView.render() + '\\n                ' + expandButtonView.render() + '\\n                ' + timingView.render() + '\\n                ' + logsView.render() + '\\n                ' + dataView.render() + '\\n                ' + ajaxView.render() + '\\n                <div class=\"glimpse-hud-popup\">\\n                    ' + expandButtonView.renderPopup() + '\\n                    ' + timingView.renderPopup() + '\\n                    ' + logsView.renderPopup() + '\\n                    ' + dataView.renderPopup() + '\\n                    ' + ajaxView.renderPopup() + '\\n                </div>\\n            </div>\\n            ' + openView.render() + '\\n        </div>\\n    ';\n}\n\nfunction postRender() {\n    var hudData = document.querySelector('.glimpse-hud-data');\n    var expandButton = document.querySelector('#js-glimpse-expand-button');\n    var collapseButton = document.querySelector('#js-glimpse-collapse-button');\n\n    if (!hudData) {\n        // element does not exist yet\n        return;\n    }\n\n    ajaxView.postRender();\n    logsView.postRender();\n\n    var setOpenState = function setOpenState(panelState) {\n        util.localSet(state, 'expanded', panelState, function () {\n            hudData.setAttribute('data-glimpse-expanded', panelState);\n        });\n    };\n\n    expandButton.addEventListener('click', function () {\n        setOpenState(true);\n    });\n    collapseButton.addEventListener('click', function () {\n        setOpenState(false);\n    });\n}\n\nfunction preInit(initPromise) {\n    dataView.preInit(initPromise);\n}\n\nfunction init() {\n    // setup init promise\n    var promise = new Promise(function (resolve, reject) {\n        var timeout = 1;\n        var onTimeout = function onTimeout() {\n            if (document.readyState === 'complete') {\n                // allow components to provide content which they want to be shown in initial render\n                var content = render(state);\n\n                var container = document.createElement('div');\n                container.innerHTML = content;\n                document.body.appendChild(container);\n\n                // allow components hook post HUD being inserted into the dom\n                postRender();\n\n                // resolves the promise and pass through the container for future usage\n                resolve(container);\n            } else {\n                setTimeout(onTimeout, timeout *= 2);\n            }\n        };\n\n        setTimeout(onTimeout);\n    });\n\n    // allow components hook before any other hud logic running\n    preInit(promise);\n}\n\ninit();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2luZGV4LmpzPzFmZGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gREVWIFRJTUUgQ09ERVxuaWYgKEZBS0VfU0VSVkVSKSB7XG4gICAgcmVxdWlyZSgnZmFrZScpO1xufVxuLy8gREVWIFRJTUUgQ09ERVxucmVxdWlyZSgnLi9pbmRleC5zY3NzJyk7XG5cbnZhciBzdW1tYXJ5UmVwb3NpdG9yeSA9IHJlcXVpcmUoJy4vcmVwb3NpdG9yeS9zdW1tYXJ5Jyk7XG52YXIgdmVyc2lvblZpZXcgPSByZXF1aXJlKCcuL3ZpZXdzL3ZlcnNpb24nKTtcbnZhciBvcGVuVmlldyA9IHJlcXVpcmUoJy4vdmlld3Mvb3BlbicpO1xudmFyIHRpbWluZ1ZpZXcgPSByZXF1aXJlKCcuL3ZpZXdzL3RpbWluZycpO1xudmFyIGFqYXhWaWV3ID0gcmVxdWlyZSgnLi92aWV3cy9hamF4Jyk7XG52YXIgZGF0YVZpZXcgPSByZXF1aXJlKCcuL3ZpZXdzL2RhdGEnKTtcbnZhciBsb2dzVmlldyA9IHJlcXVpcmUoJy4vdmlld3MvbG9ncycpO1xudmFyIGV4cGFuZEJ1dHRvblZpZXcgPSByZXF1aXJlKCcuL3ZpZXdzL2V4cGFuZC1idXR0b24tdmlldycpO1xudmFyIHV0aWwgPSByZXF1aXJlKCcuL2xpYi91dGlsJyk7XG5cbmNvbnN0IHN0YXRlID0ge1xuICAgIGV4cGFuZGVkOiB1dGlsLmxvY2FsR2V0KCdleHBhbmRlZCcsIGZhbHNlKVxufTtcblxuZnVuY3Rpb24gcmVuZGVyKHN0YXRlKSB7XG4gICAgcmV0dXJuIGBcbiAgICAgICAgPGRpdiBjbGFzcz1cImdsaW1wc2UtaHVkXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2xpbXBzZS1odWQtZGF0YVwiIGRhdGEtZ2xpbXBzZS1leHBhbmRlZD1cIiR7c3RhdGUuZXhwYW5kZWR9XCI+XG4gICAgICAgICAgICAgICAgJHt2ZXJzaW9uVmlldy5yZW5kZXIoKX1cbiAgICAgICAgICAgICAgICAke2V4cGFuZEJ1dHRvblZpZXcucmVuZGVyKCl9XG4gICAgICAgICAgICAgICAgJHt0aW1pbmdWaWV3LnJlbmRlcigpfVxuICAgICAgICAgICAgICAgICR7bG9nc1ZpZXcucmVuZGVyKCl9XG4gICAgICAgICAgICAgICAgJHtkYXRhVmlldy5yZW5kZXIoKX1cbiAgICAgICAgICAgICAgICAke2FqYXhWaWV3LnJlbmRlcigpfVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnbGltcHNlLWh1ZC1wb3B1cFwiPlxuICAgICAgICAgICAgICAgICAgICAke2V4cGFuZEJ1dHRvblZpZXcucmVuZGVyUG9wdXAoKX1cbiAgICAgICAgICAgICAgICAgICAgJHt0aW1pbmdWaWV3LnJlbmRlclBvcHVwKCl9XG4gICAgICAgICAgICAgICAgICAgICR7bG9nc1ZpZXcucmVuZGVyUG9wdXAoKX1cbiAgICAgICAgICAgICAgICAgICAgJHtkYXRhVmlldy5yZW5kZXJQb3B1cCgpfVxuICAgICAgICAgICAgICAgICAgICAke2FqYXhWaWV3LnJlbmRlclBvcHVwKCl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICR7b3BlblZpZXcucmVuZGVyKCl9XG4gICAgICAgIDwvZGl2PlxuICAgIGA7XG59XG5cbmZ1bmN0aW9uIHBvc3RSZW5kZXIoKSB7XG4gICAgdmFyIGh1ZERhdGEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ2xpbXBzZS1odWQtZGF0YScpO1xuICAgIHZhciBleHBhbmRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjanMtZ2xpbXBzZS1leHBhbmQtYnV0dG9uJyk7XG4gICAgdmFyIGNvbGxhcHNlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2pzLWdsaW1wc2UtY29sbGFwc2UtYnV0dG9uJyk7XG5cbiAgICBpZiAoIWh1ZERhdGEpIHtcbiAgICAgICAgLy8gZWxlbWVudCBkb2VzIG5vdCBleGlzdCB5ZXRcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGFqYXhWaWV3LnBvc3RSZW5kZXIoKTtcbiAgICBsb2dzVmlldy5wb3N0UmVuZGVyKCk7XG5cbiAgICB2YXIgc2V0T3BlblN0YXRlID0gZnVuY3Rpb24ocGFuZWxTdGF0ZSkge1xuICAgICAgdXRpbC5sb2NhbFNldChzdGF0ZSwgJ2V4cGFuZGVkJywgcGFuZWxTdGF0ZSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaHVkRGF0YS5zZXRBdHRyaWJ1dGUoJ2RhdGEtZ2xpbXBzZS1leHBhbmRlZCcsIHBhbmVsU3RhdGUpO1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIGV4cGFuZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkgeyBzZXRPcGVuU3RhdGUodHJ1ZSk7IH0pO1xuICAgIGNvbGxhcHNlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7IHNldE9wZW5TdGF0ZShmYWxzZSk7IH0pO1xufVxuXG5mdW5jdGlvbiBwcmVJbml0KGluaXRQcm9taXNlKSB7XG4gICAgZGF0YVZpZXcucHJlSW5pdChpbml0UHJvbWlzZSk7XG59XG5cbmZ1bmN0aW9uIGluaXQoKSB7XG4gICAgLy8gc2V0dXAgaW5pdCBwcm9taXNlXG4gICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBsZXQgdGltZW91dCA9IDE7XG4gICAgICAgIGNvbnN0IG9uVGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICdjb21wbGV0ZScpIHtcbiAgICAgICAgICAgICAgICAvLyBhbGxvdyBjb21wb25lbnRzIHRvIHByb3ZpZGUgY29udGVudCB3aGljaCB0aGV5IHdhbnQgdG8gYmUgc2hvd24gaW4gaW5pdGlhbCByZW5kZXJcbiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gcmVuZGVyKHN0YXRlKTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSBjb250ZW50O1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcblxuICAgICAgICAgICAgICAgIC8vIGFsbG93IGNvbXBvbmVudHMgaG9vayBwb3N0IEhVRCBiZWluZyBpbnNlcnRlZCBpbnRvIHRoZSBkb21cbiAgICAgICAgICAgICAgICBwb3N0UmVuZGVyKCk7XG5cbiAgICAgICAgICAgICAgICAvLyByZXNvbHZlcyB0aGUgcHJvbWlzZSBhbmQgcGFzcyB0aHJvdWdoIHRoZSBjb250YWluZXIgZm9yIGZ1dHVyZSB1c2FnZVxuICAgICAgICAgICAgICAgIHJlc29sdmUoY29udGFpbmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQob25UaW1lb3V0LCB0aW1lb3V0ICo9IDIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgc2V0VGltZW91dChvblRpbWVvdXQpO1xuICAgIH0pO1xuXG4gICAgLy8gYWxsb3cgY29tcG9uZW50cyBob29rIGJlZm9yZSBhbnkgb3RoZXIgaHVkIGxvZ2ljIHJ1bm5pbmdcbiAgICBwcmVJbml0KHByb21pc2UpO1xufVxuXG5pbml0KCk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2luZGV4LmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUdBO0FBQ0E7QUFvQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ })
/******/ ]);